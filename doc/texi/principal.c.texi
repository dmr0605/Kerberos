@subheading shishi_principal_default_guess
@anchor{shishi_principal_default_guess}
@deftypefun {char *} {shishi_principal_default_guess} ( @var{void})

Guesses the principal name for the user, looking at environment
variables SHISHI_USER and USER, or if that fails, returns the
string "user".

@strong{Return value:} Returns guessed default principal for user as a
string that has to be deallocated with @code{free()} by the caller.
@end deftypefun

@subheading shishi_principal_default
@anchor{shishi_principal_default}
@deftypefun {const char *} {shishi_principal_default} (Shishi * @var{handle})
@var{handle}: Shishi library handle create by @code{shishi_init()}.

The default principal name is the name in the environment variable
USER, but can be overridden by specifying the environment variable
SHISHI_USER.

@strong{Return value:} Returns the default principal name used in the
library.  (Not a copy of it, so don't modify or deallocate it.)
@end deftypefun

@subheading shishi_principal_default_set
@anchor{shishi_principal_default_set}
@deftypefun {void} {shishi_principal_default_set} (Shishi * @var{handle}, const char * @var{principal})
@var{handle}: Shishi library handle create by @code{shishi_init()}.

@var{principal}: string with new default principal name, or NULL to
reset to default.

Set the default realm used in the library.  The string is copied
into the library, so you can dispose of the variable immediately
after calling this function.
@end deftypefun

@subheading shishi_parse_name
@anchor{shishi_parse_name}
@deftypefun {int} {shishi_parse_name} (Shishi * @var{handle}, const char * @var{name}, char ** @var{principal}, char ** @var{realm})
@var{handle}: Shishi library handle create by @code{shishi_init()}.

@var{name}: Input principal name string, e.g. imap/mail.gnu.org@code{GNU}.ORG.

@var{principal}: newly allocated output string with principal name.

@var{realm}: newly allocated output string with realm name.

Split up principal name (e.g., "simon@code{JOSEFSSON}.ORG") into two
newly allocated strings, the principal ("simon") and realm
("JOSEFSSON.ORG").  If there is no realm part in NAME, REALM is set
to NULL.

@strong{Return value:} Returns SHISHI_INVALID_PRINCIPAL_NAME if NAME is NULL
or ends with the escape character "\", or SHISHI_OK iff
successful
@end deftypefun

@subheading shishi_principal_name
@anchor{shishi_principal_name}
@deftypefun {int} {shishi_principal_name} (Shishi * @var{handle}, Shishi_asn1 @var{namenode}, const char * @var{namefield}, char ** @var{out}, size_t * @var{outlen})
@var{handle}: Shishi library handle create by @code{shishi_init()}.

@var{namenode}: ASN.1 structure with principal in @code{namefield}.

@var{namefield}: name of field in @code{namenode} containing principal name.

@var{out}: pointer to newly allocated zero terminated string containing
principal name.  May be @code{NULL} (to only populate @code{outlen}).

@var{outlen}: pointer to length of @code{out} on output, excluding terminating
zero.  May be @code{NULL} (to only populate @code{out}).

Represent principal name in ASN.1 structure as zero-terminated
string.  The string is allocate by this function, and it is the
responsibility of the caller to deallocate it.  Note that the
output length @code{outlen} does not include the terminating zero.

@strong{Return value:} Returns SHISHI_OK iff successful.
@end deftypefun

@subheading shishi_principal_name_realm
@anchor{shishi_principal_name_realm}
@deftypefun {int} {shishi_principal_name_realm} (Shishi * @var{handle}, Shishi_asn1 @var{namenode}, const char * @var{namefield}, Shishi_asn1 @var{realmnode}, const char * @var{realmfield}, char ** @var{out}, size_t * @var{outlen})
@var{handle}: Shishi library handle create by @code{shishi_init()}.

@var{namenode}: ASN.1 structure with principal name in @code{namefield}.

@var{namefield}: name of field in @code{namenode} containing principal name.

@var{realmnode}: ASN.1 structure with principal realm in @code{realmfield}.

@var{realmfield}: name of field in @code{realmnode} containing principal realm.

@var{out}: pointer to newly allocated zero terminated string containing
principal name.  May be @code{NULL} (to only populate @code{outlen}).

@var{outlen}: pointer to length of @code{out} on output, excluding terminating
zero.  May be @code{NULL} (to only populate @code{out}).

Represent principal name and realm in ASN.1 structure as
zero-terminated string.  The string is allocate by this function,
and it is the responsibility of the caller to deallocate it.  Note
that the output length @code{outlen} does not include the terminating
zero.

@strong{Return value:} Returns SHISHI_OK iff successful.
@end deftypefun

@subheading shishi_principal_name_set
@anchor{shishi_principal_name_set}
@deftypefun {int} {shishi_principal_name_set} (Shishi * @var{handle}, Shishi_asn1 @var{namenode}, const char * @var{namefield}, Shishi_name_type @var{name_type}, const char * [] @var{name})
@var{handle}: shishi handle as allocated by @code{shishi_init()}.

@var{namenode}: ASN.1 structure with principal in @code{namefield}.

@var{namefield}: name of field in namenode containing principal name.

@var{name_type}: type of principial, see Shishi_name_type, usually
SHISHI_NT_UNKNOWN.

@var{name}: zero-terminated input array with principal name.

Set the given principal name field to given name.

@strong{Return value:} Returns SHISHI_OK iff successful.
@end deftypefun

@subheading shishi_principal_set
@anchor{shishi_principal_set}
@deftypefun {int} {shishi_principal_set} (Shishi * @var{handle}, Shishi_asn1 @var{namenode}, const char * @var{namefield}, const char * @var{name})
@var{handle}: shishi handle as allocated by @code{shishi_init()}.

@var{namenode}: ASN.1 structure with principal in @code{namefield}.

@var{namefield}: name of field in namenode containing principal name.

@var{name}: zero-terminated string with principal name on RFC 1964 form.

Set principal name field in ASN.1 structure to given name.

@strong{Return value:} Returns SHISHI_OK iff successful.
@end deftypefun

@subheading shishi_derive_default_salt
@anchor{shishi_derive_default_salt}
@deftypefun {int} {shishi_derive_default_salt} (Shishi * @var{handle}, const char * @var{name}, char ** @var{salt})
@var{handle}: shishi handle as allocated by @code{shishi_init()}.

@var{name}: principal name of user.

@var{salt}: output variable with newly allocated salt string.

Derive the default salt from a principal.  The default salt is the
concatenation of the decoded realm and principal.

@strong{Return value:} Return SHISHI_OK if successful.
@end deftypefun

@subheading shishi_server_for_local_service
@anchor{shishi_server_for_local_service}
@deftypefun {char *} {shishi_server_for_local_service} (Shishi * @var{handle}, const char * @var{service})
@var{handle}: shishi handle as allocated by @code{shishi_init()}.

@var{service}: zero terminated string with name of service, e.g., "host".

Construct a service principal (e.g., "imap/yxa.extuno.com") based
on supplied service name (i.e., "imap") and the system hostname as
returned by @code{hostname()} (i.e., "yxa.extundo.com").  The string must
be deallocated by the caller.

@strong{Return value:} Return newly allocated service name string.
@end deftypefun

