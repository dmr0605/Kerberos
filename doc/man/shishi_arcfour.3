.\" DO NOT MODIFY THIS FILE!  It was generated by gdoc.
.TH "shishi_arcfour" 3 "0.0.39" "shishi" "shishi"
.SH NAME
shishi_arcfour \- API function
.SH SYNOPSIS
.B #include <shishi.h>
.sp
.BI "int shishi_arcfour(Shishi * " handle ", int " decryptp ", const char * " key ", size_t " keylen ", const char " iv[258] ", char * " ivout[258] ", const char * " in ", size_t " inlen ", char ** " out ");"
.SH ARGUMENTS
.IP "Shishi * handle" 12
shishi handle as allocated by \fBshishi_init()\fP.
.IP "int decryptp" 12
0 to indicate encryption, non\-0 to indicate decryption.
.IP "const char * key" 12
input character array with key to use.
.IP "size_t keylen" 12
length of input key array.
.IP "const char iv[258]" 12
.IP "char * ivout[258]" 12
.IP "const char * in" 12
input character array of data to encrypt/decrypt.
.IP "size_t inlen" 12
length of input character array of data to encrypt/decrypt.
.IP "char ** out" 12
newly allocated character array with encrypted/decrypted data.
.SH "DESCRIPTION"
Encrypt or decrypt data (depending on \fIdecryptp\fP) using ARCFOUR.
The \fIout\fP buffer must be deallocated by the caller.

The "initialization vector" used here is the concatenation of the
sbox and i and j, and is thus always of size 256 + 1 + 1.  This is
a slight abuse of terminology, and assumes you know what you are
doing.  Don't use it if you can avoid to.
.SH "RETURN VALUE"
Returns SHISHI_OK iff successful.
.SH "REPORTING BUGS"
Report bugs to <bug-shishi@gnu.org>.
.SH COPYRIGHT
Copyright \(co 2002-2008 Simon Josefsson.
.br
Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
.SH "SEE ALSO"
The full documentation for
.B shishi
is maintained as a Texinfo manual.  If the
.B info
and
.B shishi
programs are properly installed at your site, the command
.IP
.B info shishi
.PP
should give you access to the complete manual.
