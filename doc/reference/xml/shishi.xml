<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="shishi-shishi">
<refmeta>
<refentrytitle role="top_of_page" id="shishi-shishi.top_of_page">shishi</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>SHISHI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>shishi</refname>
<refpurpose></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="shishi-shishi.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
#define             <link linkend="SHISHI-VERSION:CAPS">SHISHI_VERSION</link>
enum                <link linkend="Shishi-rc">Shishi_rc</link>;
enum                <link linkend="Shishi-name-type">Shishi_name_type</link>;
enum                <link linkend="Shishi-padata-type">Shishi_padata_type</link>;
enum                <link linkend="Shishi-tr-type">Shishi_tr_type</link>;
enum                <link linkend="Shishi-apoptions">Shishi_apoptions</link>;
enum                <link linkend="Shishi-ticketflags">Shishi_ticketflags</link>;
enum                <link linkend="Shishi-KDCOptions">Shishi_KDCOptions</link>;
enum                <link linkend="Shishi-msgtype">Shishi_msgtype</link>;
enum                <link linkend="Shishi-lrtype">Shishi_lrtype</link>;
enum                <link linkend="Shishi-etype">Shishi_etype</link>;
enum                <link linkend="Shishi-cksumtype">Shishi_cksumtype</link>;
enum                <link linkend="Shishi-filetype">Shishi_filetype</link>;
enum                <link linkend="Shishi-outputtype">Shishi_outputtype</link>;
enum                <link linkend="Shishi-authorization">Shishi_authorization</link>;
enum                <link linkend="Shishi-keyusage">Shishi_keyusage</link>;
enum                <link linkend="Shishi-krb-error">Shishi_krb_error</link>;
enum                <link linkend="Shishi-tkts-hintflags">Shishi_tkts_hintflags</link>;
typedef             <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link>;
#define             <link linkend="SHISHI-DNS-IN:CAPS">SHISHI_DNS_IN</link>
#define             <link linkend="SHISHI-DNS-TXT:CAPS">SHISHI_DNS_TXT</link>
#define             <link linkend="SHISHI-DNS-SRV:CAPS">SHISHI_DNS_SRV</link>
typedef             <link linkend="Shishi-dns">Shishi_dns</link>;
typedef             <link linkend="Shishi-dns-srv">Shishi_dns_srv</link>;
typedef             <link linkend="Shishi">Shishi</link>;
typedef             <link linkend="Shishi-tkt">Shishi_tkt</link>;
typedef             <link linkend="Shishi-tkts">Shishi_tkts</link>;
typedef             <link linkend="Shishi-as">Shishi_as</link>;
typedef             <link linkend="Shishi-tgs">Shishi_tgs</link>;
typedef             <link linkend="Shishi-ap">Shishi_ap</link>;
typedef             <link linkend="Shishi-key">Shishi_key</link>;
typedef             <link linkend="Shishi-keys">Shishi_keys</link>;
typedef             <link linkend="Shishi-safe">Shishi_safe</link>;
typedef             <link linkend="Shishi-priv">Shishi_priv</link>;
typedef             <link linkend="Shishi-asn1">Shishi_asn1</link>;
typedef             <link linkend="Shishi-crypto">Shishi_crypto</link>;
#define             <link linkend="SHISHI-GENERALIZEDTIME-LENGTH:CAPS">SHISHI_GENERALIZEDTIME_LENGTH</link>
#define             <link linkend="SHISHI-GENERALIZEDTIMEZ-LENGTH:CAPS">SHISHI_GENERALIZEDTIMEZ_LENGTH</link>
<link linkend="void">void</link>                <link linkend="shishi-alloc-fail-function">shishi_alloc_fail_function</link>          (void);
<link linkend="Shishi">Shishi</link>*             <link linkend="shishi">shishi</link>                              (void);
<link linkend="Shishi">Shishi</link>*             <link linkend="shishi-server">shishi_server</link>                       (void);
<link linkend="void">void</link>                <link linkend="shishi-done">shishi_done</link>                         (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-init">shishi_init</link>                         (<link linkend="Shishi">Shishi</link> **handle);
<link linkend="int">int</link>                 <link linkend="shishi-init-with-paths">shishi_init_with_paths</link>              (<link linkend="Shishi">Shishi</link> **handle,
                                                         const <link linkend="char">char</link> *tktsfile,
                                                         const <link linkend="char">char</link> *systemcfgfile,
                                                         const <link linkend="char">char</link> *usercfgfile);
<link linkend="int">int</link>                 <link linkend="shishi-init-server">shishi_init_server</link>                  (<link linkend="Shishi">Shishi</link> **handle);
<link linkend="int">int</link>                 <link linkend="shishi-init-server-with-paths">shishi_init_server_with_paths</link>       (<link linkend="Shishi">Shishi</link> **handle,
                                                         const <link linkend="char">char</link> *systemcfgfile);
<link linkend="int">int</link>                 <link linkend="shishi-cfg">shishi_cfg</link>                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *option);
<link linkend="int">int</link>                 <link linkend="shishi-cfg-from-file">shishi_cfg_from_file</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *cfg);
<link linkend="int">int</link>                 <link linkend="shishi-cfg-print">shishi_cfg_print</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);
const <link linkend="char">char</link>*         <link linkend="shishi-cfg-default-systemfile">shishi_cfg_default_systemfile</link>       (<link linkend="Shishi">Shishi</link> *handle);
const <link linkend="char">char</link>*         <link linkend="shishi-cfg-default-userdirectory">shishi_cfg_default_userdirectory</link>    (<link linkend="Shishi">Shishi</link> *handle);
const <link linkend="char">char</link>*         <link linkend="shishi-cfg-default-userfile">shishi_cfg_default_userfile</link>         (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="char">char</link>*               <link linkend="shishi-cfg-userdirectory-file">shishi_cfg_userdirectory_file</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *file);
<link linkend="int">int</link>                 <link linkend="shishi-cfg-clientkdcetype">shishi_cfg_clientkdcetype</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> **etypes);
<link linkend="int32-t">int32_t</link>             <link linkend="shishi-cfg-clientkdcetype-fast">shishi_cfg_clientkdcetype_fast</link>      (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-cfg-clientkdcetype-set">shishi_cfg_clientkdcetype_set</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *value);
<link linkend="int">int</link>                 <link linkend="shishi-cfg-authorizationtype-set">shishi_cfg_authorizationtype_set</link>    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *value);
const <link linkend="char">char</link>*         <link linkend="shishi-strerror">shishi_strerror</link>                     (<link linkend="int">int</link> err);
const <link linkend="char">char</link>*         <link linkend="shishi-error">shishi_error</link>                        (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="void">void</link>                <link linkend="shishi-error-clear">shishi_error_clear</link>                  (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="void">void</link>                <link linkend="shishi-error-set">shishi_error_set</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *errstr);
<link linkend="void">void</link>                <link linkend="shishi-error-printf">shishi_error_printf</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);
<link linkend="int">int</link>                 <link linkend="shishi-error-outputtype">shishi_error_outputtype</link>             (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="void">void</link>                <link linkend="shishi-error-set-outputtype">shishi_error_set_outputtype</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> type);
<link linkend="void">void</link>                <link linkend="shishi-info">shishi_info</link>                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);
<link linkend="void">void</link>                <link linkend="shishi-warn">shishi_warn</link>                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);
<link linkend="void">void</link>                <link linkend="shishi-verbose">shishi_verbose</link>                      (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);
<link linkend="char">char</link>*               <link linkend="shishi-realm-default-guess">shishi_realm_default_guess</link>          (void);
const <link linkend="char">char</link>*         <link linkend="shishi-realm-default">shishi_realm_default</link>                (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="void">void</link>                <link linkend="shishi-realm-default-set">shishi_realm_default_set</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *realm);
<link linkend="char">char</link>*               <link linkend="shishi-realm-for-server-file">shishi_realm_for_server_file</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *server);
<link linkend="char">char</link>*               <link linkend="shishi-realm-for-server-dns">shishi_realm_for_server_dns</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *server);
<link linkend="char">char</link>*               <link linkend="shishi-realm-for-server">shishi_realm_for_server</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *server);
<link linkend="char">char</link>*               <link linkend="shishi-principal-default-guess">shishi_principal_default_guess</link>      (void);
const <link linkend="char">char</link>*         <link linkend="shishi-principal-default">shishi_principal_default</link>            (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="void">void</link>                <link linkend="shishi-principal-default-set">shishi_principal_default_set</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *principal);
<link linkend="int">int</link>                 <link linkend="shishi-principal-name">shishi_principal_name</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> namenode,
                                                         const <link linkend="char">char</link> *namefield,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-principal-name-realm">shishi_principal_name_realm</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> namenode,
                                                         const <link linkend="char">char</link> *namefield,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> realmnode,
                                                         const <link linkend="char">char</link> *realmfield,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-principal-name-set">shishi_principal_name_set</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> namenode,
                                                         const <link linkend="char">char</link> *namefield,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *name[]);
<link linkend="int">int</link>                 <link linkend="shishi-principal-set">shishi_principal_set</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> namenode,
                                                         const <link linkend="char">char</link> *namefield,
                                                         const <link linkend="char">char</link> *name);
<link linkend="int">int</link>                 <link linkend="shishi-parse-name">shishi_parse_name</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *name,
                                                         <link linkend="char">char</link> **principal,
                                                         <link linkend="char">char</link> **realm);
<link linkend="int">int</link>                 <link linkend="shishi-derive-default-salt">shishi_derive_default_salt</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *name,
                                                         <link linkend="char">char</link> **salt);
<link linkend="char">char</link>*               <link linkend="shishi-server-for-local-service">shishi_server_for_local_service</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *service);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-ticket">shishi_ticket</link>                       (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-server">shishi_ticket_server</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="char">char</link> **server,
                                                         <link linkend="size-t">size_t</link> *serverlen);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-sname-set">shishi_ticket_sname_set</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         <link linkend="char">char</link> *sname[]);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-srealmserver-set">shishi_ticket_srealmserver_set</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         const <link linkend="char">char</link> *realm,
                                                         const <link linkend="char">char</link> *server);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-set-server">shishi_ticket_set_server</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         const <link linkend="char">char</link> *server);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-realm-get">shishi_ticket_realm_get</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="char">char</link> **realm,
                                                         <link linkend="size-t">size_t</link> *realmlen);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-realm-set">shishi_ticket_realm_set</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         const <link linkend="char">char</link> *realm);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-get-enc-part-etype">shishi_ticket_get_enc_part_etype</link>    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="int32-t">int32_t</link> *etype);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-set-enc-part">shishi_ticket_set_enc_part</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         <link linkend="uint32-t">uint32_t</link> kvno,
                                                         const <link linkend="char">char</link> *buf,
                                                         <link linkend="size-t">size_t</link> buflen);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-add-enc-part">shishi_ticket_add_enc_part</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-decrypt">shishi_ticket_decrypt</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *encticketpart);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-tkt-ticket">shishi_tkt_ticket</link>                   (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="void">void</link>                <link linkend="shishi-tkt-ticket-set">shishi_tkt_ticket_set</link>               (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-tkt-kdcrep">shishi_tkt_kdcrep</link>                   (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-tkt-enckdcreppart">shishi_tkt_enckdcreppart</link>            (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="void">void</link>                <link linkend="shishi-tkt-enckdcreppart-set">shishi_tkt_enckdcreppart_set</link>        (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-tkt-encticketpart">shishi_tkt_encticketpart</link>            (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="void">void</link>                <link linkend="shishi-tkt-encticketpart-set">shishi_tkt_encticketpart_set</link>        (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);
<link linkend="Shishi-key">Shishi_key</link>*         <link linkend="shishi-tkt-key">shishi_tkt_key</link>                      (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-key-set">shishi_tkt_key_set</link>                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-tkt">shishi_tkt</link>                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> **tkt);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tkt2">shishi_tkt2</link>                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep);
<link linkend="void">void</link>                <link linkend="shishi-tkt-pretty-print">shishi_tkt_pretty_print</link>             (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-realm">shishi_tkt_realm</link>                    (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **realm,
                                                         <link linkend="size-t">size_t</link> *realmlen);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-client">shishi_tkt_client</link>                   (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-client-p">shishi_tkt_client_p</link>                 (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         const <link linkend="char">char</link> *client);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-clientrealm">shishi_tkt_clientrealm</link>              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-clientrealm-p">shishi_tkt_clientrealm_p</link>            (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         const <link linkend="char">char</link> *client);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-clientrealm-set">shishi_tkt_clientrealm_set</link>          (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         const <link linkend="char">char</link> *realm,
                                                         const <link linkend="char">char</link> *client);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-serverrealm-set">shishi_tkt_serverrealm_set</link>          (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         const <link linkend="char">char</link> *realm,
                                                         const <link linkend="char">char</link> *server);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-build">shishi_tkt_build</link>                    (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-lastreq">shishi_tkt_lastreq</link>                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **lrtime,
                                                         <link linkend="size-t">size_t</link> *lrtimelen,
                                                         <link linkend="int32-t">int32_t</link> lrtype);
<link linkend="time-t">time_t</link>              <link linkend="shishi-tkt-lastreqc">shishi_tkt_lastreqc</link>                 (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-lrtype">Shishi_lrtype</link> lrtype);
<link linkend="void">void</link>                <link linkend="shishi-tkt-lastreq-pretty-print">shishi_tkt_lastreq_pretty_print</link>     (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-authtime">shishi_tkt_authtime</link>                 (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **authtime,
                                                         <link linkend="size-t">size_t</link> *authtimelen);
<link linkend="time-t">time_t</link>              <link linkend="shishi-tkt-authctime">shishi_tkt_authctime</link>                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-starttime">shishi_tkt_starttime</link>                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **starttime,
                                                         <link linkend="size-t">size_t</link> *starttimelen);
<link linkend="time-t">time_t</link>              <link linkend="shishi-tkt-startctime">shishi_tkt_startctime</link>               (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-endtime">shishi_tkt_endtime</link>                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **endtime,
                                                         <link linkend="size-t">size_t</link> *endtimelen);
<link linkend="time-t">time_t</link>              <link linkend="shishi-tkt-endctime">shishi_tkt_endctime</link>                 (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-renew-till">shishi_tkt_renew_till</link>               (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **renewtilltime,
                                                         <link linkend="size-t">size_t</link> *renewtilllen);
<link linkend="time-t">time_t</link>              <link linkend="shishi-tkt-renew-tillc">shishi_tkt_renew_tillc</link>              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-keytype">shishi_tkt_keytype</link>                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int32-t">int32_t</link> *etype);
<link linkend="int32-t">int32_t</link>             <link linkend="shishi-tkt-keytype-fast">shishi_tkt_keytype_fast</link>             (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-keytype-p">shishi_tkt_keytype_p</link>                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int32-t">int32_t</link> etype);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-server">shishi_tkt_server</link>                   (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **server,
                                                         <link linkend="size-t">size_t</link> *serverlen);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-server-p">shishi_tkt_server_p</link>                 (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         const <link linkend="char">char</link> *server);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-valid-at-time-p">shishi_tkt_valid_at_time_p</link>          (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="time-t">time_t</link> now);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-valid-now-p">shishi_tkt_valid_now_p</link>              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-expired-p">shishi_tkt_expired_p</link>                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-decrypt">shishi_tkt_decrypt</link>                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="void">void</link>                <link linkend="shishi-tkt-done">shishi_tkt_done</link>                     (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-flags">shishi_tkt_flags</link>                    (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="uint32-t">uint32_t</link> *flags);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-flags-set">shishi_tkt_flags_set</link>                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="uint32-t">uint32_t</link> flags);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-flags-add">shishi_tkt_flags_add</link>                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="uint32-t">uint32_t</link> flag);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-forwardable-p">shishi_tkt_forwardable_p</link>            (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-forwarded-p">shishi_tkt_forwarded_p</link>              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-proxiable-p">shishi_tkt_proxiable_p</link>              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-proxy-p">shishi_tkt_proxy_p</link>                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-may-postdate-p">shishi_tkt_may_postdate_p</link>           (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-postdated-p">shishi_tkt_postdated_p</link>              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-invalid-p">shishi_tkt_invalid_p</link>                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-renewable-p">shishi_tkt_renewable_p</link>              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-initial-p">shishi_tkt_initial_p</link>                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-pre-authent-p">shishi_tkt_pre_authent_p</link>            (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-hw-authent-p">shishi_tkt_hw_authent_p</link>             (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-transited-policy-checked-p">shishi_tkt_transited_policy_checked_p</link>
                                                        (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-ok-as-delegate-p">shishi_tkt_ok_as_delegate_p</link>         (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="char">char</link>*               <link linkend="shishi-tkts-default-file-guess">shishi_tkts_default_file_guess</link>      (<link linkend="Shishi">Shishi</link> *handle);
const <link linkend="char">char</link>*         <link linkend="shishi-tkts-default-file">shishi_tkts_default_file</link>            (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="void">void</link>                <link linkend="shishi-tkts-default-file-set">shishi_tkts_default_file_set</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *tktsfile);
<link linkend="Shishi-tkts">Shishi_tkts</link>*        <link linkend="shishi-tkts-default">shishi_tkts_default</link>                 (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-default-to-file">shishi_tkts_default_to_file</link>         (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts);
<link linkend="int">int</link>                 <link linkend="shishi-tkts">shishi_tkts</link>                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-tkts">Shishi_tkts</link> **tkts);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tkts-nth">shishi_tkts_nth</link>                     (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="int">int</link> ticketno);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-size">shishi_tkts_size</link>                    (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-add">shishi_tkts_add</link>                     (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-new">shishi_tkts_new</link>                     (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-remove">shishi_tkts_remove</link>                  (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="int">int</link> ticketno);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-expire">shishi_tkts_expire</link>                  (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-print-for-service">shishi_tkts_print_for_service</link>       (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         const <link linkend="char">char</link> *service);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-print">shishi_tkts_print</link>                   (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-write">shishi_tkts_write</link>                   (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-to-file">shishi_tkts_to_file</link>                 (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-read">shishi_tkts_read</link>                    (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-from-file">shishi_tkts_from_file</link>               (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="void">void</link>                <link linkend="shishi-tkts-done">shishi_tkts_done</link>                    (<link linkend="Shishi-tkts">Shishi_tkts</link> **tkts);
<link linkend="int">int</link>                 <link linkend="shishi-tkt-match-p">shishi_tkt_match_p</link>                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tkts-find">shishi_tkts_find</link>                    (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tkts-find-for-clientserver">shishi_tkts_find_for_clientserver</link>   (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *client,
                                                         const <link linkend="char">char</link> *server);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tkts-find-for-server">shishi_tkts_find_for_server</link>         (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *server);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tkts-get">shishi_tkts_get</link>                     (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tkts-get-tgt">shishi_tkts_get_tgt</link>                 (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tkts-get-tgs">shishi_tkts_get_tgs</link>                 (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tgt);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tkts-get-for-clientserver">shishi_tkts_get_for_clientserver</link>    (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *client,
                                                         const <link linkend="char">char</link> *server);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tkts-get-for-server">shishi_tkts_get_for_server</link>          (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *server);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tkts-get-for-localservicepasswd">shishi_tkts_get_for_localservicepasswd</link>
                                                        (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *service,
                                                         const <link linkend="char">char</link> *passwd);
<link linkend="char">char</link>*               <link linkend="shishi-tkts-default-ccache-guess">shishi_tkts_default_ccache_guess</link>    (<link linkend="Shishi">Shishi</link> *handle);
const <link linkend="char">char</link>*         <link linkend="shishi-tkts-default-ccache">shishi_tkts_default_ccache</link>          (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="void">void</link>                <link linkend="shishi-tkts-default-ccache-set">shishi_tkts_default_ccache_set</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *ccache);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-add-ccache-mem">shishi_tkts_add_ccache_mem</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len,
                                                         <link linkend="Shishi-tkts">Shishi_tkts</link> *tkts);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-add-ccache-file">shishi_tkts_add_ccache_file</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="Shishi-tkts">Shishi_tkts</link> *tkts);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-from-ccache-mem">shishi_tkts_from_ccache_mem</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len,
                                                         <link linkend="Shishi-tkts">Shishi_tkts</link> **outtkts);
<link linkend="int">int</link>                 <link linkend="shishi-tkts-from-ccache-file">shishi_tkts_from_ccache_file</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="Shishi-tkts">Shishi_tkts</link> **outtkts);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-print">shishi_enckdcreppart_print</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-save">shishi_enckdcreppart_save</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-parse">shishi_enckdcreppart_parse</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *enckdcreppart);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-read">shishi_enckdcreppart_read</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *enckdcreppart);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-save">shishi_ticket_save</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-print">shishi_ticket_print</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket);
<link linkend="int">int</link>                 <link linkend="shishi-kdc-print">shishi_kdc_print</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asrep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encasreppart);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-parse">shishi_ticket_parse</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *ticket);
<link linkend="int">int</link>                 <link linkend="shishi-ticket-read">shishi_ticket_read</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *ticket);
<link linkend="int">int</link>                 <link linkend="shishi-etype-info-print">shishi_etype_info_print</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> etypeinfo);
<link linkend="int">int</link>                 <link linkend="shishi-etype-info2-print">shishi_etype_info2_print</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> etypeinfo2);
<link linkend="int">int</link>                 <link linkend="shishi-padata-print">shishi_padata_print</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> padata);
<link linkend="int">int</link>                 <link linkend="shishi-methoddata-print">shishi_methoddata_print</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> methoddata);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-authenticator">shishi_authenticator</link>                (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-set-crealm">shishi_authenticator_set_crealm</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         const <link linkend="char">char</link> *crealm);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-set-cname">shishi_authenticator_set_cname</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *cname[]);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-client-set">shishi_authenticator_client_set</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         const <link linkend="char">char</link> *client);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-ctime">shishi_authenticator_ctime</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="char">char</link> **t);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-ctime-set">shishi_authenticator_ctime_set</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         const <link linkend="char">char</link> *t);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-cusec-get">shishi_authenticator_cusec_get</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="uint32-t">uint32_t</link> *cusec);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-cusec-set">shishi_authenticator_cusec_set</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="uint32-t">uint32_t</link> cusec);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-seqnumber-get">shishi_authenticator_seqnumber_get</link>  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="uint32-t">uint32_t</link> *seqnumber);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-seqnumber-remove">shishi_authenticator_seqnumber_remove</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-seqnumber-set">shishi_authenticator_seqnumber_set</link>  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="uint32-t">uint32_t</link> seqnumber);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-client">shishi_authenticator_client</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-clientrealm">shishi_authenticator_clientrealm</link>    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-remove-cksum">shishi_authenticator_remove_cksum</link>   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-cksum">shishi_authenticator_cksum</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int32-t">int32_t</link> *cksumtype,
                                                         <link linkend="char">char</link> **cksum,
                                                         <link linkend="size-t">size_t</link> *cksumlen);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-set-cksum">shishi_authenticator_set_cksum</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int">int</link> cksumtype,
                                                         <link linkend="char">char</link> *cksum,
                                                         <link linkend="size-t">size_t</link> cksumlen);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-add-cksum">shishi_authenticator_add_cksum</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> datalen);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-add-cksum-type">shishi_authenticator_add_cksum_type</link> (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int">int</link> cksumtype,
                                                         <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> datalen);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-remove-subkey">shishi_authenticator_remove_subkey</link>  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-authenticator-subkey">shishi_authenticator_subkey</link>         (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-get-subkey">shishi_authenticator_get_subkey</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-key">Shishi_key</link> **subkey);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-set-subkey">shishi_authenticator_set_subkey</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int32-t">int32_t</link> subkeytype,
                                                         const <link linkend="char">char</link> *subkey,
                                                         <link linkend="size-t">size_t</link> subkeylen);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-add-random-subkey">shishi_authenticator_add_random_subkey</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-add-random-subkey-etype">shishi_authenticator_add_random_subkey_etype</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int">int</link> etype);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-add-subkey">shishi_authenticator_add_subkey</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-key">Shishi_key</link> *subkey);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-clear-authorizationdata">shishi_authenticator_clear_authorizationdata</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-add-authorizationdata">shishi_authenticator_add_authorizationdata</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int32-t">int32_t</link> adtype,
                                                         const <link linkend="char">char</link> *addata,
                                                         <link linkend="size-t">size_t</link> addatalen);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-authorizationdata">shishi_authenticator_authorizationdata</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int32-t">int32_t</link> *adtype,
                                                         <link linkend="char">char</link> **addata,
                                                         <link linkend="size-t">size_t</link> *addatalen,
                                                         <link linkend="size-t">size_t</link> nth);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-read">shishi_authenticator_read</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *authenticator);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-parse">shishi_authenticator_parse</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *authenticator);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-from-file">shishi_authenticator_from_file</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *authenticator,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-print">shishi_authenticator_print</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-to-file">shishi_authenticator_to_file</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-authenticator-save">shishi_authenticator_save</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);
<link linkend="int">int</link>                 <link linkend="shishi-as">shishi_as</link>                           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-as">Shishi_as</link> **as);
<link linkend="void">void</link>                <link linkend="shishi-as-done">shishi_as_done</link>                      (<link linkend="Shishi-as">Shishi_as</link> *as);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-as-req">shishi_as_req</link>                       (<link linkend="Shishi-as">Shishi_as</link> *as);
<link linkend="int">int</link>                 <link linkend="shishi-as-req-build">shishi_as_req_build</link>                 (<link linkend="Shishi-as">Shishi_as</link> *as);
<link linkend="void">void</link>                <link linkend="shishi-as-req-set">shishi_as_req_set</link>                   (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq);
<link linkend="int">int</link>                 <link linkend="shishi-as-req-der">shishi_as_req_der</link>                   (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-as-req-der-set">shishi_as_req_der_set</link>               (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-as-rep">shishi_as_rep</link>                       (<link linkend="Shishi-as">Shishi_as</link> *as);
<link linkend="void">void</link>                <link linkend="shishi-as-rep-set">shishi_as_rep_set</link>                   (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asrep);
<link linkend="int">int</link>                 <link linkend="shishi-as-rep-build">shishi_as_rep_build</link>                 (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-as-rep-der">shishi_as_rep_der</link>                   (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-as-rep-der-set">shishi_as_rep_der_set</link>               (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-as-krberror">shishi_as_krberror</link>                  (<link linkend="Shishi-as">Shishi_as</link> *as);
<link linkend="int">int</link>                 <link linkend="shishi-as-krberror-der">shishi_as_krberror_der</link>              (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="void">void</link>                <link linkend="shishi-as-krberror-set">shishi_as_krberror_set</link>              (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-as-tkt">shishi_as_tkt</link>                       (<link linkend="Shishi-as">Shishi_as</link> *as);
<link linkend="void">void</link>                <link linkend="shishi-as-tkt-set">shishi_as_tkt_set</link>                   (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-as-sendrecv">shishi_as_sendrecv</link>                  (<link linkend="Shishi-as">Shishi_as</link> *as);
<link linkend="int">int</link>                 <link linkend="shishi-as-sendrecv-hint">shishi_as_sendrecv_hint</link>             (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);
<link linkend="int">int</link>                 <link linkend="shishi-as-rep-process">shishi_as_rep_process</link>               (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         const <link linkend="char">char</link> *password);
<link linkend="int">int</link>                 <link linkend="shishi-tgs">shishi_tgs</link>                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-tgs">Shishi_tgs</link> **tgs);
<link linkend="void">void</link>                <link linkend="shishi-tgs-done">shishi_tgs_done</link>                     (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tgs-tgtkt">shishi_tgs_tgtkt</link>                    (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);
<link linkend="void">void</link>                <link linkend="shishi-tgs-tgtkt-set">shishi_tgs_tgtkt_set</link>                (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tgtkt);
<link linkend="Shishi-ap">Shishi_ap</link>*          <link linkend="shishi-tgs-ap">shishi_tgs_ap</link>                       (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-tgs-req">shishi_tgs_req</link>                      (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-req-der">shishi_tgs_req_der</link>                  (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-req-der-set">shishi_tgs_req_der_set</link>              (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="void">void</link>                <link linkend="shishi-tgs-req-set">shishi_tgs_req_set</link>                  (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> tgsreq);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-req-build">shishi_tgs_req_build</link>                (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-req-process">shishi_tgs_req_process</link>              (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-tgs-rep">shishi_tgs_rep</link>                      (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-rep-der">shishi_tgs_rep_der</link>                  (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-rep-build">shishi_tgs_rep_build</link>                (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-rep-process">shishi_tgs_rep_process</link>              (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-tgs-krberror">shishi_tgs_krberror</link>                 (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-krberror-der">shishi_tgs_krberror_der</link>             (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="void">void</link>                <link linkend="shishi-tgs-krberror-set">shishi_tgs_krberror_set</link>             (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-tgs-tkt">shishi_tgs_tkt</link>                      (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);
<link linkend="void">void</link>                <link linkend="shishi-tgs-tkt-set">shishi_tgs_tkt_set</link>                  (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-sendrecv">shishi_tgs_sendrecv</link>                 (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-sendrecv-hint">shishi_tgs_sendrecv_hint</link>            (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-set-server">shishi_tgs_set_server</link>               (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         const <link linkend="char">char</link> *server);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-set-realm">shishi_tgs_set_realm</link>                (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         const <link linkend="char">char</link> *realm);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-set-realmserver">shishi_tgs_set_realmserver</link>          (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         const <link linkend="char">char</link> *realm,
                                                         const <link linkend="char">char</link> *server);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq">shishi_kdcreq</link>                       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *realm,
                                                         <link linkend="char">char</link> *service,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *req);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asreq">shishi_asreq</link>                        (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asreq-rsc">shishi_asreq_rsc</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *realm,
                                                         <link linkend="char">char</link> *server,
                                                         <link linkend="char">char</link> *client);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-tgsreq">shishi_tgsreq</link>                       (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-tgsreq-rst">shishi_tgsreq_rst</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *realm,
                                                         <link linkend="char">char</link> *server,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-save">shishi_kdcreq_save</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-print">shishi_kdcreq_print</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-to-file">shishi_kdcreq_to_file</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-parse">shishi_kdcreq_parse</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-read">shishi_kdcreq_read</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-from-file">shishi_kdcreq_from_file</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcreq,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-asreq-clientrealm">shishi_asreq_clientrealm</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-nonce">shishi_kdcreq_nonce</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="uint32-t">uint32_t</link> *nonce);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-nonce-set">shishi_kdcreq_nonce_set</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="uint32-t">uint32_t</link> nonce);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-client">shishi_kdcreq_client</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-set-cname">shishi_kdcreq_set_cname</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *principal);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-server">shishi_kdcreq_server</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="char">char</link> **server,
                                                         <link linkend="size-t">size_t</link> *serverlen);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-set-sname">shishi_kdcreq_set_sname</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *sname[]);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-realm">shishi_kdcreq_realm</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="char">char</link> **realm,
                                                         <link linkend="size-t">size_t</link> *realmlen);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-realm-get">shishi_kdcreq_realm_get</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="char">char</link> **realm,
                                                         <link linkend="size-t">size_t</link> *realmlen);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-set-realm">shishi_kdcreq_set_realm</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         const <link linkend="char">char</link> *realm);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-set-server">shishi_kdcreq_set_server</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> req,
                                                         const <link linkend="char">char</link> *service);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-set-realmserver">shishi_kdcreq_set_realmserver</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> req,
                                                         <link linkend="char">char</link> *realm,
                                                         <link linkend="char">char</link> *service);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-till">shishi_kdcreq_till</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="char">char</link> **till,
                                                         <link linkend="size-t">size_t</link> *tilllen);
<link linkend="time-t">time_t</link>              <link linkend="shishi-kdcreq-tillc">shishi_kdcreq_tillc</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-etype">shishi_kdcreq_etype</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="int32-t">int32_t</link> *etype,
                                                         <link linkend="int">int</link> netype);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-set-etype">shishi_kdcreq_set_etype</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="int32-t">int32_t</link> *etype,
                                                         <link linkend="int">int</link> netype);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-options">shishi_kdcreq_options</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="uint32-t">uint32_t</link> *flags);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-forwardable-p">shishi_kdcreq_forwardable_p</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-forwarded-p">shishi_kdcreq_forwarded_p</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-proxiable-p">shishi_kdcreq_proxiable_p</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-proxy-p">shishi_kdcreq_proxy_p</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-allow-postdate-p">shishi_kdcreq_allow_postdate_p</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-postdated-p">shishi_kdcreq_postdated_p</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-renewable-p">shishi_kdcreq_renewable_p</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-disable-transited-check-p">shishi_kdcreq_disable_transited_check_p</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-renewable-ok-p">shishi_kdcreq_renewable_ok_p</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-enc-tkt-in-skey-p">shishi_kdcreq_enc_tkt_in_skey_p</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-renew-p">shishi_kdcreq_renew_p</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-validate-p">shishi_kdcreq_validate_p</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-options-set">shishi_kdcreq_options_set</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="uint32-t">uint32_t</link> options);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-options-add">shishi_kdcreq_options_add</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="uint32-t">uint32_t</link> option);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-clear-padata">shishi_kdcreq_clear_padata</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-get-padata">shishi_kdcreq_get_padata</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-padata-type">Shishi_padata_type</link> padatatype,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-get-padata-tgs">shishi_kdcreq_get_padata_tgs</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *apreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-add-padata">shishi_kdcreq_add_padata</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="int">int</link> padatatype,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> datalen);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-add-padata-tgs">shishi_kdcreq_add_padata_tgs</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-add-padata-preauth">shishi_kdcreq_add_padata_preauth</link>    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-build">shishi_kdcreq_build</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);
<link linkend="int">int</link>                 <link linkend="shishi-as-derive-salt">shishi_as_derive_salt</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asrep,
                                                         <link linkend="char">char</link> **salt,
                                                         <link linkend="size-t">size_t</link> *saltlen);
<link linkend="int">int</link>                 <link linkend="shishi-tgs-process">shishi_tgs_process</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> tgsreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> tgsrep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> oldenckdcreppart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *enckdcreppart);
<link linkend="int">int</link>                 <link linkend="shishi-as-process">shishi_as_process</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asrep,
                                                         const <link linkend="char">char</link> *string,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *enckdcreppart);
<link linkend="int">int</link>                 <link linkend="shishi-kdc-process">shishi_kdc_process</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *enckdcreppart);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-sendrecv">shishi_kdcreq_sendrecv</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcrep);
<link linkend="int">int</link>                 <link linkend="shishi-kdcreq-sendrecv-hint">shishi_kdcreq_sendrecv_hint</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcrep,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);
<link linkend="int">int</link>                 <link linkend="shishi-kdc-copy-crealm">shishi_kdc_copy_crealm</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);
<link linkend="int">int</link>                 <link linkend="shishi-as-check-crealm">shishi_as_check_crealm</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asrep);
<link linkend="int">int</link>                 <link linkend="shishi-kdc-copy-cname">shishi_kdc_copy_cname</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);
<link linkend="int">int</link>                 <link linkend="shishi-as-check-cname">shishi_as_check_cname</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asrep);
<link linkend="int">int</link>                 <link linkend="shishi-kdc-copy-nonce">shishi_kdc_copy_nonce</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart);
<link linkend="int">int</link>                 <link linkend="shishi-kdc-check-nonce">shishi_kdc_check_nonce</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asrep">shishi_asrep</link>                        (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-tgsrep">shishi_tgsrep</link>                       (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-save">shishi_kdcrep_save</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-print">shishi_kdcrep_print</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-to-file">shishi_kdcrep_to_file</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-parse">shishi_kdcrep_parse</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcrep);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-read">shishi_kdcrep_read</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcrep);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-from-file">shishi_kdcrep_from_file</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcrep,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-clear-padata">shishi_kdcrep_clear_padata</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-get-enc-part-etype">shishi_kdcrep_get_enc_part_etype</link>    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="int32-t">int32_t</link> *etype);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-add-enc-part">shishi_kdcrep_add_enc_part</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-get-ticket">shishi_kdcrep_get_ticket</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *ticket);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-set-ticket">shishi_kdcrep_set_ticket</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-crealm-set">shishi_kdcrep_crealm_set</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         const <link linkend="char">char</link> *crealm);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-cname-set">shishi_kdcrep_cname_set</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *cname[]);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-client-set">shishi_kdcrep_client_set</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         const <link linkend="char">char</link> *client);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-crealmserver-set">shishi_kdcrep_crealmserver_set</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         const <link linkend="char">char</link> *crealm,
                                                         const <link linkend="char">char</link> *client);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-set-enc-part">shishi_kdcrep_set_enc_part</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         <link linkend="uint32-t">uint32_t</link> kvno,
                                                         const <link linkend="char">char</link> *buf,
                                                         <link linkend="size-t">size_t</link> buflen);
<link linkend="int">int</link>                 <link linkend="shishi-kdcrep-decrypt">shishi_kdcrep_decrypt</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *enckdcreppart);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-enckdcreppart">shishi_enckdcreppart</link>                (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-encasreppart">shishi_encasreppart</link>                 (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-get-key">shishi_enckdcreppart_get_key</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-key-set">shishi_enckdcreppart_key_set</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-nonce-set">shishi_enckdcreppart_nonce_set</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="uint32-t">uint32_t</link> nonce);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-flags-set">shishi_enckdcreppart_flags_set</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="int">int</link> flags);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-authtime-set">shishi_enckdcreppart_authtime_set</link>   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *authtime);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-starttime-set">shishi_enckdcreppart_starttime_set</link>  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *starttime);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-endtime-set">shishi_enckdcreppart_endtime_set</link>    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *endtime);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-renew-till-set">shishi_enckdcreppart_renew_till_set</link> (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *renew_till);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-srealm-set">shishi_enckdcreppart_srealm_set</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *srealm);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-sname-set">shishi_enckdcreppart_sname_set</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         <link linkend="char">char</link> *sname[]);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-server-set">shishi_enckdcreppart_server_set</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *server);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-srealmserver-set">shishi_enckdcreppart_srealmserver_set</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *srealm,
                                                         const <link linkend="char">char</link> *server);
<link linkend="int">int</link>                 <link linkend="shishi-enckdcreppart-populate-encticketpart">shishi_enckdcreppart_populate_encticketpart</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-krberror">shishi_krberror</link>                     (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-print">shishi_krberror_print</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-save">shishi_krberror_save</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-to-file">shishi_krberror_to_file</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-parse">shishi_krberror_parse</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-read">shishi_krberror_read</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-from-file">shishi_krberror_from_file</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *krberror,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-build">shishi_krberror_build</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-der">shishi_krberror_der</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-crealm">shishi_krberror_crealm</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **realm,
                                                         <link linkend="size-t">size_t</link> *realmlen);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-remove-crealm">shishi_krberror_remove_crealm</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-set-crealm">shishi_krberror_set_crealm</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *crealm);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-client">shishi_krberror_client</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-set-cname">shishi_krberror_set_cname</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *cname[]);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-remove-cname">shishi_krberror_remove_cname</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-client-set">shishi_krberror_client_set</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *client);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-realm">shishi_krberror_realm</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **realm,
                                                         <link linkend="size-t">size_t</link> *realmlen);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-set-realm">shishi_krberror_set_realm</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *realm);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-server">shishi_krberror_server</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **server,
                                                         <link linkend="size-t">size_t</link> *serverlen);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-remove-sname">shishi_krberror_remove_sname</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-set-sname">shishi_krberror_set_sname</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *sname[]);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-server-set">shishi_krberror_server_set</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *server);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-ctime">shishi_krberror_ctime</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **t);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-ctime-set">shishi_krberror_ctime_set</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *t);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-remove-ctime">shishi_krberror_remove_ctime</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-cusec">shishi_krberror_cusec</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="uint32-t">uint32_t</link> *cusec);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-cusec-set">shishi_krberror_cusec_set</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="uint32-t">uint32_t</link> cusec);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-remove-cusec">shishi_krberror_remove_cusec</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-stime">shishi_krberror_stime</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **t);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-stime-set">shishi_krberror_stime_set</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *t);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-susec">shishi_krberror_susec</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="uint32-t">uint32_t</link> *susec);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-susec-set">shishi_krberror_susec_set</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="uint32-t">uint32_t</link> susec);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-errorcode-set">shishi_krberror_errorcode_set</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="int">int</link> errorcode);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-etext">shishi_krberror_etext</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **etext,
                                                         <link linkend="size-t">size_t</link> *etextlen);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-set-etext">shishi_krberror_set_etext</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *etext);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-remove-etext">shishi_krberror_remove_etext</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-edata">shishi_krberror_edata</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **edata,
                                                         <link linkend="size-t">size_t</link> *edatalen);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-set-edata">shishi_krberror_set_edata</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *edata);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-remove-edata">shishi_krberror_remove_edata</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-errorcode">shishi_krberror_errorcode</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="int">int</link> *errorcode);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-errorcode-fast">shishi_krberror_errorcode_fast</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-pretty-print">shishi_krberror_pretty_print</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
const <link linkend="char">char</link>*         <link linkend="shishi-krberror-errorcode-message">shishi_krberror_errorcode_message</link>   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> errorcode);
const <link linkend="char">char</link>*         <link linkend="shishi-krberror-message">shishi_krberror_message</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);
<link linkend="int">int</link>                 <link linkend="shishi-krberror-methoddata">shishi_krberror_methoddata</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *methoddata);
const <link linkend="char">char</link>*         <link linkend="shishi-generalize-time">shishi_generalize_time</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="time-t">time_t</link> t);
const <link linkend="char">char</link>*         <link linkend="shishi-generalize-now">shishi_generalize_now</link>               (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="time-t">time_t</link>              <link linkend="shishi-generalize-ctime">shishi_generalize_ctime</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *t);
<link linkend="int">int</link>                 <link linkend="shishi-time">shishi_time</link>                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="char">char</link> **t);
<link linkend="int">int</link>                 <link linkend="shishi-ctime">shishi_ctime</link>                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="time-t">time_t</link> *t);
<link linkend="int">int</link>                 <link linkend="shishi-randomize">shishi_randomize</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> strong,
                                                         <link linkend="void">void</link> *data,
                                                         <link linkend="size-t">size_t</link> datalen);
<link linkend="int">int</link>                 <link linkend="shishi-crc">shishi_crc</link>                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *out[4]);
<link linkend="int">int</link>                 <link linkend="shishi-md4">shishi_md4</link>                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *out[16]);
<link linkend="int">int</link>                 <link linkend="shishi-md5">shishi_md5</link>                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *out[16]);
<link linkend="int">int</link>                 <link linkend="shishi-hmac-md5">shishi_hmac_md5</link>                     (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="size-t">size_t</link> keylen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *outhash[16]);
<link linkend="int">int</link>                 <link linkend="shishi-hmac-sha1">shishi_hmac_sha1</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="size-t">size_t</link> keylen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *outhash[20]);
<link linkend="int">int</link>                 <link linkend="shishi-des-cbc-mac">shishi_des_cbc_mac</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> key[8],
                                                         const <link linkend="char">char</link> iv[8],
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *out[8]);
<link linkend="int">int</link>                 <link linkend="shishi-arcfour">shishi_arcfour</link>                      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> decryptp,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="size-t">size_t</link> keylen,
                                                         const <link linkend="char">char</link> iv[258],
                                                         <link linkend="char">char</link> *ivout[258],
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out);
<link linkend="int">int</link>                 <link linkend="shishi-des">shishi_des</link>                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> decryptp,
                                                         const <link linkend="char">char</link> key[8],
                                                         const <link linkend="char">char</link> iv[8],
                                                         <link linkend="char">char</link> *ivout[8],
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out);
<link linkend="int">int</link>                 <link linkend="shishi-3des">shishi_3des</link>                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> decryptp,
                                                         const <link linkend="char">char</link> key[24],
                                                         const <link linkend="char">char</link> iv[8],
                                                         <link linkend="char">char</link> *ivout[8],
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out);
<link linkend="int">int</link>                 <link linkend="shishi-aes-cts">shishi_aes_cts</link>                      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> decryptp,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="size-t">size_t</link> keylen,
                                                         const <link linkend="char">char</link> iv[16],
                                                         <link linkend="char">char</link> *ivout[16],
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out);
<link linkend="int">int</link>                 <link linkend="shishi-cipher-supported-p">shishi_cipher_supported_p</link>           (<link linkend="int">int</link> type);
const <link linkend="char">char</link>*         <link linkend="shishi-cipher-name">shishi_cipher_name</link>                  (<link linkend="int">int</link> type);
<link linkend="int">int</link>                 <link linkend="shishi-cipher-blocksize">shishi_cipher_blocksize</link>             (<link linkend="int">int</link> type);
<link linkend="int">int</link>                 <link linkend="shishi-cipher-confoundersize">shishi_cipher_confoundersize</link>        (<link linkend="int">int</link> type);
<link linkend="size-t">size_t</link>              <link linkend="shishi-cipher-keylen">shishi_cipher_keylen</link>                (<link linkend="int">int</link> type);
<link linkend="size-t">size_t</link>              <link linkend="shishi-cipher-randomlen">shishi_cipher_randomlen</link>             (<link linkend="int">int</link> type);
<link linkend="int">int</link>                 <link linkend="shishi-cipher-defaultcksumtype">shishi_cipher_defaultcksumtype</link>      (<link linkend="int32-t">int32_t</link> type);
<link linkend="int">int</link>                 <link linkend="shishi-cipher-parse">shishi_cipher_parse</link>                 (const <link linkend="char">char</link> *cipher);
<link linkend="int">int</link>                 <link linkend="shishi-checksum-supported-p">shishi_checksum_supported_p</link>         (<link linkend="int32-t">int32_t</link> type);
const <link linkend="char">char</link>*         <link linkend="shishi-checksum-name">shishi_checksum_name</link>                (<link linkend="int32-t">int32_t</link> type);
<link linkend="size-t">size_t</link>              <link linkend="shishi-checksum-cksumlen">shishi_checksum_cksumlen</link>            (<link linkend="int32-t">int32_t</link> type);
<link linkend="int">int</link>                 <link linkend="shishi-checksum-parse">shishi_checksum_parse</link>               (const <link linkend="char">char</link> *checksum);
<link linkend="int">int</link>                 <link linkend="shishi-string-to-key">shishi_string_to_key</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> keytype,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="size-t">size_t</link> passwordlen,
                                                         const <link linkend="char">char</link> *salt,
                                                         <link linkend="size-t">size_t</link> saltlen,
                                                         const <link linkend="char">char</link> *parameter,
                                                         <link linkend="Shishi-key">Shishi_key</link> *outkey);
<link linkend="int">int</link>                 <link linkend="shishi-random-to-key">shishi_random_to_key</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> keytype,
                                                         const <link linkend="char">char</link> *rnd,
                                                         <link linkend="size-t">size_t</link> rndlen,
                                                         <link linkend="Shishi-key">Shishi_key</link> *outkey);
<link linkend="int">int</link>                 <link linkend="shishi-encrypt-ivupdate-etype">shishi_encrypt_ivupdate_etype</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         <link linkend="char">char</link> **ivout,
                                                         <link linkend="size-t">size_t</link> *ivoutlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-encrypt-iv-etype">shishi_encrypt_iv_etype</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-encrypt-etype">shishi_encrypt_etype</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-encrypt-ivupdate">shishi_encrypt_ivupdate</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         <link linkend="char">char</link> **ivout,
                                                         <link linkend="size-t">size_t</link> *ivoutlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-encrypt-iv">shishi_encrypt_iv</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-encrypt">shishi_encrypt</link>                      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-decrypt-ivupdate-etype">shishi_decrypt_ivupdate_etype</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         <link linkend="char">char</link> **ivout,
                                                         <link linkend="size-t">size_t</link> *ivoutlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-decrypt-iv-etype">shishi_decrypt_iv_etype</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-decrypt-etype">shishi_decrypt_etype</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-decrypt-ivupdate">shishi_decrypt_ivupdate</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         <link linkend="char">char</link> **ivout,
                                                         <link linkend="size-t">size_t</link> *ivoutlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-decrypt-iv">shishi_decrypt_iv</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-decrypt">shishi_decrypt</link>                      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-checksum">shishi_checksum</link>                     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> cksumtype,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-verify">shishi_verify</link>                       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int">int</link> cksumtype,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         const <link linkend="char">char</link> *cksum,
                                                         <link linkend="size-t">size_t</link> cksumlen);
<link linkend="int">int</link>                 <link linkend="shishi-dk">shishi_dk</link>                           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         const <link linkend="char">char</link> *prfconstant,
                                                         <link linkend="size-t">size_t</link> prfconstantlen,
                                                         <link linkend="Shishi-key">Shishi_key</link> *derivedkey);
<link linkend="int">int</link>                 <link linkend="shishi-dr">shishi_dr</link>                           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         const <link linkend="char">char</link> *prfconstant,
                                                         <link linkend="size-t">size_t</link> prfconstantlen,
                                                         <link linkend="char">char</link> *derivedrandom,
                                                         <link linkend="size-t">size_t</link> derivedrandomlen);
<link linkend="int">int</link>                 <link linkend="shishi-n-fold">shishi_n_fold</link>                       (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *out,
                                                         <link linkend="size-t">size_t</link> outlen);
<link linkend="int">int</link>                 <link linkend="shishi-pbkdf2-sha1">shishi_pbkdf2_sha1</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *P,
                                                         <link linkend="size-t">size_t</link> Plen,
                                                         const <link linkend="char">char</link> *S,
                                                         <link linkend="size-t">size_t</link> Slen,
                                                         unsigned <link linkend="int">int</link> c,
                                                         unsigned <link linkend="int">int</link> dkLen,
                                                         <link linkend="char">char</link> *DK);
<link linkend="Shishi-crypto">Shishi_crypto</link>*      <link linkend="shishi-crypto">shishi_crypto</link>                       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen);
<link linkend="void">void</link>                <link linkend="shishi-crypto-close">shishi_crypto_close</link>                 (<link linkend="Shishi-crypto">Shishi_crypto</link> *ctx);
<link linkend="int">int</link>                 <link linkend="shishi-crypto-encrypt">shishi_crypto_encrypt</link>               (<link linkend="Shishi-crypto">Shishi_crypto</link> *ctx,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-crypto-decrypt">shishi_crypto_decrypt</link>               (<link linkend="Shishi-crypto">Shishi_crypto</link> *ctx,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
const <link linkend="char">char</link>*         <link linkend="shishi-check-version">shishi_check_version</link>                (const <link linkend="char">char</link> *req_version);
<link linkend="int">int</link>                 (<link linkend="shishi-prompt-password-func">*shishi_prompt_password_func</link>)      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> **s,
                                                         const <link linkend="char">char</link> *format,
                                                         <link linkend="va-list">va_list</link> ap);
<link linkend="void">void</link>                <link linkend="shishi-prompt-password-callback-set">shishi_prompt_password_callback_set</link> (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="shishi-prompt-password-func">shishi_prompt_password_func</link> cb);
<link linkend="shishi-prompt-password-func">shishi_prompt_password_func</link> <link linkend="shishi-prompt-password-callback-get">shishi_prompt_password_callback_get</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-prompt-password">shishi_prompt_password</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> **s,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-number-of-elements">shishi_asn1_number_of_elements</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="size-t">size_t</link> *n);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-empty-p">shishi_asn1_empty_p</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-read">shishi_asn1_read</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="char">char</link> **data,
                                                         <link linkend="size-t">size_t</link> *datalen);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-read-inline">shishi_asn1_read_inline</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> *datalen);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-read-integer">shishi_asn1_read_integer</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="int">int</link> *i);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-read-int32">shishi_asn1_read_int32</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="int32-t">int32_t</link> *i);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-read-uint32">shishi_asn1_read_uint32</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="uint32-t">uint32_t</link> *i);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-read-bitstring">shishi_asn1_read_bitstring</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="uint32-t">uint32_t</link> *flags);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-read-optional">shishi_asn1_read_optional</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="char">char</link> **data,
                                                         <link linkend="size-t">size_t</link> *datalen);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-write">shishi_asn1_write</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> datalen);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-write-integer">shishi_asn1_write_integer</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="int">int</link> n);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-write-int32">shishi_asn1_write_int32</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="int32-t">int32_t</link> n);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-write-uint32">shishi_asn1_write_uint32</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="uint32-t">uint32_t</link> n);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-write-bitstring">shishi_asn1_write_bitstring</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="uint32-t">uint32_t</link> flags);
<link linkend="void">void</link>                <link linkend="shishi-asn1-done">shishi_asn1_done</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-pa-enc-ts-enc">shishi_asn1_pa_enc_ts_enc</link>           (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-encrypteddata">shishi_asn1_encrypteddata</link>           (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-padata">shishi_asn1_padata</link>                  (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-methoddata">shishi_asn1_methoddata</link>              (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-etype-info">shishi_asn1_etype_info</link>              (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-etype-info2">shishi_asn1_etype_info2</link>             (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-asreq">shishi_asn1_asreq</link>                   (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-asrep">shishi_asn1_asrep</link>                   (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-tgsreq">shishi_asn1_tgsreq</link>                  (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-tgsrep">shishi_asn1_tgsrep</link>                  (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-apreq">shishi_asn1_apreq</link>                   (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-aprep">shishi_asn1_aprep</link>                   (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-ticket">shishi_asn1_ticket</link>                  (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-encapreppart">shishi_asn1_encapreppart</link>            (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-encticketpart">shishi_asn1_encticketpart</link>           (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-authenticator">shishi_asn1_authenticator</link>           (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-enckdcreppart">shishi_asn1_enckdcreppart</link>           (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-encasreppart">shishi_asn1_encasreppart</link>            (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-krberror">shishi_asn1_krberror</link>                (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-krbsafe">shishi_asn1_krbsafe</link>                 (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-priv">shishi_asn1_priv</link>                    (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-asn1-encprivpart">shishi_asn1_encprivpart</link>             (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-to-der">shishi_asn1_to_der</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         <link linkend="char">char</link> **der,
                                                         <link linkend="size-t">size_t</link> *len);
<link linkend="int">int</link>                 <link linkend="shishi-asn1-to-der-field">shishi_asn1_to_der_field</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="char">char</link> **der,
                                                         <link linkend="size-t">size_t</link> *len);
<link linkend="Shishi-msgtype">Shishi_msgtype</link>      <link linkend="shishi-asn1-msgtype">shishi_asn1_msgtype</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node);
<link linkend="Shishi-msgtype">Shishi_msgtype</link>      <link linkend="shishi-der-msgtype">shishi_der_msgtype</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="void">void</link>                <link linkend="shishi-asn1-print">shishi_asn1_print</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1">shishi_der2asn1</link>                     (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-padata">shishi_der2asn1_padata</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-methoddata">shishi_der2asn1_methoddata</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-etype-info">shishi_der2asn1_etype_info</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-etype-info2">shishi_der2asn1_etype_info2</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-ticket">shishi_der2asn1_ticket</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-encticketpart">shishi_der2asn1_encticketpart</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-asreq">shishi_der2asn1_asreq</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-tgsreq">shishi_der2asn1_tgsreq</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-asrep">shishi_der2asn1_asrep</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-tgsrep">shishi_der2asn1_tgsrep</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-kdcrep">shishi_der2asn1_kdcrep</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-kdcreq">shishi_der2asn1_kdcreq</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-apreq">shishi_der2asn1_apreq</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-aprep">shishi_der2asn1_aprep</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-authenticator">shishi_der2asn1_authenticator</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-krberror">shishi_der2asn1_krberror</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-krbsafe">shishi_der2asn1_krbsafe</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-priv">shishi_der2asn1_priv</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-encasreppart">shishi_der2asn1_encasreppart</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-enctgsreppart">shishi_der2asn1_enctgsreppart</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-enckdcreppart">shishi_der2asn1_enckdcreppart</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-encapreppart">shishi_der2asn1_encapreppart</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-der2asn1-encprivpart">shishi_der2asn1_encprivpart</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="int">int</link>                 <link linkend="shishi-ap">shishi_ap</link>                           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap);
<link linkend="int">int</link>                 <link linkend="shishi-ap-etype">shishi_ap_etype</link>                     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap,
                                                         <link linkend="int">int</link> etype);
<link linkend="int">int</link>                 <link linkend="shishi-ap-nosubkey">shishi_ap_nosubkey</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap);
<link linkend="void">void</link>                <link linkend="shishi-ap-done">shishi_ap_done</link>                      (<link linkend="Shishi-ap">Shishi_ap</link> *ap);
<link linkend="int">int</link>                 <link linkend="shishi-ap-set-tktoptions">shishi_ap_set_tktoptions</link>            (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options);
<link linkend="int">int</link>                 <link linkend="shishi-ap-tktoptions">shishi_ap_tktoptions</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options);
<link linkend="int">int</link>                 <link linkend="shishi-ap-etype-tktoptionsdata">shishi_ap_etype_tktoptionsdata</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len);
<link linkend="int">int</link>                 <link linkend="shishi-ap-set-tktoptionsdata">shishi_ap_set_tktoptionsdata</link>        (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len);
<link linkend="int">int</link>                 <link linkend="shishi-ap-tktoptionsdata">shishi_ap_tktoptionsdata</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len);
<link linkend="int">int</link>                 <link linkend="shishi-ap-set-tktoptionsraw">shishi_ap_set_tktoptionsraw</link>         (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         <link linkend="int32-t">int32_t</link> cksumtype,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len);
<link linkend="int">int</link>                 <link linkend="shishi-ap-tktoptionsraw">shishi_ap_tktoptionsraw</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         <link linkend="int32-t">int32_t</link> cksumtype,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len);
<link linkend="int">int</link>                 <link linkend="shishi-ap-set-tktoptionsasn1usage">shishi_ap_set_tktoptionsasn1usage</link>   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="int">int</link> authenticatorcksumkeyusage,
                                                         <link linkend="int">int</link> authenticatorkeyusage);
<link linkend="int">int</link>                 <link linkend="shishi-ap-tktoptionsasn1usage">shishi_ap_tktoptionsasn1usage</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="int">int</link> authenticatorcksumkeyusage,
                                                         <link linkend="int">int</link> authenticatorkeyusage);
<link linkend="Shishi-tkt">Shishi_tkt</link>*         <link linkend="shishi-ap-tkt">shishi_ap_tkt</link>                       (<link linkend="Shishi-ap">Shishi_ap</link> *ap);
<link linkend="void">void</link>                <link linkend="shishi-ap-tkt-set">shishi_ap_tkt_set</link>                   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);
<link linkend="int">int</link>                 <link linkend="shishi-ap-authenticator-cksumdata">shishi_ap_authenticator_cksumdata</link>   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="char">char</link> *out,
                                                         <link linkend="size-t">size_t</link> *len);
<link linkend="void">void</link>                <link linkend="shishi-ap-authenticator-cksumdata-set">shishi_ap_authenticator_cksumdata_set</link>
                                                        (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         const <link linkend="char">char</link> *authenticatorcksumdata,
                                                         <link linkend="size-t">size_t</link> authenticatorcksumdatalen);
<link linkend="void">void</link>                <link linkend="shishi-ap-authenticator-cksumraw-set">shishi_ap_authenticator_cksumraw_set</link>
                                                        (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="int32-t">int32_t</link> authenticatorcksumtype,
                                                         const <link linkend="char">char</link> *authenticatorcksumraw,
                                                         <link linkend="size-t">size_t</link> authenticatorcksumrawlen);
<link linkend="int32-t">int32_t</link>             <link linkend="shishi-ap-authenticator-cksumtype">shishi_ap_authenticator_cksumtype</link>   (<link linkend="Shishi-ap">Shishi_ap</link> *ap);
<link linkend="void">void</link>                <link linkend="shishi-ap-authenticator-cksumtype-set">shishi_ap_authenticator_cksumtype_set</link>
                                                        (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="int32-t">int32_t</link> cksumtype);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-ap-authenticator">shishi_ap_authenticator</link>             (<link linkend="Shishi-ap">Shishi_ap</link> *ap);
<link linkend="void">void</link>                <link linkend="shishi-ap-authenticator-set">shishi_ap_authenticator_set</link>         (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-ap-req">shishi_ap_req</link>                       (<link linkend="Shishi-ap">Shishi_ap</link> *ap);
<link linkend="void">void</link>                <link linkend="shishi-ap-req-set">shishi_ap_req_set</link>                   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq);
<link linkend="int">int</link>                 <link linkend="shishi-ap-req-der">shishi_ap_req_der</link>                   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-ap-req-der-set">shishi_ap_req_der_set</link>               (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="int">int</link>                 <link linkend="shishi-ap-req-build">shishi_ap_req_build</link>                 (<link linkend="Shishi-ap">Shishi_ap</link> *ap);
<link linkend="int">int</link>                 <link linkend="shishi-ap-req-asn1">shishi_ap_req_asn1</link>                  (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *apreq);
<link linkend="Shishi-key">Shishi_key</link>*         <link linkend="shishi-ap-key">shishi_ap_key</link>                       (<link linkend="Shishi-ap">Shishi_ap</link> *ap);
<link linkend="int">int</link>                 <link linkend="shishi-ap-req-decode">shishi_ap_req_decode</link>                (<link linkend="Shishi-ap">Shishi_ap</link> *ap);
<link linkend="int">int</link>                 <link linkend="shishi-ap-req-process">shishi_ap_req_process</link>               (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-ap-req-process-keyusage">shishi_ap_req_process_keyusage</link>      (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int32-t">int32_t</link> keyusage);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-ap-rep">shishi_ap_rep</link>                       (<link linkend="Shishi-ap">Shishi_ap</link> *ap);
<link linkend="void">void</link>                <link linkend="shishi-ap-rep-set">shishi_ap_rep_set</link>                   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep);
<link linkend="int">int</link>                 <link linkend="shishi-ap-rep-der">shishi_ap_rep_der</link>                   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-ap-rep-der-set">shishi_ap_rep_der_set</link>               (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="int">int</link>                 <link linkend="shishi-ap-rep-verify">shishi_ap_rep_verify</link>                (<link linkend="Shishi-ap">Shishi_ap</link> *ap);
<link linkend="int">int</link>                 <link linkend="shishi-ap-rep-verify-der">shishi_ap_rep_verify_der</link>            (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="int">int</link>                 <link linkend="shishi-ap-rep-verify-asn1">shishi_ap_rep_verify_asn1</link>           (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep);
<link linkend="int">int</link>                 <link linkend="shishi-ap-rep-asn1">shishi_ap_rep_asn1</link>                  (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *aprep);
<link linkend="int">int</link>                 <link linkend="shishi-ap-rep-build">shishi_ap_rep_build</link>                 (<link linkend="Shishi-ap">Shishi_ap</link> *ap);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-ap-encapreppart">shishi_ap_encapreppart</link>              (<link linkend="Shishi-ap">Shishi_ap</link> *ap);
<link linkend="void">void</link>                <link linkend="shishi-ap-encapreppart-set">shishi_ap_encapreppart_set</link>          (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart);
const <link linkend="char">char</link>*         <link linkend="shishi-ap-option2string">shishi_ap_option2string</link>             (<link linkend="Shishi-apoptions">Shishi_apoptions</link> option);
<link linkend="Shishi-apoptions">Shishi_apoptions</link>    <link linkend="shishi-ap-string2option">shishi_ap_string2option</link>             (const <link linkend="char">char</link> *str);
const <link linkend="char">char</link>*         <link linkend="shishi-key-principal">shishi_key_principal</link>                (const <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="void">void</link>                <link linkend="shishi-key-principal-set">shishi_key_principal_set</link>            (<link linkend="Shishi-key">Shishi_key</link> *key,
                                                         const <link linkend="char">char</link> *principal);
const <link linkend="char">char</link>*         <link linkend="shishi-key-realm">shishi_key_realm</link>                    (const <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="void">void</link>                <link linkend="shishi-key-realm-set">shishi_key_realm_set</link>                (<link linkend="Shishi-key">Shishi_key</link> *key,
                                                         const <link linkend="char">char</link> *realm);
<link linkend="int">int</link>                 <link linkend="shishi-key-type">shishi_key_type</link>                     (const <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="void">void</link>                <link linkend="shishi-key-type-set">shishi_key_type_set</link>                 (<link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int32-t">int32_t</link> type);
const <link linkend="char">char</link>*         <link linkend="shishi-key-value">shishi_key_value</link>                    (const <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="void">void</link>                <link linkend="shishi-key-value-set">shishi_key_value_set</link>                (<link linkend="Shishi-key">Shishi_key</link> *key,
                                                         const <link linkend="char">char</link> *value);
const <link linkend="char">char</link>*         <link linkend="shishi-key-name">shishi_key_name</link>                     (<link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="size-t">size_t</link>              <link linkend="shishi-key-length">shishi_key_length</link>                   (const <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="uint32-t">uint32_t</link>            <link linkend="shishi-key-version">shishi_key_version</link>                  (const <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="void">void</link>                <link linkend="shishi-key-version-set">shishi_key_version_set</link>              (<link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="uint32-t">uint32_t</link> kvno);
<link linkend="int">int</link>                 <link linkend="shishi-key">shishi_key</link>                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);
<link linkend="void">void</link>                <link linkend="shishi-key-done">shishi_key_done</link>                     (<link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="void">void</link>                <link linkend="shishi-key-copy">shishi_key_copy</link>                     (<link linkend="Shishi-key">Shishi_key</link> *dstkey,
                                                         <link linkend="Shishi-key">Shishi_key</link> *srckey);
<link linkend="int">int</link>                 <link linkend="shishi-key-print">shishi_key_print</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         const <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-key-to-file">shishi_key_to_file</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-key-parse">shishi_key_parse</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);
<link linkend="int">int</link>                 <link linkend="shishi-key-random">shishi_key_random</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> type,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);
<link linkend="int">int</link>                 <link linkend="shishi-key-from-value">shishi_key_from_value</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> type,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);
<link linkend="int">int</link>                 <link linkend="shishi-key-from-base64">shishi_key_from_base64</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> type,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);
<link linkend="int">int</link>                 <link linkend="shishi-key-from-random">shishi_key_from_random</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> type,
                                                         const <link linkend="char">char</link> *rnd,
                                                         <link linkend="size-t">size_t</link> rndlen,
                                                         <link linkend="Shishi-key">Shishi_key</link> **outkey);
<link linkend="int">int</link>                 <link linkend="shishi-key-from-string">shishi_key_from_string</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> type,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="size-t">size_t</link> passwordlen,
                                                         const <link linkend="char">char</link> *salt,
                                                         <link linkend="size-t">size_t</link> saltlen,
                                                         const <link linkend="char">char</link> *parameter,
                                                         <link linkend="Shishi-key">Shishi_key</link> **outkey);
<link linkend="int">int</link>                 <link linkend="shishi-key-from-name">shishi_key_from_name</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> type,
                                                         const <link linkend="char">char</link> *name,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="size-t">size_t</link> passwordlen,
                                                         const <link linkend="char">char</link> *parameter,
                                                         <link linkend="Shishi-key">Shishi_key</link> **outkey);
<link linkend="int">int</link>                 <link linkend="shishi-keys">shishi_keys</link>                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-keys">Shishi_keys</link> **keys);
<link linkend="void">void</link>                <link linkend="shishi-keys-done">shishi_keys_done</link>                    (<link linkend="Shishi-keys">Shishi_keys</link> **keys);
<link linkend="int">int</link>                 <link linkend="shishi-keys-size">shishi_keys_size</link>                    (<link linkend="Shishi-keys">Shishi_keys</link> *keys);
const <link linkend="Shishi-key">Shishi_key</link>*   <link linkend="shishi-keys-nth">shishi_keys_nth</link>                     (<link linkend="Shishi-keys">Shishi_keys</link> *keys,
                                                         <link linkend="int">int</link> keyno);
<link linkend="void">void</link>                <link linkend="shishi-keys-remove">shishi_keys_remove</link>                  (<link linkend="Shishi-keys">Shishi_keys</link> *keys,
                                                         <link linkend="int">int</link> keyno);
<link linkend="int">int</link>                 <link linkend="shishi-keys-add">shishi_keys_add</link>                     (<link linkend="Shishi-keys">Shishi_keys</link> *keys,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-keys-add-keytab-mem">shishi_keys_add_keytab_mem</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len,
                                                         <link linkend="Shishi-keys">Shishi_keys</link> *keys);
<link linkend="int">int</link>                 <link linkend="shishi-keys-add-keytab-file">shishi_keys_add_keytab_file</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="Shishi-keys">Shishi_keys</link> *keys);
<link linkend="int">int</link>                 <link linkend="shishi-keys-from-keytab-mem">shishi_keys_from_keytab_mem</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len,
                                                         <link linkend="Shishi-keys">Shishi_keys</link> **outkeys);
<link linkend="int">int</link>                 <link linkend="shishi-keys-from-keytab-file">shishi_keys_from_keytab_file</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="Shishi-keys">Shishi_keys</link> **outkeys);
<link linkend="int">int</link>                 <link linkend="shishi-keys-print">shishi_keys_print</link>                   (<link linkend="Shishi-keys">Shishi_keys</link> *keys,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);
<link linkend="int">int</link>                 <link linkend="shishi-keys-to-file">shishi_keys_to_file</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="Shishi-keys">Shishi_keys</link> *keys);
<link linkend="Shishi-key">Shishi_key</link>*         <link linkend="shishi-keys-for-serverrealm-in-file">shishi_keys_for_serverrealm_in_file</link> (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         const <link linkend="char">char</link> *server,
                                                         const <link linkend="char">char</link> *realm);
<link linkend="Shishi-key">Shishi_key</link>*         <link linkend="shishi-keys-for-server-in-file">shishi_keys_for_server_in_file</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         const <link linkend="char">char</link> *server);
<link linkend="Shishi-key">Shishi_key</link>*         <link linkend="shishi-keys-for-localservicerealm-in-file">shishi_keys_for_localservicerealm_in_file</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         const <link linkend="char">char</link> *service,
                                                         const <link linkend="char">char</link> *realm);
const <link linkend="char">char</link>*         <link linkend="shishi-hostkeys-default-file">shishi_hostkeys_default_file</link>        (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="void">void</link>                <link linkend="shishi-hostkeys-default-file-set">shishi_hostkeys_default_file_set</link>    (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *hostkeysfile);
<link linkend="Shishi-key">Shishi_key</link>*         <link linkend="shishi-hostkeys-for-server">shishi_hostkeys_for_server</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *server);
<link linkend="Shishi-key">Shishi_key</link>*         <link linkend="shishi-hostkeys-for-serverrealm">shishi_hostkeys_for_serverrealm</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *server,
                                                         const <link linkend="char">char</link> *realm);
<link linkend="Shishi-key">Shishi_key</link>*         <link linkend="shishi-hostkeys-for-localservicerealm">shishi_hostkeys_for_localservicerealm</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *service,
                                                         const <link linkend="char">char</link> *realm);
<link linkend="Shishi-key">Shishi_key</link>*         <link linkend="shishi-hostkeys-for-localservice">shishi_hostkeys_for_localservice</link>    (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *service);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-encapreppart">shishi_encapreppart</link>                 (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-time-copy">shishi_encapreppart_time_copy</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-ctime">shishi_encapreppart_ctime</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="char">char</link> **t);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-ctime-set">shishi_encapreppart_ctime_set</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         const <link linkend="char">char</link> *t);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-cusec-get">shishi_encapreppart_cusec_get</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="uint32-t">uint32_t</link> *cusec);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-cusec-set">shishi_encapreppart_cusec_set</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="uint32-t">uint32_t</link> cusec);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-print">shishi_encapreppart_print</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-save">shishi_encapreppart_save</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-to-file">shishi_encapreppart_to_file</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-read">shishi_encapreppart_read</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *encapreppart);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-parse">shishi_encapreppart_parse</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *encapreppart);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-from-file">shishi_encapreppart_from_file</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *encapreppart,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-get-key">shishi_encapreppart_get_key</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-seqnumber-get">shishi_encapreppart_seqnumber_get</link>   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="uint32-t">uint32_t</link> *seqnumber);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-seqnumber-remove">shishi_encapreppart_seqnumber_remove</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart);
<link linkend="int">int</link>                 <link linkend="shishi-encapreppart-seqnumber-set">shishi_encapreppart_seqnumber_set</link>   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="uint32-t">uint32_t</link> seqnumber);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-apreq">shishi_apreq</link>                        (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-parse">shishi_apreq_parse</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *apreq);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-from-file">shishi_apreq_from_file</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *apreq,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-print">shishi_apreq_print</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-to-file">shishi_apreq_to_file</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-read">shishi_apreq_read</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *apreq);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-save">shishi_apreq_save</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-set-ticket">shishi_apreq_set_ticket</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-set-authenticator">shishi_apreq_set_authenticator</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         <link linkend="uint32-t">uint32_t</link> kvno,
                                                         const <link linkend="char">char</link> *buf,
                                                         <link linkend="size-t">size_t</link> buflen);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-add-authenticator">shishi_apreq_add_authenticator</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-options">shishi_apreq_options</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="uint32-t">uint32_t</link> *flags);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-use-session-key-p">shishi_apreq_use_session_key_p</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-mutual-required-p">shishi_apreq_mutual_required_p</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-options-set">shishi_apreq_options_set</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="uint32-t">uint32_t</link> options);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-options-add">shishi_apreq_options_add</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="uint32-t">uint32_t</link> option);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-options-remove">shishi_apreq_options_remove</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="uint32-t">uint32_t</link> option);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-get-ticket">shishi_apreq_get_ticket</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *ticket);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-get-authenticator-etype">shishi_apreq_get_authenticator_etype</link>
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="int32-t">int32_t</link> *etype);
<link linkend="int">int</link>                 <link linkend="shishi-apreq-decrypt">shishi_apreq_decrypt</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *authenticator);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-aprep">shishi_aprep</link>                        (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-aprep-print">shishi_aprep_print</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep);
<link linkend="int">int</link>                 <link linkend="shishi-aprep-save">shishi_aprep_save</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep);
<link linkend="int">int</link>                 <link linkend="shishi-aprep-to-file">shishi_aprep_to_file</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-aprep-read">shishi_aprep_read</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *aprep);
<link linkend="int">int</link>                 <link linkend="shishi-aprep-parse">shishi_aprep_parse</link>                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *aprep);
<link linkend="int">int</link>                 <link linkend="shishi-aprep-from-file">shishi_aprep_from_file</link>              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *aprep,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-aprep-decrypt">shishi_aprep_decrypt</link>                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *encapreppart);
<link linkend="int">int</link>                 <link linkend="shishi-aprep-verify">shishi_aprep_verify</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart);
<link linkend="int">int</link>                 <link linkend="shishi-aprep-enc-part-set">shishi_aprep_enc_part_set</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep,
                                                         <link linkend="int">int</link> etype,
                                                         const <link linkend="char">char</link> *buf,
                                                         <link linkend="size-t">size_t</link> buflen);
<link linkend="int">int</link>                 <link linkend="shishi-aprep-enc-part-add">shishi_aprep_enc_part_add</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart);
<link linkend="int">int</link>                 <link linkend="shishi-aprep-enc-part-make">shishi_aprep_enc_part_make</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);
<link linkend="int">int</link>                 <link linkend="shishi-aprep-get-enc-part-etype">shishi_aprep_get_enc_part_etype</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep,
                                                         <link linkend="int32-t">int32_t</link> *etype);
<link linkend="int">int</link>                 <link linkend="shishi-kdc-sendrecv">shishi_kdc_sendrecv</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *realm,
                                                         const <link linkend="char">char</link> *indata,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **outdata,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-kdc-sendrecv-hint">shishi_kdc_sendrecv_hint</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *realm,
                                                         const <link linkend="char">char</link> *indata,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **outdata,
                                                         <link linkend="size-t">size_t</link> *outlen,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-encticketpart">shishi_encticketpart</link>                (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-key-set">shishi_encticketpart_key_set</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-get-key">shishi_encticketpart_get_key</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-crealm">shishi_encticketpart_crealm</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="char">char</link> **crealm,
                                                         <link linkend="size-t">size_t</link> *crealmlen);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-crealm-set">shishi_encticketpart_crealm_set</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         const <link linkend="char">char</link> *realm);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-client">shishi_encticketpart_client</link>         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-clientrealm">shishi_encticketpart_clientrealm</link>    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-cname-set">shishi_encticketpart_cname_set</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *principal);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-print">shishi_encticketpart_print</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-flags-set">shishi_encticketpart_flags_set</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="int">int</link> flags);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-transited-set">shishi_encticketpart_transited_set</link>  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="int32-t">int32_t</link> trtype,
                                                         const <link linkend="char">char</link> *trdata,
                                                         <link linkend="size-t">size_t</link> trdatalen);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-authtime-set">shishi_encticketpart_authtime_set</link>   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         const <link linkend="char">char</link> *authtime);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-endtime-set">shishi_encticketpart_endtime_set</link>    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         const <link linkend="char">char</link> *endtime);
<link linkend="int">int</link>                 <link linkend="shishi-encticketpart-authtime">shishi_encticketpart_authtime</link>       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="char">char</link> *authtime,
                                                         <link linkend="size-t">size_t</link> *authtimelen);
<link linkend="time-t">time_t</link>              <link linkend="shishi-encticketpart-authctime">shishi_encticketpart_authctime</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);
<link linkend="int">int</link>                 <link linkend="shishi-safe">shishi_safe</link>                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-safe">Shishi_safe</link> **safe);
<link linkend="void">void</link>                <link linkend="shishi-safe-done">shishi_safe_done</link>                    (<link linkend="Shishi-safe">Shishi_safe</link> *safe);
<link linkend="Shishi-key">Shishi_key</link>*         <link linkend="shishi-safe-key">shishi_safe_key</link>                     (<link linkend="Shishi-safe">Shishi_safe</link> *safe);
<link linkend="void">void</link>                <link linkend="shishi-safe-key-set">shishi_safe_key_set</link>                 (<link linkend="Shishi-safe">Shishi_safe</link> *safe,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-safe-safe">shishi_safe_safe</link>                    (<link linkend="Shishi-safe">Shishi_safe</link> *safe);
<link linkend="void">void</link>                <link linkend="shishi-safe-safe-set">shishi_safe_safe_set</link>                (<link linkend="Shishi-safe">Shishi_safe</link> *safe,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asn1safe);
<link linkend="int">int</link>                 <link linkend="shishi-safe-safe-der">shishi_safe_safe_der</link>                (<link linkend="Shishi-safe">Shishi_safe</link> *safe,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-safe-safe-der-set">shishi_safe_safe_der_set</link>            (<link linkend="Shishi-safe">Shishi_safe</link> *safe,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="int">int</link>                 <link linkend="shishi-safe-print">shishi_safe_print</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe);
<link linkend="int">int</link>                 <link linkend="shishi-safe-save">shishi_safe_save</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe);
<link linkend="int">int</link>                 <link linkend="shishi-safe-to-file">shishi_safe_to_file</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-safe-parse">shishi_safe_parse</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *safe);
<link linkend="int">int</link>                 <link linkend="shishi-safe-read">shishi_safe_read</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *safe);
<link linkend="int">int</link>                 <link linkend="shishi-safe-from-file">shishi_safe_from_file</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *safe,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-safe-cksum">shishi_safe_cksum</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe,
                                                         <link linkend="int32-t">int32_t</link> *cksumtype,
                                                         <link linkend="char">char</link> **cksum,
                                                         <link linkend="size-t">size_t</link> *cksumlen);
<link linkend="int">int</link>                 <link linkend="shishi-safe-set-cksum">shishi_safe_set_cksum</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe,
                                                         <link linkend="int32-t">int32_t</link> cksumtype,
                                                         const <link linkend="char">char</link> *cksum,
                                                         <link linkend="size-t">size_t</link> cksumlen);
<link linkend="int">int</link>                 <link linkend="shishi-safe-user-data">shishi_safe_user_data</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe,
                                                         <link linkend="char">char</link> **userdata,
                                                         <link linkend="size-t">size_t</link> *userdatalen);
<link linkend="int">int</link>                 <link linkend="shishi-safe-set-user-data">shishi_safe_set_user_data</link>           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe,
                                                         const <link linkend="char">char</link> *userdata,
                                                         <link linkend="size-t">size_t</link> userdatalen);
<link linkend="int">int</link>                 <link linkend="shishi-safe-build">shishi_safe_build</link>                   (<link linkend="Shishi-safe">Shishi_safe</link> *safe,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-safe-verify">shishi_safe_verify</link>                  (<link linkend="Shishi-safe">Shishi_safe</link> *safe,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-priv">shishi_priv</link>                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-priv">Shishi_priv</link> **priv);
<link linkend="void">void</link>                <link linkend="shishi-priv-done">shishi_priv_done</link>                    (<link linkend="Shishi-priv">Shishi_priv</link> *priv);
<link linkend="Shishi-key">Shishi_key</link>*         <link linkend="shishi-priv-key">shishi_priv_key</link>                     (<link linkend="Shishi-priv">Shishi_priv</link> *priv);
<link linkend="void">void</link>                <link linkend="shishi-priv-key-set">shishi_priv_key_set</link>                 (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-priv-priv">shishi_priv_priv</link>                    (<link linkend="Shishi-priv">Shishi_priv</link> *priv);
<link linkend="void">void</link>                <link linkend="shishi-priv-priv-set">shishi_priv_priv_set</link>                (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asn1priv);
<link linkend="int">int</link>                 <link linkend="shishi-priv-priv-der">shishi_priv_priv_der</link>                (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-priv-priv-der-set">shishi_priv_priv_der_set</link>            (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="Shishi-asn1">Shishi_asn1</link>         <link linkend="shishi-priv-encprivpart">shishi_priv_encprivpart</link>             (<link linkend="Shishi-priv">Shishi_priv</link> *priv);
<link linkend="void">void</link>                <link linkend="shishi-priv-encprivpart-set">shishi_priv_encprivpart_set</link>         (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asn1encprivpart);
<link linkend="int">int</link>                 <link linkend="shishi-priv-encprivpart-der">shishi_priv_encprivpart_der</link>         (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);
<link linkend="int">int</link>                 <link linkend="shishi-priv-encprivpart-der-set">shishi_priv_encprivpart_der_set</link>     (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);
<link linkend="int">int</link>                 <link linkend="shishi-priv-print">shishi_priv_print</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> priv);
<link linkend="int">int</link>                 <link linkend="shishi-priv-save">shishi_priv_save</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> priv);
<link linkend="int">int</link>                 <link linkend="shishi-priv-to-file">shishi_priv_to_file</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> priv,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-priv-parse">shishi_priv_parse</link>                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *priv);
<link linkend="int">int</link>                 <link linkend="shishi-priv-read">shishi_priv_read</link>                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *priv);
<link linkend="int">int</link>                 <link linkend="shishi-priv-from-file">shishi_priv_from_file</link>               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *priv,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);
<link linkend="int">int</link>                 <link linkend="shishi-priv-enc-part-etype">shishi_priv_enc_part_etype</link>          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> priv,
                                                         <link linkend="int32-t">int32_t</link> *etype);
<link linkend="int">int</link>                 <link linkend="shishi-priv-set-enc-part">shishi_priv_set_enc_part</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> priv,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *encpart,
                                                         <link linkend="size-t">size_t</link> encpartlen);
<link linkend="int">int</link>                 <link linkend="shishi-encprivpart-user-data">shishi_encprivpart_user_data</link>        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encprivpart,
                                                         <link linkend="char">char</link> **userdata,
                                                         <link linkend="size-t">size_t</link> *userdatalen);
<link linkend="int">int</link>                 <link linkend="shishi-encprivpart-set-user-data">shishi_encprivpart_set_user_data</link>    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encprivpart,
                                                         const <link linkend="char">char</link> *userdata,
                                                         <link linkend="size-t">size_t</link> userdatalen);
<link linkend="int">int</link>                 <link linkend="shishi-priv-build">shishi_priv_build</link>                   (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-priv-process">shishi_priv_process</link>                 (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);
<link linkend="int">int</link>                 <link linkend="shishi-authorized-p">shishi_authorized_p</link>                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         const <link linkend="char">char</link> *authzname);
<link linkend="int">int</link>                 <link linkend="shishi-authorization-parse">shishi_authorization_parse</link>          (const <link linkend="char">char</link> *authorization);
<link linkend="int">int</link>                 <link linkend="shishi-authorize-strcmp">shishi_authorize_strcmp</link>             (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *principal,
                                                         const <link linkend="char">char</link> *authzname);
<link linkend="int">int</link>                 <link linkend="shishi-authorize-k5login">shishi_authorize_k5login</link>            (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *principal,
                                                         const <link linkend="char">char</link> *authzname);
<link linkend="char">char</link>*               <link linkend="shishi-x509ca-default-file-guess">shishi_x509ca_default_file_guess</link>    (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="void">void</link>                <link linkend="shishi-x509ca-default-file-set">shishi_x509ca_default_file_set</link>      (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *x509cafile);
const <link linkend="char">char</link>*         <link linkend="shishi-x509ca-default-file">shishi_x509ca_default_file</link>          (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="char">char</link>*               <link linkend="shishi-x509cert-default-file-guess">shishi_x509cert_default_file_guess</link>  (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="void">void</link>                <link linkend="shishi-x509cert-default-file-set">shishi_x509cert_default_file_set</link>    (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *x509certfile);
const <link linkend="char">char</link>*         <link linkend="shishi-x509cert-default-file">shishi_x509cert_default_file</link>        (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="char">char</link>*               <link linkend="shishi-x509key-default-file-guess">shishi_x509key_default_file_guess</link>   (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="void">void</link>                <link linkend="shishi-x509key-default-file-set">shishi_x509key_default_file_set</link>     (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *x509keyfile);
const <link linkend="char">char</link>*         <link linkend="shishi-x509key-default-file">shishi_x509key_default_file</link>         (<link linkend="Shishi">Shishi</link> *handle);
<link linkend="time-t">time_t</link>              <link linkend="shishi-get-date">shishi_get_date</link>                     (const <link linkend="char">char</link> *p,
                                                         const <link linkend="time-t">time_t</link> *now);
<link linkend="void">void</link>                <link linkend="shishi-xalloc-die">shishi_xalloc_die</link>                   (void);
<link linkend="Shishi-dns">Shishi_dns</link>          <link linkend="shishi-resolv">shishi_resolv</link>                       (const <link linkend="char">char</link> *zone,
                                                         <link linkend="uint16-t">uint16_t</link> querytype);
<link linkend="void">void</link>                <link linkend="shishi-resolv-free">shishi_resolv_free</link>                  (<link linkend="Shishi-dns">Shishi_dns</link> rrs);
</synopsis>
</refsynopsisdiv>









<refsect1 id="shishi-shishi.description" role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 id="shishi-shishi.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="SHISHI-VERSION:CAPS" role="macro">
<title>SHISHI_VERSION</title>
<indexterm zone="SHISHI-VERSION:CAPS"><primary>SHISHI_VERSION</primary></indexterm><programlisting>#define SHISHI_VERSION "0.0.39"
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-rc" role="enum">
<title>enum Shishi_rc</title>
<indexterm zone="Shishi-rc"><primary>Shishi_rc</primary></indexterm><programlisting>typedef enum
{
  SHISHI_OK = 0,
  SHISHI_ASN1_ERROR = 1,
  SHISHI_FOPEN_ERROR = 2,
  SHISHI_IO_ERROR = 3,
  SHISHI_MALLOC_ERROR = 4,
  SHISHI_BASE64_ERROR = 5,
  SHISHI_REALM_MISMATCH = 6,
  SHISHI_CNAME_MISMATCH = 7,
  SHISHI_NONCE_MISMATCH = 8,
  SHISHI_TGSREP_BAD_KEYTYPE = 9,
  SHISHI_KDCREP_BAD_KEYTYPE = 10,
  SHISHI_APREP_BAD_KEYTYPE = 11,
  SHISHI_APREP_VERIFY_FAILED = 12,
  SHISHI_APREQ_BAD_KEYTYPE = 13,
  SHISHI_TOO_SMALL_BUFFER = 14,
  SHISHI_DERIVEDKEY_TOO_SMALL = 15,
  SHISHI_KEY_TOO_LARGE = 16,
  SHISHI_CRYPTO_ERROR = 17,
  SHISHI_CRYPTO_INTERNAL_ERROR = 18,
  SHISHI_SOCKET_ERROR = 19,
  SHISHI_BIND_ERROR = 20,
  SHISHI_SENDTO_ERROR = 21,
  SHISHI_RECVFROM_ERROR = 22,
  SHISHI_CLOSE_ERROR = 23,
  SHISHI_KDC_TIMEOUT = 24,
  SHISHI_KDC_NOT_KNOWN_FOR_REALM = 25,
  SHISHI_TTY_ERROR = 26,
  SHISHI_GOT_KRBERROR = 27,
  SHISHI_HANDLE_ERROR = 28,
  SHISHI_INVALID_TKTS = 29,
  SHISHI_TICKET_BAD_KEYTYPE = 30,
  SHISHI_INVALID_KEY = 31,
  SHISHI_APREQ_DECRYPT_FAILED = 32,
  SHISHI_TICKET_DECRYPT_FAILED = 33,
  SHISHI_INVALID_TICKET = 34,
  SHISHI_OUT_OF_RANGE = 35,
  SHISHI_ASN1_NO_ELEMENT = 36,
  SHISHI_SAFE_BAD_KEYTYPE = 37,
  SHISHI_SAFE_VERIFY_FAILED = 38,
  SHISHI_PKCS5_INVALID_PRF = 39,
  SHISHI_PKCS5_INVALID_ITERATION_COUNT = 40,
  SHISHI_PKCS5_INVALID_DERIVED_KEY_LENGTH = 41,
  SHISHI_PKCS5_DERIVED_KEY_TOO_LONG = 42,
  SHISHI_INVALID_PRINCIPAL_NAME = 43,
  SHISHI_INVALID_ARGUMENT = 44,
  SHISHI_ASN1_NO_VALUE = 45,
  SHISHI_CONNECT_ERROR = 46,
  SHISHI_VERIFY_FAILED = 47,
  SHISHI_PRIV_BAD_KEYTYPE = 48,
  SHISHI_FILE_ERROR = 49,
  SHISHI_ENCAPREPPART_BAD_KEYTYPE = 50,
  SHISHI_GETTIMEOFDAY_ERROR = 51,
  SHISHI_KEYTAB_ERROR = 52,
  SHISHI_CCACHE_ERROR = 53,
  SHISHI_LAST_ERROR = 53
}
Shishi_rc;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-name-type" role="enum">
<title>enum Shishi_name_type</title>
<indexterm zone="Shishi-name-type"><primary>Shishi_name_type</primary></indexterm><programlisting>typedef enum
{
  /* Name type not known */
  SHISHI_NT_UNKNOWN = 0,
  /* Just the name of the principal as in DCE, or for users */
  SHISHI_NT_PRINCIPAL = 1,
  /* Service and other unique instance (krbtgt) */
  SHISHI_NT_SRV_INST = 2,
  /* Service with host name as instance (telnet, rcommands) */
  SHISHI_NT_SRV_HST = 3,
  /* Service with host as remaining components */
  SHISHI_NT_SRV_XHST = 4,
  /* Unique ID */
  SHISHI_NT_UID = 5,
  /* Encoded X.509 Distingished name [RFC 2253] */
  SHISHI_NT_X500_PRINCIPAL = 6,
  /* Name in form of SMTP email name (e.g. user@foo.com) */
  SHISHI_NT_SMTP_NAME = 7,
  /*  Enterprise name - may be mapped to principal name */
  SHISHI_NT_ENTERPRISE = 10
}
Shishi_name_type;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-padata-type" role="enum">
<title>enum Shishi_padata_type</title>
<indexterm zone="Shishi-padata-type"><primary>Shishi_padata_type</primary></indexterm><programlisting>typedef enum
{
  SHISHI_PA_TGS_REQ = 1,
  SHISHI_PA_ENC_TIMESTAMP = 2,
  SHISHI_PA_PW_SALT = 3,
  SHISHI_PA_RESERVED = 4,
  SHISHI_PA_ENC_UNIX_TIME = 5,	/* (deprecated) */
  SHISHI_PA_SANDIA_SECUREID = 6,
  SHISHI_PA_SESAME = 7,
  SHISHI_PA_OSF_DCE = 8,
  SHISHI_PA_CYBERSAFE_SECUREID = 9,
  SHISHI_PA_AFS3_SALT = 10,
  SHISHI_PA_ETYPE_INFO = 11,
  SHISHI_PA_SAM_CHALLENGE = 12,	/* (sam/otp) */
  SHISHI_PA_SAM_RESPONSE = 13,	/* (sam/otp) */
  SHISHI_PA_PK_AS_REQ = 14,	/* (pkinit) */
  SHISHI_PA_PK_AS_REP = 15,	/* (pkinit) */
  SHISHI_PA_ETYPE_INFO2 = 19,	/* (replaces pa_etype_info) */
  SHISHI_PA_USE_SPECIFIED_KVNO = 20,
  SHISHI_PA_SAM_REDIRECT = 21,	/* (sam/otp) */
  SHISHI_PA_GET_FROM_TYPED_DATA = 22,	/* (embedded in typed data) */
  SHISHI_TD_PADATA = 22,	/* (embeds padata) */
  SHISHI_PA_SAM_ETYPE_INFO = 23,	/* (sam/otp) */
  SHISHI_PA_ALT_PRINC = 24,	/* (crawdad@fnal.gov) */
  SHISHI_PA_SAM_CHALLENGE2 = 30,	/* (kenh@pobox.com) */
  SHISHI_PA_SAM_RESPONSE2 = 31,	/* (kenh@pobox.com) */
  SHISHI_PA_EXTRA_TGT = 41,	/* Reserved extra TGT */
  SHISHI_TD_PKINIT_CMS_CERTIFICATES = 101,	/* CertificateSet from CMS */
  SHISHI_TD_KRB_PRINCIPAL = 102,	/* PrincipalName */
  SHISHI_TD_KRB_REALM = 103,	/* Realm */
  SHISHI_TD_TRUSTED_CERTIFIERS = 104,	/* from PKINIT */
  SHISHI_TD_CERTIFICATE_INDEX = 105,	/* from PKINIT */
  SHISHI_TD_APP_DEFINED_ERROR = 106,	/* application specific */
  SHISHI_TD_REQ_NONCE = 107,	/* INTEGER */
  SHISHI_TD_REQ_SEQ = 108,	/* INTEGER */
  SHISHI_PA_PAC_REQUEST = 128	/* (jbrezak@exchange.microsoft.com) */
}
Shishi_padata_type;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-tr-type" role="enum">
<title>enum Shishi_tr_type</title>
<indexterm zone="Shishi-tr-type"><primary>Shishi_tr_type</primary></indexterm><programlisting>typedef enum
{
  SHISHI_TR_DOMAIN_X500_COMPRESS = 1
}
Shishi_tr_type;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-apoptions" role="enum">
<title>enum Shishi_apoptions</title>
<indexterm zone="Shishi-apoptions"><primary>Shishi_apoptions</primary></indexterm><programlisting>typedef enum
{
  SHISHI_APOPTIONS_RESERVED = 0x1,	/* bit 0 */
  SHISHI_APOPTIONS_USE_SESSION_KEY = 0x2,	/* bit 1 */
  SHISHI_APOPTIONS_MUTUAL_REQUIRED = 0x4	/* bit 2 */
}
Shishi_apoptions;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-ticketflags" role="enum">
<title>enum Shishi_ticketflags</title>
<indexterm zone="Shishi-ticketflags"><primary>Shishi_ticketflags</primary></indexterm><programlisting>typedef enum
{
  SHISHI_TICKETFLAGS_RESERVED = 0x1,	/* bit 0 */
  SHISHI_TICKETFLAGS_FORWARDABLE = 0x2,	/* bit 1 */
  SHISHI_TICKETFLAGS_FORWARDED = 0x4,	/* bit 2 */
  SHISHI_TICKETFLAGS_PROXIABLE = 0x8,	/* bit 3 */
  SHISHI_TICKETFLAGS_PROXY = 0x10,	/* bit 4 */
  SHISHI_TICKETFLAGS_MAY_POSTDATE = 0x20,	/* bit 5 */
  SHISHI_TICKETFLAGS_POSTDATED = 0x40,	/* bit 6 */
  SHISHI_TICKETFLAGS_INVALID = 0x80,	/* bit 7 */
  SHISHI_TICKETFLAGS_RENEWABLE = 0x100,	/* bit 8 */
  SHISHI_TICKETFLAGS_INITIAL = 0x200,	/* bit 9 */
  SHISHI_TICKETFLAGS_PRE_AUTHENT = 0x400,	/* bit 10 */
  SHISHI_TICKETFLAGS_HW_AUTHENT = 0x800,	/* bit 11 */
  SHISHI_TICKETFLAGS_TRANSITED_POLICY_CHECKED = 0x1000,	/* bit 12 */
  SHISHI_TICKETFLAGS_OK_AS_DELEGATE = 0x2000	/* bit 13 */
}
Shishi_ticketflags;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-KDCOptions" role="enum">
<title>enum Shishi_KDCOptions</title>
<indexterm zone="Shishi-KDCOptions"><primary>Shishi_KDCOptions</primary></indexterm><programlisting>typedef enum
{
  SHISHI_KDCOPTIONS_RESERVED = 0x1,	/* bit 0 */
  SHISHI_KDCOPTIONS_FORWARDABLE = 0x2,	/* bit 1 */
  SHISHI_KDCOPTIONS_FORWARDED = 0x4,	/* bit 2 */
  SHISHI_KDCOPTIONS_PROXIABLE = 0x8,	/* bit 3 */
  SHISHI_KDCOPTIONS_PROXY = 0x10,	/* bit 4 */
  SHISHI_KDCOPTIONS_ALLOW_POSTDATE = 0x20,	/* bit 5 */
  SHISHI_KDCOPTIONS_POSTDATED = 0x40,	/* bit 6 */
  SHISHI_KDCOPTIONS_UNUSED7 = 0x80,	/* bit 7 */
  SHISHI_KDCOPTIONS_RENEWABLE = 0x100,	/* bit 8 */
  SHISHI_KDCOPTIONS_UNUSED9 = 0x200,	/* bit 9 */
  SHISHI_KDCOPTIONS_UNUSED10 = 0x400,	/* bit 10 */
  SHISHI_KDCOPTIONS_UNUSED11 = 0x800	/* bit 11 */
#define SHISHI_KDCOPTIONS_DISABLE_TRANSITED_CHECK 0x4000000	/* bit 26 */
#define SHISHI_KDCOPTIONS_RENEWABLE_OK		  0x8000000	/* bit 27 */
#define SHISHI_KDCOPTIONS_ENC_TKT_IN_SKEY	  0x10000000	/* bit 28 */
#define SHISHI_KDCOPTIONS_RENEW			  0x40000000	/* bit 30 */
#define SHISHI_KDCOPTIONS_VALIDATE		  0x80000000	/* bit 31 */
}
Shishi_KDCOptions;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-msgtype" role="enum">
<title>enum Shishi_msgtype</title>
<indexterm zone="Shishi-msgtype"><primary>Shishi_msgtype</primary></indexterm><programlisting>typedef enum
{
  /* 0                             unused */
  /* 1              Ticket         PDU */
  /* 2              Authenticator  non-PDU */
  /* 3              EncTicketPart  non-PDU */
  /* 4-9                           unused */
  /* Request for initial authentication */
  SHISHI_MSGTYPE_AS_REQ = 10,
  /* Response to SHISHI_MSGTYPE_AS_REQ request */
  SHISHI_MSGTYPE_AS_REP = 11,
  /* Request for authentication based on TGT */
  SHISHI_MSGTYPE_TGS_REQ = 12,
  /* Response to SHISHI_MSGTYPE_TGS_REQ request */
  SHISHI_MSGTYPE_TGS_REP = 13,
  /* application request to server */
  SHISHI_MSGTYPE_AP_REQ = 14,
  /* Response to SHISHI_MSGTYPE_AP_REQ_MUTUAL */
  SHISHI_MSGTYPE_AP_REP = 15,
  /* Reserved for user-to-user krb_tgt_request */
  SHISHI_MSGTYPE_RESERVED16 = 16,
  /* Reserved for user-to-user krb_tgt_reply */
  SHISHI_MSGTYPE_RESERVED17 = 17,
  /* 18-19                         unused */
  /* Safe (checksummed) application message */
  SHISHI_MSGTYPE_SAFE = 20,
  /* Private (encrypted) application message */
  SHISHI_MSGTYPE_PRIV = 21,
  /* Private (encrypted) message to forward credentials */
  SHISHI_MSGTYPE_CRED = 22,
  /* 23-24                         unused */
  /* 25             EncASRepPart   non-PDU */
  /* 26             EncTGSRepPart  non-PDU */
  /* 27             EncApRepPart   non-PDU */
  /* 28             EncKrbPrivPart non-PDU */
  /* 29             EncKrbCredPart non-PDU */
  /* Error response */
  SHISHI_MSGTYPE_ERROR = 30
}
Shishi_msgtype;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-lrtype" role="enum">
<title>enum Shishi_lrtype</title>
<indexterm zone="Shishi-lrtype"><primary>Shishi_lrtype</primary></indexterm><programlisting>typedef enum
{
  SHISHI_LRTYPE_LAST_INITIAL_TGT_REQUEST = 1,
  SHISHI_LRTYPE_LAST_INITIAL_REQUEST = 2,
  SHISHI_LRTYPE_NEWEST_TGT_ISSUE = 3,
  SHISHI_LRTYPE_LAST_RENEWAL = 4,
  SHISHI_LRTYPE_LAST_REQUEST = 5
}
Shishi_lrtype;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-etype" role="enum">
<title>enum Shishi_etype</title>
<indexterm zone="Shishi-etype"><primary>Shishi_etype</primary></indexterm><programlisting>typedef enum
{
  SHISHI_NULL = 0,
  SHISHI_DES_CBC_CRC = 1,
  SHISHI_DES_CBC_MD4 = 2,
  SHISHI_DES_CBC_MD5 = 3,
  SHISHI_DES_CBC_NONE = 4,
  SHISHI_DES3_CBC_NONE = 6,
  SHISHI_DES3_CBC_HMAC_SHA1_KD = 16,
  SHISHI_AES128_CTS_HMAC_SHA1_96 = 17,
  SHISHI_AES256_CTS_HMAC_SHA1_96 = 18,
  SHISHI_ARCFOUR_HMAC = 23,
  SHISHI_ARCFOUR_HMAC_EXP = 24
}
Shishi_etype;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-cksumtype" role="enum">
<title>enum Shishi_cksumtype</title>
<indexterm zone="Shishi-cksumtype"><primary>Shishi_cksumtype</primary></indexterm><programlisting>typedef enum
{
  SHISHI_CRC32 = 1,
  SHISHI_RSA_MD4 = 2,
  SHISHI_RSA_MD4_DES = 3,
  SHISHI_DES_MAC = 4,
  SHISHI_DES_MAC_K = 5,
  SHISHI_RSA_MD4_DES_K = 6,
  SHISHI_RSA_MD5 = 7,
  SHISHI_RSA_MD5_DES = 8,
  SHISHI_RSA_MD5_DES_GSS = 9,	/* XXX */
  SHISHI_HMAC_SHA1_DES3_KD = 12,
  SHISHI_HMAC_SHA1_96_AES128 = 15,
  SHISHI_HMAC_SHA1_96_AES256 = 16,
  SHISHI_ARCFOUR_HMAC_MD5 = -138,
  SHISHI_KRB5_GSSAPI_CKSUM = 8003,
  SHISHI_NO_CKSUMTYPE = -1
}
Shishi_cksumtype;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-filetype" role="enum">
<title>enum Shishi_filetype</title>
<indexterm zone="Shishi-filetype"><primary>Shishi_filetype</primary></indexterm><programlisting>typedef enum
{
  SHISHI_FILETYPE_TEXT = 0,
  SHISHI_FILETYPE_DER,
  SHISHI_FILETYPE_HEX,
  SHISHI_FILETYPE_BASE64,
  SHISHI_FILETYPE_BINARY
}
Shishi_filetype;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-outputtype" role="enum">
<title>enum Shishi_outputtype</title>
<indexterm zone="Shishi-outputtype"><primary>Shishi_outputtype</primary></indexterm><programlisting>typedef enum
{
  SHISHI_OUTPUTTYPE_NULL = 0,
  SHISHI_OUTPUTTYPE_STDERR,
  SHISHI_OUTPUTTYPE_SYSLOG
}
Shishi_outputtype;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-authorization" role="enum">
<title>enum Shishi_authorization</title>
<indexterm zone="Shishi-authorization"><primary>Shishi_authorization</primary></indexterm><programlisting>typedef enum
{
  SHISHI_AUTHORIZATION_BASIC = 0,
  SHISHI_AUTHORIZATION_K5LOGIN
}
Shishi_authorization;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-keyusage" role="enum">
<title>enum Shishi_keyusage</title>
<indexterm zone="Shishi-keyusage"><primary>Shishi_keyusage</primary></indexterm><programlisting>typedef enum
{
  /* 1. AS-REQ PA-ENC-TIMESTAMP padata timestamp, encrypted with the
     client key */
  SHISHI_KEYUSAGE_ASREQ_PA_ENC_TIMESTAMP = 1,
  /* 2. AS-REP Ticket and TGS-REP Ticket (includes TGS session key or
     application session key), encrypted with the service key  */
  SHISHI_KEYUSAGE_ENCTICKETPART = 2,
  /* 3. AS-REP encrypted part (includes TGS session key or application
     session key), encrypted with the client key */
  SHISHI_KEYUSAGE_ENCASREPPART = 3,
  /* 4. TGS-REQ KDC-REQ-BODY AuthorizationData, encrypted with the TGS
     session key  */
  SHISHI_KEYUSAGE_TGSREQ_AUTHORIZATIONDATA_TGS_SESSION_KEY = 4,
  /* 5. TGS-REQ KDC-REQ-BODY AuthorizationData, encrypted with the TGS
     authenticator subkey (section 5.4.1) */
  SHISHI_KEYUSAGE_TGSREQ_AUTHORIZATIONDATA_TGS_AUTHENTICATOR_KEY = 5,
  /* 6. TGS-REQ PA-TGS-REQ padata AP-REQ Authenticator cksum, keyed with the
     TGS session key  */
  SHISHI_KEYUSAGE_TGSREQ_APREQ_AUTHENTICATOR_CKSUM = 6,
  /* 7. TGS-REQ PA-TGS-REQ padata AP-REQ Authenticator (includes TGS
     authenticator subkey), encrypted with the TGS session key */
  SHISHI_KEYUSAGE_TGSREQ_APREQ_AUTHENTICATOR = 7,
  /* 8. TGS-REP encrypted part (includes application session key), encrypted
     with the TGS session key */
  SHISHI_KEYUSAGE_ENCTGSREPPART_SESSION_KEY = 8,
  /* 9. TGS-REP encrypted part (includes application session key), encrypted
     with the TGS authenticator subkey */
  SHISHI_KEYUSAGE_ENCTGSREPPART_AUTHENTICATOR_KEY = 9,
  /* 10. AP-REQ Authenticator cksum, keyed with the application
     session key */
  SHISHI_KEYUSAGE_APREQ_AUTHENTICATOR_CKSUM = 10,
  /* 11. AP-REQ Authenticator (includes application authenticator subkey),
     encrypted with the application session key */
  SHISHI_KEYUSAGE_APREQ_AUTHENTICATOR = 11,
  /* 12. AP-REP encrypted part (includes application session subkey),
     encrypted with the application session key */
  SHISHI_KEYUSAGE_ENCAPREPPART = 12,
  /* 13. KRB-PRIV encrypted part, encrypted with a key chosen by the
     application */
  SHISHI_KEYUSAGE_KRB_PRIV = 13,
  /* 14. KRB-CRED encrypted part, encrypted with a key chosen by the
     application */
  SHISHI_KEYUSAGE_KRB_CRED = 14,
  /* 15. KRB-SAFE cksum, keyed with a key chosen by the application */
  SHISHI_KEYUSAGE_KRB_SAFE = 15,
  /* 18. KRB-ERROR checksum (e-cksum) */
  SHISHI_KEYUSAGE_KRB_ERROR = 18,
  /* 19. AD-KDCIssued checksum (ad-checksum) */
  SHISHI_KEYUSAGE_AD_KDCISSUED = 19,
  /* 20. Checksum for Mandatory Ticket Extensions */
  SHISHI_KEYUSAGE_TICKET_EXTENSION = 20,
  /* 21. Checksum in Authorization Data in Ticket Extensions */
  SHISHI_KEYUSAGE_TICKET_EXTENSION_AUTHORIZATION = 21,
  /* 22-24. Reserved for use in GSSAPI mechanisms derived from RFC 1964.
     (raeburn/MIT) */
  SHISHI_KEYUSAGE_GSS_R1 = 22,
  SHISHI_KEYUSAGE_GSS_R2 = 23,
  SHISHI_KEYUSAGE_GSS_R3 = 24,
  /* draft-ietf-krb-wg-gssapi-cfx */
  SHISHI_KEYUSAGE_ACCEPTOR_SEAL = 22,
  SHISHI_KEYUSAGE_ACCEPTOR_SIGN = 23,
  SHISHI_KEYUSAGE_INITIATOR_SEAL = 24,
  SHISHI_KEYUSAGE_INITIATOR_SIGN = 25,
  /* 16-18,20-21,25-511. Reserved for future use. */
  /* 512-1023.  Reserved for uses internal implementations. */
  /* 1024.         Encryption for application use in protocols that
     do not specify key usage values */
  /* 1025.         Checksums for application use in protocols that
     do not specify key usage values */
  /* 1026-2047.      Reserved for application use.
     1026,1028,1030,1032,1034 used in KCMD protocol */
  SHISHI_KEYUSAGE_KCMD_DES = 1026,
  SHISHI_KEYUSAGE_KCMD_INPUT = 1028,
  SHISHI_KEYUSAGE_KCMD_OUTPUT = 1030,
  SHISHI_KEYUSAGE_KCMD_STDERR_INPUT = 1032,
  SHISHI_KEYUSAGE_KCMD_STDERR_OUTPUT = 1034
}
Shishi_keyusage;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-krb-error" role="enum">
<title>enum Shishi_krb_error</title>
<indexterm zone="Shishi-krb-error"><primary>Shishi_krb_error</primary></indexterm><programlisting>typedef enum
{
  /* No error */
  SHISHI_KDC_ERR_NONE = 0,
  /* Client's entry in database has expired */
  SHISHI_KDC_ERR_NAME_EXP = 1,
  /* Server's entry in database has expired */
  SHISHI_KDC_ERR_SERVICE_EXP = 2,
  /* Requested protocol version number  - not supported */
  SHISHI_KDC_ERR_BAD_PVNO = 3,
  /* Client's key encrypted in old master key */
  SHISHI_KDC_ERR_C_OLD_MAST_KVNO = 4,
  /* Server's key encrypted in old master key */
  SHISHI_KDC_ERR_S_OLD_MAST_KVNO = 5,
  /* Client not found in database */
  SHISHI_KDC_ERR_C_PRINCIPAL_UNKNOWN = 6,
  /* Server not found in database */
  SHISHI_KDC_ERR_S_PRINCIPAL_UNKNOWN = 7,
  /* Multiple principal entries in database */
  SHISHI_KDC_ERR_PRINCIPAL_NOT_UNIQUE = 8,
  /* The client or server has a null key */
  SHISHI_KDC_ERR_NULL_KEY = 9,
  /* Ticket not eligible for postdating */
  SHISHI_KDC_ERR_CANNOT_POSTDATE = 10,
  /* Requested start time is later than end time */
  SHISHI_KDC_ERR_NEVER_VALID = 11,
  /* KDC policy rejects request */
  SHISHI_KDC_ERR_POLICY = 12,
  /* KDC cannot accommodate requested option */
  SHISHI_KDC_ERR_BADOPTION = 13,
  /* KDC has no support for encryption type */
  SHISHI_KDC_ERR_ETYPE_NOSUPP = 14,
  /* KDC has no support for checksum type */
  SHISHI_KDC_ERR_SUMTYPE_NOSUPP = 15,
  /* KDC has no support for padata type */
  SHISHI_KDC_ERR_PADATA_TYPE_NOSUPP = 16,
  /* KDC has no support for transited type */
  SHISHI_KDC_ERR_TRTYPE_NOSUPP = 17,
  /* Clients credentials have been revoked */
  SHISHI_KDC_ERR_CLIENT_REVOKED = 18,
  /* Credentials for server have been revoked */
  SHISHI_KDC_ERR_SERVICE_REVOKED = 19,
  /* TGT has been revoked */
  SHISHI_KDC_ERR_TGT_REVOKED = 20,
  /* Client not yet valid - try again later */
  SHISHI_KDC_ERR_CLIENT_NOTYET = 21,
  /* Server not yet valid - try again later */
  SHISHI_KDC_ERR_SERVICE_NOTYET = 22,
  /* Password has expired - change password to reset */
  SHISHI_KDC_ERR_KEY_EXPIRED = 23,
  /* Pre-authentication information was invalid */
  SHISHI_KDC_ERR_PREAUTH_FAILED = 24,
  /* Additional pre-authenticationrequired */
  SHISHI_KDC_ERR_PREAUTH_REQUIRED = 25,
  /* Requested server and ticket don't match */
  SHISHI_KDC_ERR_SERVER_NOMATCH = 26,
  /* Server principal valid for user = 2,user only */
  SHISHI_KDC_ERR_MUST_USE_USER2USER = 27,
  /* KDC Policy rejects transited path */
  SHISHI_KDC_ERR_PATH_NOT_ACCPETED = 28,
  /* A service is not available */
  SHISHI_KDC_ERR_SVC_UNAVAILABLE = 29,
  /* Integrity check on decrypted field failed */
  SHISHI_KRB_AP_ERR_BAD_INTEGRITY = 31,
  /* Ticket expired */
  SHISHI_KRB_AP_ERR_TKT_EXPIRED = 32,
  /* Ticket not yet valid */
  SHISHI_KRB_AP_ERR_TKT_NYV = 33,
  /* Request is a replay */
  SHISHI_KRB_AP_ERR_REPEAT = 34,
  /* The ticket isn't for us */
  SHISHI_KRB_AP_ERR_NOT_US = 35,
  /* Ticket and authenticator don't match */
  SHISHI_KRB_AP_ERR_BADMATCH = 36,
  /* Clock skew too great */
  SHISHI_KRB_AP_ERR_SKEW = 37,
  /* Incorrect net address */
  SHISHI_KRB_AP_ERR_BADADDR = 38,
  /* Protocol version mismatch */
  SHISHI_KRB_AP_ERR_BADVERSION = 39,
  /* Invalid msg type */
  SHISHI_KRB_AP_ERR_MSG_TYPE = 40,
  /* Message stream modified */
  SHISHI_KRB_AP_ERR_MODIFIED = 41,
  /* Message out of order */
  SHISHI_KRB_AP_ERR_BADORDER = 42,
  /* Specified version of key is not available */
  SHISHI_KRB_AP_ERR_BADKEYVER = 44,
  /* Service key not available */
  SHISHI_KRB_AP_ERR_NOKEY = 45,
  /* Mutual authentication failed */
  SHISHI_KRB_AP_ERR_MUT_FAIL = 46,
  /* Incorrect message direction */
  SHISHI_KRB_AP_ERR_BADDIRECTION = 47,
  /* Alternative authentication method required */
  SHISHI_KRB_AP_ERR_METHOD = 48,
  /* Incorrect sequence number in message */
  SHISHI_KRB_AP_ERR_BADSEQ = 49,
  /* Inappropriate type of checksum in message */
  SHISHI_KRB_AP_ERR_INAPP_CKSUM = 50,
  /* Policy rejects transited path */
  SHISHI_KRB_AP_PATH_NOT_ACCEPTED = 51,
  /* Response too big for UDP, retry with TCP */
  SHISHI_KRB_ERR_RESPONSE_TOO_BIG = 52,
  /* Generic error (description in e-text) */
  SHISHI_KRB_ERR_GENERIC = 60,
  /* Field is too long for this implementation */
  SHISHI_KRB_ERR_FIELD_TOOLONG = 61,
  /* Reserved for PKINIT */
  SHISHI_KDC_ERROR_CLIENT_NOT_TRUSTED = 62,
  /* Reserved for PKINIT */
  SHISHI_KDC_ERROR_KDC_NOT_TRUSTED = 63,
  /* Reserved for PKINIT */
  SHISHI_KDC_ERROR_INVALID_SIG = 64,
  /* Reserved for PKINIT */
  SHISHI_KDC_ERR_KEY_TOO_WEAK = 65,
  /* Reserved for PKINIT */
  SHISHI_KDC_ERR_CERTIFICATE_MISMATCH = 66,
  /* No TGT available to validate USER-TO-USER */
  SHISHI_KRB_AP_ERR_NO_TGT = 67,
  /* USER-TO-USER TGT issued different KDC */
  SHISHI_KDC_ERR_WRONG_REALM = 68,
  /* Ticket must be for USER-TO-USER */
  SHISHI_KRB_AP_ERR_USER_TO_USER_REQUIRED = 69,
  /* Reserved for PKINIT */
  SHISHI_KDC_ERR_CANT_VERIFY_CERTIFICATE = 70,
  /* Reserved for PKINIT */
  SHISHI_KDC_ERR_INVALID_CERTIFICATE = 71,
  /* Reserved for PKINIT */
  SHISHI_KDC_ERR_REVOKED_CERTIFICATE = 72,
  /* Reserved for PKINIT */
  SHISHI_KDC_ERR_REVOCATION_STATUS_UNKNOWN = 73,
  /* Reserved for PKINIT */
  SHISHI_KDC_ERR_REVOCATION_STATUS_UNAVAILABLE = 74,
  /* Reserved for PKINIT */
  SHISHI_KDC_ERR_CLIENT_NAME_MISMATCH = 75,
  /* Reserved for PKINIT */
  SHISHI_KDC_ERR_KDC_NAME_MISMATCH = 76,
  SHISHI_LAST_ERROR_CODE = 76
}
Shishi_krb_error;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-tkts-hintflags" role="enum">
<title>enum Shishi_tkts_hintflags</title>
<indexterm zone="Shishi-tkts-hintflags"><primary>Shishi_tkts_hintflags</primary></indexterm><programlisting>typedef enum
{
  SHISHI_TKTSHINTFLAGS_ACCEPT_EXPIRED = 1,
  SHISHI_TKTSHINTFLAGS_NON_INTERACTIVE = 2
}
Shishi_tkts_hintflags;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-tkts-hint" role="typedef">
<title>Shishi_tkts_hint</title>
<indexterm zone="Shishi-tkts-hint"><primary>Shishi_tkts_hint</primary></indexterm><programlisting>typedef struct Shishi_tkts_hint Shishi_tkts_hint;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="SHISHI-DNS-IN:CAPS" role="macro">
<title>SHISHI_DNS_IN</title>
<indexterm zone="SHISHI-DNS-IN:CAPS"><primary>SHISHI_DNS_IN</primary></indexterm><programlisting>#define SHISHI_DNS_IN 1
</programlisting>
<para>

</para></refsect2>
<refsect2 id="SHISHI-DNS-TXT:CAPS" role="macro">
<title>SHISHI_DNS_TXT</title>
<indexterm zone="SHISHI-DNS-TXT:CAPS"><primary>SHISHI_DNS_TXT</primary></indexterm><programlisting>#define SHISHI_DNS_TXT 16
</programlisting>
<para>

</para></refsect2>
<refsect2 id="SHISHI-DNS-SRV:CAPS" role="macro">
<title>SHISHI_DNS_SRV</title>
<indexterm zone="SHISHI-DNS-SRV:CAPS"><primary>SHISHI_DNS_SRV</primary></indexterm><programlisting>#define SHISHI_DNS_SRV 33
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-dns" role="typedef">
<title>Shishi_dns</title>
<indexterm zone="Shishi-dns"><primary>Shishi_dns</primary></indexterm><programlisting>typedef struct Shishi_dns_st *Shishi_dns;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-dns-srv" role="typedef">
<title>Shishi_dns_srv</title>
<indexterm zone="Shishi-dns-srv"><primary>Shishi_dns_srv</primary></indexterm><programlisting>typedef struct Shishi_dns_srv_st *Shishi_dns_srv;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi" role="typedef">
<title>Shishi</title>
<indexterm zone="Shishi"><primary>Shishi</primary></indexterm><programlisting>typedef struct Shishi Shishi;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-tkt" role="typedef">
<title>Shishi_tkt</title>
<indexterm zone="Shishi-tkt"><primary>Shishi_tkt</primary></indexterm><programlisting>typedef struct Shishi_tkt Shishi_tkt;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-tkts" role="typedef">
<title>Shishi_tkts</title>
<indexterm zone="Shishi-tkts"><primary>Shishi_tkts</primary></indexterm><programlisting>typedef struct Shishi_tkts Shishi_tkts;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-as" role="typedef">
<title>Shishi_as</title>
<indexterm zone="Shishi-as"><primary>Shishi_as</primary></indexterm><programlisting>typedef struct Shishi_as Shishi_as;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-tgs" role="typedef">
<title>Shishi_tgs</title>
<indexterm zone="Shishi-tgs"><primary>Shishi_tgs</primary></indexterm><programlisting>typedef struct Shishi_tgs Shishi_tgs;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-ap" role="typedef">
<title>Shishi_ap</title>
<indexterm zone="Shishi-ap"><primary>Shishi_ap</primary></indexterm><programlisting>typedef struct Shishi_ap Shishi_ap;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-key" role="typedef">
<title>Shishi_key</title>
<indexterm zone="Shishi-key"><primary>Shishi_key</primary></indexterm><programlisting>typedef struct Shishi_key Shishi_key;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-keys" role="typedef">
<title>Shishi_keys</title>
<indexterm zone="Shishi-keys"><primary>Shishi_keys</primary></indexterm><programlisting>typedef struct Shishi_keys Shishi_keys;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-safe" role="typedef">
<title>Shishi_safe</title>
<indexterm zone="Shishi-safe"><primary>Shishi_safe</primary></indexterm><programlisting>typedef struct Shishi_safe Shishi_safe;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-priv" role="typedef">
<title>Shishi_priv</title>
<indexterm zone="Shishi-priv"><primary>Shishi_priv</primary></indexterm><programlisting>typedef struct Shishi_priv Shishi_priv;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="Shishi-asn1" role="typedef">
<title>Shishi_asn1</title>
<indexterm zone="Shishi-asn1"><primary>Shishi_asn1</primary></indexterm><para>

</para></refsect2>
<refsect2 id="Shishi-crypto" role="typedef">
<title>Shishi_crypto</title>
<indexterm zone="Shishi-crypto"><primary>Shishi_crypto</primary></indexterm><programlisting>typedef struct Shishi_crypto Shishi_crypto;
</programlisting>
<para>

</para></refsect2>
<refsect2 id="SHISHI-GENERALIZEDTIME-LENGTH:CAPS" role="macro">
<title>SHISHI_GENERALIZEDTIME_LENGTH</title>
<indexterm zone="SHISHI-GENERALIZEDTIME-LENGTH:CAPS"><primary>SHISHI_GENERALIZEDTIME_LENGTH</primary></indexterm><programlisting>#define SHISHI_GENERALIZEDTIME_LENGTH 15
</programlisting>
<para>

</para></refsect2>
<refsect2 id="SHISHI-GENERALIZEDTIMEZ-LENGTH:CAPS" role="macro">
<title>SHISHI_GENERALIZEDTIMEZ_LENGTH</title>
<indexterm zone="SHISHI-GENERALIZEDTIMEZ-LENGTH:CAPS"><primary>SHISHI_GENERALIZEDTIMEZ_LENGTH</primary></indexterm><programlisting>#define SHISHI_GENERALIZEDTIMEZ_LENGTH (SHISHI_GENERALIZEDTIME_LENGTH + 1)
</programlisting>
<para>

</para></refsect2>
<refsect2 id="shishi-alloc-fail-function" role="function">
<title>shishi_alloc_fail_function ()</title>
<indexterm zone="shishi-alloc-fail-function"><primary>shishi_alloc_fail_function</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_alloc_fail_function          (void);</programlisting>
<para>

</para></refsect2>
<refsect2 id="shishi" role="function">
<title>shishi ()</title>
<indexterm zone="shishi"><primary>shishi</primary></indexterm><programlisting><link linkend="Shishi">Shishi</link>*             shishi                              (void);</programlisting>
<para>
Initializes the Shishi library, and set up, using
<link linkend="shishi-error-set-outputtype"><function>shishi_error_set_outputtype()</function></link>, the library so that future warnings
and informational messages are printed to stderr.  If this function
fails, it may print diagnostic errors to stderr.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns Shishi library handle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-server" role="function">
<title>shishi_server ()</title>
<indexterm zone="shishi-server"><primary>shishi_server</primary></indexterm><programlisting><link linkend="Shishi">Shishi</link>*             shishi_server                       (void);</programlisting>
<para>
Initializes the Shishi library, and set up, using
<link linkend="shishi-error-set-outputtype"><function>shishi_error_set_outputtype()</function></link>, the library so that future warnings
and informational messages are printed to the syslog.  If this
function fails, it may print diagnostic errors to the syslog.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns Shishi library handle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-done" role="function">
<title>shishi_done ()</title>
<indexterm zone="shishi-done"><primary>shishi_done</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_done                         (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Deallocates the shishi library handle.  The handle must not be used
in any calls to shishi functions after this.
</para>
<para>
If there is a default tkts, it is written to the default tkts file
(call <link linkend="shishi-tkts-default-file-set"><function>shishi_tkts_default_file_set()</function></link> to change the default tkts
file). If you do not wish to write the default tkts file, close the
default tkts with shishi_tkts_done(handle, NULL) before calling
this function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-init" role="function">
<title>shishi_init ()</title>
<indexterm zone="shishi-init"><primary>shishi_init</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_init                         (<link linkend="Shishi">Shishi</link> **handle);</programlisting>
<para>
Create a Shishi library handle, using <link linkend="shishi"><function>shishi()</function></link>, and read the system
configuration file, user configuration file and user tickets from
their default locations.  The paths to the system configuration
file is decided at compile time, and is $sysconfdir/shishi.conf.
The user configuration file is $HOME/.shishi/config, and the user
ticket file is $HOME/.shishi/ticket.
</para>
<para>
The handle is allocated regardless of return values, except for
SHISHI_HANDLE_ERROR which indicates a problem allocating the
handle.  (The other error conditions comes from reading the files.)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> pointer to handle to be created.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-init-with-paths" role="function">
<title>shishi_init_with_paths ()</title>
<indexterm zone="shishi-init-with-paths"><primary>shishi_init_with_paths</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_init_with_paths              (<link linkend="Shishi">Shishi</link> **handle,
                                                         const <link linkend="char">char</link> *tktsfile,
                                                         const <link linkend="char">char</link> *systemcfgfile,
                                                         const <link linkend="char">char</link> *usercfgfile);</programlisting>
<para>
Create a Shishi library handle, using <link linkend="shishi"><function>shishi()</function></link>, and read the system
configuration file, user configuration file, and user tickets from
the specified locations.  If any of <parameter>usercfgfile</parameter> or <parameter>systemcfgfile</parameter>
is NULL, the file is read from its default location, which for the
system configuration file is decided at compile time, and is
$sysconfdir/shishi.conf, and for the user configuration file is
$HOME/.shishi/config.  If the ticket file is NULL, a ticket file is
not read at all.
</para>
<para>
The handle is allocated regardless of return values, except for
SHISHI_HANDLE_ERROR which indicates a problem allocating the
handle.  (The other error conditions comes from reading the files.)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> pointer to handle to be created.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tktsfile</parameter>&nbsp;:</term>
<listitem><simpara> Filename of ticket file, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>systemcfgfile</parameter>&nbsp;:</term>
<listitem><simpara> Filename of system configuration, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>usercfgfile</parameter>&nbsp;:</term>
<listitem><simpara> Filename of user configuration, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-init-server" role="function">
<title>shishi_init_server ()</title>
<indexterm zone="shishi-init-server"><primary>shishi_init_server</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_init_server                  (<link linkend="Shishi">Shishi</link> **handle);</programlisting>
<para>
Create a Shishi library handle, using <link linkend="shishi-server"><function>shishi_server()</function></link>, and read the
system configuration file.  The paths to the system configuration
file is decided at compile time, and is $sysconfdir/shishi.conf.
</para>
<para>
The handle is allocated regardless of return values, except for
SHISHI_HANDLE_ERROR which indicates a problem allocating the
handle.  (The other error conditions comes from reading the file.)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> pointer to handle to be created.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-init-server-with-paths" role="function">
<title>shishi_init_server_with_paths ()</title>
<indexterm zone="shishi-init-server-with-paths"><primary>shishi_init_server_with_paths</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_init_server_with_paths       (<link linkend="Shishi">Shishi</link> **handle,
                                                         const <link linkend="char">char</link> *systemcfgfile);</programlisting>
<para>
Create a Shishi library handle, using <link linkend="shishi-server"><function>shishi_server()</function></link>, and read the
system configuration file from specified location.  The paths to
the system configuration file is decided at compile time, and is
$sysconfdir/shishi.conf.  The handle is allocated regardless of
return values, except for SHISHI_HANDLE_ERROR which indicates a
problem allocating the handle.  (The other error conditions comes
from reading the file.)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> pointer to handle to be created.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>systemcfgfile</parameter>&nbsp;:</term>
<listitem><simpara> Filename of system configuration, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cfg" role="function">
<title>shishi_cfg ()</title>
<indexterm zone="shishi-cfg"><primary>shishi_cfg</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_cfg                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *option);</programlisting>
<para>
Configure shishi library with given option.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>option</parameter>&nbsp;:</term>
<listitem><simpara> string with shishi library option.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if option was valid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cfg-from-file" role="function">
<title>shishi_cfg_from_file ()</title>
<indexterm zone="shishi-cfg-from-file"><primary>shishi_cfg_from_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_cfg_from_file                (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *cfg);</programlisting>
<para>
Configure shishi library using configuration file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cfg</parameter>&nbsp;:</term>
<listitem><simpara> filename to read configuration from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cfg-print" role="function">
<title>shishi_cfg_print ()</title>
<indexterm zone="shishi-cfg-print"><primary>shishi_cfg_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_cfg_print                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);</programlisting>
<para>
Print library configuration status, mostly for debugging purposes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file descriptor opened for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cfg-default-systemfile" role="function">
<title>shishi_cfg_default_systemfile ()</title>
<indexterm zone="shishi-cfg-default-systemfile"><primary>shishi_cfg_default_systemfile</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_cfg_default_systemfile       (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
The system configuration file name is decided at compile-time, but
may be overridden by the environment variable SHISHI_CONFIG.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return system configuration file name.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cfg-default-userdirectory" role="function">
<title>shishi_cfg_default_userdirectory ()</title>
<indexterm zone="shishi-cfg-default-userdirectory"><primary>shishi_cfg_default_userdirectory</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_cfg_default_userdirectory    (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
The default user directory (used for, e.g. Shishi ticket cache) is
normally computed by appending BASE_DIR ("/.shishi") to the content
of the environment variable $HOME, but can be overridden by
specifying the complete path in the environment variable
SHISHI_HOME.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return directory with configuration files etc.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cfg-default-userfile" role="function">
<title>shishi_cfg_default_userfile ()</title>
<indexterm zone="shishi-cfg-default-userfile"><primary>shishi_cfg_default_userfile</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_cfg_default_userfile         (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Get filename of default user configuration file, typically
$HOME/shishi.conf.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return user configuration filename.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cfg-userdirectory-file" role="function">
<title>shishi_cfg_userdirectory_file ()</title>
<indexterm zone="shishi-cfg-userdirectory-file"><primary>shishi_cfg_userdirectory_file</primary></indexterm><programlisting><link linkend="char">char</link>*               shishi_cfg_userdirectory_file       (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *file);</programlisting>
<para>
Get the full path to specified <parameter>file</parameter> in the users' configuration
directory.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>file</parameter>&nbsp;:</term>
<listitem><simpara> basename of file to find in user directory.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return full path to given relative filename, relative
  to the user specific Shishi configuration directory as returned
  by <link linkend="shishi-cfg-default-userdirectory"><function>shishi_cfg_default_userdirectory()</function></link> (typically $HOME/.shishi).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cfg-clientkdcetype" role="function">
<title>shishi_cfg_clientkdcetype ()</title>
<indexterm zone="shishi-cfg-clientkdcetype"><primary>shishi_cfg_clientkdcetype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_cfg_clientkdcetype           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> **etypes);</programlisting>
<para>
Set the etypes variable to the array of preferred client etypes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etypes</parameter>&nbsp;:</term>
<listitem><simpara> output array with encryption types.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return the number of encryption types in the array,
              0 means none.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cfg-clientkdcetype-fast" role="function">
<title>shishi_cfg_clientkdcetype_fast ()</title>
<indexterm zone="shishi-cfg-clientkdcetype-fast"><primary>shishi_cfg_clientkdcetype_fast</primary></indexterm><programlisting><link linkend="int32-t">int32_t</link>             shishi_cfg_clientkdcetype_fast      (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Extract the default etype from the list of preferred client etypes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return the default encryption types.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cfg-clientkdcetype-set" role="function">
<title>shishi_cfg_clientkdcetype_set ()</title>
<indexterm zone="shishi-cfg-clientkdcetype-set"><primary>shishi_cfg_clientkdcetype_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_cfg_clientkdcetype_set       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *value);</programlisting>
<para>
Set the "client-kdc-etypes" configuration option from given string.
The string contains encryption types (integer or names) separated
by comma or whitespace, e.g. "aes256-cts-hmac-sha1-96
des3-cbc-sha1-kd des-cbc-md5".</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> string with encryption types.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cfg-authorizationtype-set" role="function">
<title>shishi_cfg_authorizationtype_set ()</title>
<indexterm zone="shishi-cfg-authorizationtype-set"><primary>shishi_cfg_authorizationtype_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_cfg_authorizationtype_set    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *value);</programlisting>
<para>
Set the "authorization-types" configuration option from given string.
The string contains authorization types (integer or names) separated
by comma or whitespace, e.g. "basic k5login".</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> string with authorization types.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-strerror" role="function">
<title>shishi_strerror ()</title>
<indexterm zone="shishi-strerror"><primary>shishi_strerror</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_strerror                     (<link linkend="int">int</link> err);</programlisting>
<para>
Convert return code to human readable string.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara> shishi error code.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns a pointer to a statically allocated string
containing a description of the error with the error value <parameter>err</parameter>.
This string can be used to output a diagnostic message to the user.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-error" role="function">
<title>shishi_error ()</title>
<indexterm zone="shishi-error"><primary>shishi_error</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_error                        (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Extract detailed error information string.  Note that the memory is
managed by the Shishi library, so you must not deallocate the
string.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns pointer to error information string, that must
  not be deallocate by caller.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-error-clear" role="function">
<title>shishi_error_clear ()</title>
<indexterm zone="shishi-error-clear"><primary>shishi_error_clear</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_error_clear                  (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Clear the detailed error information string.  See <link linkend="shishi-error"><function>shishi_error()</function></link>
for how to access the error string, and <link linkend="shishi-error-set"><function>shishi_error_set()</function></link> and
<link linkend="shishi-error-printf"><function>shishi_error_printf()</function></link> for how to set the error string.  This
function is mostly for Shishi internal use, but if you develop an
extension of Shishi, it may be useful to use the same error
handling infrastructure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-error-set" role="function">
<title>shishi_error_set ()</title>
<indexterm zone="shishi-error-set"><primary>shishi_error_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_error_set                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *errstr);</programlisting>
<para>
Set the detailed error information string to specified string.  The
string is copied into the Shishi internal structure, so you can
deallocate the string passed to this function after the call.  This
function is mostly for Shishi internal use, but if you develop an
extension of Shishi, it may be useful to use the same error
handling infrastructure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>errstr</parameter>&nbsp;:</term>
<listitem><simpara> Zero terminated character array containing error description,
  or NULL to clear the error description string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-error-printf" role="function">
<title>shishi_error_printf ()</title>
<indexterm zone="shishi-error-printf"><primary>shishi_error_printf</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_error_printf                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);</programlisting>
<para>
Set the detailed error information string to a printf formatted
string.  This function is mostly for Shishi internal use, but if
you develop an extension of Shishi, it may be useful to use the
same error handling infrastructure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara> printf style format string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> print style arguments.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-error-outputtype" role="function">
<title>shishi_error_outputtype ()</title>
<indexterm zone="shishi-error-outputtype"><primary>shishi_error_outputtype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_error_outputtype             (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Get the current output type for logging messages.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return output type (NULL, stderr or syslog) for
  informational and warning messages.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-error-set-outputtype" role="function">
<title>shishi_error_set_outputtype ()</title>
<indexterm zone="shishi-error-set-outputtype"><primary>shishi_error_set_outputtype</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_error_set_outputtype         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> type);</programlisting>
<para>
Set output type (NULL, stderr or syslog) for informational
and warning messages.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> output type.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-info" role="function">
<title>shishi_info ()</title>
<indexterm zone="shishi-info"><primary>shishi_info</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_info                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);</programlisting>
<para>
Print informational message to output as defined in handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara> printf style format string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> print style arguments.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-warn" role="function">
<title>shishi_warn ()</title>
<indexterm zone="shishi-warn"><primary>shishi_warn</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_warn                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);</programlisting>
<para>
Print a warning to output as defined in handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara> printf style format string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> print style arguments.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-verbose" role="function">
<title>shishi_verbose ()</title>
<indexterm zone="shishi-verbose"><primary>shishi_verbose</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_verbose                      (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);</programlisting>
<para>
Print a diagnostic message to output as defined in handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara> printf style format string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> print style arguments.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-realm-default-guess" role="function">
<title>shishi_realm_default_guess ()</title>
<indexterm zone="shishi-realm-default-guess"><primary>shishi_realm_default_guess</primary></indexterm><programlisting><link linkend="char">char</link>*               shishi_realm_default_guess          (void);</programlisting>
<para>
Guesses a realm based on <link linkend="getdomainname"><function>getdomainname()</function></link> (which really is NIS/YP
domain, but if it is set it might be a good guess), or if it fails,
based on <link linkend="gethostname"><function>gethostname()</function></link>, or if it fails, the string
"could-not-guess-default-realm". Note that the hostname is not
trimmed off of the data returned by <link linkend="gethostname"><function>gethostname()</function></link> to get the domain
name and use that as the realm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns guessed realm for host as a string that has
to be deallocated with <link linkend="free"><function>free()</function></link> by the caller.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-realm-default" role="function">
<title>shishi_realm_default ()</title>
<indexterm zone="shishi-realm-default"><primary>shishi_realm_default</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_realm_default                (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Get name of default realm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the default realm used in the library.  (Not
a copy of it, so don't modify or deallocate it.)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-realm-default-set" role="function">
<title>shishi_realm_default_set ()</title>
<indexterm zone="shishi-realm-default-set"><primary>shishi_realm_default_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_realm_default_set            (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *realm);</programlisting>
<para>
Set the default realm used in the library.  The string is copied
into the library, so you can dispose of the variable immediately
after calling this function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> string with new default realm name, or NULL to reset to default.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-realm-for-server-file" role="function">
<title>shishi_realm_for_server_file ()</title>
<indexterm zone="shishi-realm-for-server-file"><primary>shishi_realm_for_server_file</primary></indexterm><programlisting><link linkend="char">char</link>*               shishi_realm_for_server_file        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *server);</programlisting>
<para>
Find realm for a host using configuration file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> hostname to find realm for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns realm for host, or NULL if not found.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-realm-for-server-dns" role="function">
<title>shishi_realm_for_server_dns ()</title>
<indexterm zone="shishi-realm-for-server-dns"><primary>shishi_realm_for_server_dns</primary></indexterm><programlisting><link linkend="char">char</link>*               shishi_realm_for_server_dns         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *server);</programlisting>
<para>
Find realm for a host using DNS lookups, according to
draft-ietf-krb-wg-krb-dns-locate-03.txt.  Since DNS lookups may be
spoofed, relying on the realm information may result in a
redirection attack.  In a single-realm scenario, this only achieves
a denial of service, but with cross-realm trust it may redirect you
to a compromised realm.  For this reason, Shishi prints a warning,
suggesting that the user should add the proper 'server-realm'
configuration tokens instead.
</para>
<para>
To illustrate the DNS information used, here is an extract from a
zone file for the domain ASDF.COM:
</para>
<para>
_kerberos.asdf.com.             IN      TXT     "ASDF.COM"
_kerberos.mrkserver.asdf.com.   IN      TXT     "MARKETING.ASDF.COM"
_kerberos.salesserver.asdf.com. IN      TXT     "SALES.ASDF.COM"
</para>
<para>
Let us suppose that in this case, a client wishes to use a service
on the host foo.asdf.com.  It would first query:
</para>
<para>
_kerberos.foo.asdf.com. IN TXT
</para>
<para>
Finding no match, it would then query:
</para>
<para>
_kerberos.asdf.com. IN TXT</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> hostname to find realm for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns realm for host, or NULL if not found.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-realm-for-server" role="function">
<title>shishi_realm_for_server ()</title>
<indexterm zone="shishi-realm-for-server"><primary>shishi_realm_for_server</primary></indexterm><programlisting><link linkend="char">char</link>*               shishi_realm_for_server             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *server);</programlisting>
<para>
Find realm for a host, using various methods.  Currently this
includes static configuration files (see
<link linkend="shishi-realm-for-server-file"><function>shishi_realm_for_server_file()</function></link>) and DNS (see
<link linkend="shishi-realm-for-server-dns"><function>shishi_realm_for_server_dns()</function></link>).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> hostname to find realm for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns realm for host, or NULL if not found.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-principal-default-guess" role="function">
<title>shishi_principal_default_guess ()</title>
<indexterm zone="shishi-principal-default-guess"><primary>shishi_principal_default_guess</primary></indexterm><programlisting><link linkend="char">char</link>*               shishi_principal_default_guess      (void);</programlisting>
<para>
Guesses the principal name for the user, looking at environment
variables SHISHI_USER and USER, or if that fails, returns the
string "user".</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns guessed default principal for user as a
string that has to be deallocated with <link linkend="free"><function>free()</function></link> by the caller.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-principal-default" role="function">
<title>shishi_principal_default ()</title>
<indexterm zone="shishi-principal-default"><primary>shishi_principal_default</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_principal_default            (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
The default principal name is the name in the environment variable
USER, but can be overridden by specifying the environment variable
SHISHI_USER.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the default principal name used in the
library.  (Not a copy of it, so don't modify or deallocate it.)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-principal-default-set" role="function">
<title>shishi_principal_default_set ()</title>
<indexterm zone="shishi-principal-default-set"><primary>shishi_principal_default_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_principal_default_set        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *principal);</programlisting>
<para>
Set the default realm used in the library.  The string is copied
into the library, so you can dispose of the variable immediately
after calling this function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>principal</parameter>&nbsp;:</term>
<listitem><simpara> string with new default principal name, or NULL to
reset to default.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-principal-name" role="function">
<title>shishi_principal_name ()</title>
<indexterm zone="shishi-principal-name"><primary>shishi_principal_name</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_principal_name               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> namenode,
                                                         const <link linkend="char">char</link> *namefield,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Represent principal name in ASN.1 structure as zero-terminated
string.  The string is allocate by this function, and it is the
responsibility of the caller to deallocate it.  Note that the
output length <parameter>outlen</parameter> does not include the terminating zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>namenode</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 structure with principal in <parameter>namefield</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>namefield</parameter>&nbsp;:</term>
<listitem><simpara> name of field in <parameter>namenode</parameter> containing principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>outlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>out</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>out</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-principal-name-realm" role="function">
<title>shishi_principal_name_realm ()</title>
<indexterm zone="shishi-principal-name-realm"><primary>shishi_principal_name_realm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_principal_name_realm         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> namenode,
                                                         const <link linkend="char">char</link> *namefield,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> realmnode,
                                                         const <link linkend="char">char</link> *realmfield,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Represent principal name and realm in ASN.1 structure as
zero-terminated string.  The string is allocate by this function,
and it is the responsibility of the caller to deallocate it.  Note
that the output length <parameter>outlen</parameter> does not include the terminating
zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>namenode</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 structure with principal name in <parameter>namefield</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>namefield</parameter>&nbsp;:</term>
<listitem><simpara> name of field in <parameter>namenode</parameter> containing principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realmnode</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 structure with principal realm in <parameter>realmfield</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realmfield</parameter>&nbsp;:</term>
<listitem><simpara> name of field in <parameter>realmnode</parameter> containing principal realm.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>outlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>out</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>out</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-principal-name-set" role="function">
<title>shishi_principal_name_set ()</title>
<indexterm zone="shishi-principal-name-set"><primary>shishi_principal_name_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_principal_name_set           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> namenode,
                                                         const <link linkend="char">char</link> *namefield,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *name[]);</programlisting>
<para>
Set the given principal name field to given name.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>namenode</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 structure with principal in <parameter>namefield</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>namefield</parameter>&nbsp;:</term>
<listitem><simpara> name of field in namenode containing principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name_type</parameter>&nbsp;:</term>
<listitem><simpara> type of principial, see Shishi_name_type, usually
            SHISHI_NT_UNKNOWN.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> zero-terminated input array with principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-principal-set" role="function">
<title>shishi_principal_set ()</title>
<indexterm zone="shishi-principal-set"><primary>shishi_principal_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_principal_set                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> namenode,
                                                         const <link linkend="char">char</link> *namefield,
                                                         const <link linkend="char">char</link> *name);</programlisting>
<para>
Set principal name field in ASN.1 structure to given name.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>namenode</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 structure with principal in <parameter>namefield</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>namefield</parameter>&nbsp;:</term>
<listitem><simpara> name of field in namenode containing principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> zero-terminated string with principal name on RFC 1964 form.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-parse-name" role="function">
<title>shishi_parse_name ()</title>
<indexterm zone="shishi-parse-name"><primary>shishi_parse_name</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_parse_name                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *name,
                                                         <link linkend="char">char</link> **principal,
                                                         <link linkend="char">char</link> **realm);</programlisting>
<para>
Split up principal name (e.g., "simon<parameter>JOSEFSSON.ORG</parameter>") into two
newly allocated strings, the principal ("simon") and realm
("JOSEFSSON.ORG").  If there is no realm part in NAME, REALM is set
to NULL.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> Input principal name string, e.g. imap/mail.gnu.org<parameter>GNU.ORG</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>principal</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated output string with principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated output string with realm name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_INVALID_PRINCIPAL_NAME if NAME is NULL
  or ends with the escape character "\", or SHISHI_OK iff
  successful
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-derive-default-salt" role="function">
<title>shishi_derive_default_salt ()</title>
<indexterm zone="shishi-derive-default-salt"><primary>shishi_derive_default_salt</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_derive_default_salt          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *name,
                                                         <link linkend="char">char</link> **salt);</programlisting>
<para>
Derive the default salt from a principal.  The default salt is the
concatenation of the decoded realm and principal.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> principal name of user.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>salt</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated salt string.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return SHISHI_OK if successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-server-for-local-service" role="function">
<title>shishi_server_for_local_service ()</title>
<indexterm zone="shishi-server-for-local-service"><primary>shishi_server_for_local_service</primary></indexterm><programlisting><link linkend="char">char</link>*               shishi_server_for_local_service     (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *service);</programlisting>
<para>
Construct a service principal (e.g., "imap/yxa.extuno.com") based
on supplied service name (i.e., "imap") and the system hostname as
returned by <link linkend="hostname"><function>hostname()</function></link> (i.e., "yxa.extundo.com").  The string must
be deallocated by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>service</parameter>&nbsp;:</term>
<listitem><simpara> zero terminated string with name of service, e.g., "host".
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return newly allocated service name string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket" role="function">
<title>shishi_ticket ()</title>
<indexterm zone="shishi-ticket"><primary>shishi_ticket</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_ticket                       (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
This function creates a new ASN.1 Ticket, populated with some
default values.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the ticket or NULL on failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-server" role="function">
<title>shishi_ticket_server ()</title>
<indexterm zone="shishi-ticket-server"><primary>shishi_ticket_server</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_server                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="char">char</link> **server,
                                                         <link linkend="size-t">size_t</link> *serverlen);</programlisting>
<para>
Represent server principal name in Ticket as zero-terminated
string.  The string is allocate by this function, and it is the
responsibility of the caller to deallocate it.  Note that the
output length <parameter>serverlen</parameter> does not include the terminating zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 Ticket variable to get server name from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>serverlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>serverlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>server</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>server</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-sname-set" role="function">
<title>shishi_ticket_sname_set ()</title>
<indexterm zone="shishi-ticket-sname-set"><primary>shishi_ticket_sname_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_sname_set             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         <link linkend="char">char</link> *sname[]);</programlisting>
<para>
Set the server name field in the Ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> Ticket variable to set server name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name_type</parameter>&nbsp;:</term>
<listitem><simpara> type of principial, see Shishi_name_type, usually
            SHISHI_NT_UNKNOWN.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sname</parameter>&nbsp;:</term>
<listitem><simpara> input array with principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-srealmserver-set" role="function">
<title>shishi_ticket_srealmserver_set ()</title>
<indexterm zone="shishi-ticket-srealmserver-set"><primary>shishi_ticket_srealmserver_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_srealmserver_set      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         const <link linkend="char">char</link> *realm,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-set-server" role="function">
<title>shishi_ticket_set_server ()</title>
<indexterm zone="shishi-ticket-set-server"><primary>shishi_ticket_set_server</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_set_server            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-realm-get" role="function">
<title>shishi_ticket_realm_get ()</title>
<indexterm zone="shishi-ticket-realm-get"><primary>shishi_ticket_realm_get</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_realm_get             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="char">char</link> **realm,
                                                         <link linkend="size-t">size_t</link> *realmlen);</programlisting>
<para>
Extract realm from ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated name of realm in ticket.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realmlen</parameter>&nbsp;:</term>
<listitem><simpara> size of output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-realm-set" role="function">
<title>shishi_ticket_realm_set ()</title>
<indexterm zone="shishi-ticket-realm-set"><primary>shishi_ticket_realm_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_realm_set             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         const <link linkend="char">char</link> *realm);</programlisting>
<para>
Set the realm field in the Ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> input array with name of realm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-get-enc-part-etype" role="function">
<title>shishi_ticket_get_enc_part_etype ()</title>
<indexterm zone="shishi-ticket-get-enc-part-etype"><primary>shishi_ticket_get_enc_part_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_get_enc_part_etype    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="int32-t">int32_t</link> *etype);</programlisting>
<para>
Extract Ticket.enc-part.etype.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> Ticket variable to get value from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> output variable that holds the value.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-set-enc-part" role="function">
<title>shishi_ticket_set_enc_part ()</title>
<indexterm zone="shishi-ticket-set-enc-part"><primary>shishi_ticket_set_enc_part</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_set_enc_part          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         <link linkend="uint32-t">uint32_t</link> kvno,
                                                         const <link linkend="char">char</link> *buf,
                                                         <link linkend="size-t">size_t</link> buflen);</programlisting>
<para>
Set the encrypted enc-part field in the Ticket.  The encrypted data
is usually created by calling <link linkend="shishi-encrypt"><function>shishi_encrypt()</function></link> on the DER encoded
enc-part.  To save time, you may want to use
<link linkend="shishi-ticket-add-enc-part"><function>shishi_ticket_add_enc_part()</function></link> instead, which calculates the
encrypted data and calls this function in one step.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> Ticket to add enc-part field to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> encryption type used to encrypt enc-part.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kvno</parameter>&nbsp;:</term>
<listitem><simpara> key version number.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara> input array with encrypted enc-part.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buflen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with encrypted enc-part.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-add-enc-part" role="function">
<title>shishi_ticket_add_enc_part ()</title>
<indexterm zone="shishi-ticket-add-enc-part"><primary>shishi_ticket_add_enc_part</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_add_enc_part          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);</programlisting>
<para>
Encrypts DER encoded EncTicketPart using key and stores it in the
Ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> Ticket to add enc-part field to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key used to encrypt enc-part.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> EncTicketPart to add.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-decrypt" role="function">
<title>shishi_ticket_decrypt ()</title>
<indexterm zone="shishi-ticket-decrypt"><primary>shishi_ticket_decrypt</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_decrypt               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *encticketpart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-ticket" role="function">
<title>shishi_tkt_ticket ()</title>
<indexterm zone="shishi-tkt-ticket"><primary>shishi_tkt_ticket</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_tkt_ticket                   (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Get ASN.1 Ticket structure from ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns actual ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-ticket-set" role="function">
<title>shishi_tkt_ticket_set ()</title>
<indexterm zone="shishi-tkt-ticket-set"><primary>shishi_tkt_ticket_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tkt_ticket_set               (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket);</programlisting>
<para>
Set the ASN.1 Ticket in the Ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 Ticket to store in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-kdcrep" role="function">
<title>shishi_tkt_kdcrep ()</title>
<indexterm zone="shishi-tkt-kdcrep"><primary>shishi_tkt_kdcrep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_tkt_kdcrep                   (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Get ASN.1 KDCRep structure from ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns KDC-REP information.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-enckdcreppart" role="function">
<title>shishi_tkt_enckdcreppart ()</title>
<indexterm zone="shishi-tkt-enckdcreppart"><primary>shishi_tkt_enckdcreppart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_tkt_enckdcreppart            (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Get ASN.1 EncKDCRepPart structure from ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns auxilliary ticket information.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-enckdcreppart-set" role="function">
<title>shishi_tkt_enckdcreppart_set ()</title>
<indexterm zone="shishi-tkt-enckdcreppart-set"><primary>shishi_tkt_enckdcreppart_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tkt_enckdcreppart_set        (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart);</programlisting>
<para>
Set the EncKDCRepPart in the Ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about Ticket exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncKDCRepPart to store in Ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-encticketpart" role="function">
<title>shishi_tkt_encticketpart ()</title>
<indexterm zone="shishi-tkt-encticketpart"><primary>shishi_tkt_encticketpart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_tkt_encticketpart            (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Get ASN.1 EncTicketPart structure from ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns EncTicketPart information.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-encticketpart-set" role="function">
<title>shishi_tkt_encticketpart_set ()</title>
<indexterm zone="shishi-tkt-encticketpart-set"><primary>shishi_tkt_encticketpart_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tkt_encticketpart_set        (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);</programlisting>
<para>
Set the EncTicketPart in the Ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> encticketpart to store in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-key" role="function">
<title>shishi_tkt_key ()</title>
<indexterm zone="shishi-tkt-key"><primary>shishi_tkt_key</primary></indexterm><programlisting><link linkend="Shishi-key">Shishi_key</link>*         shishi_tkt_key                      (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Get key used in ticket, by looking first in EncKDCRepPart and then
in EncTicketPart.  If key is already populated, it is not extracted
again.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns key extracted from EncKDCRepPart or
EncTicketPart.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-key-set" role="function">
<title>shishi_tkt_key_set ()</title>
<indexterm zone="shishi-tkt-key-set"><primary>shishi_tkt_key_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_key_set                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Set the key in the EncTicketPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to store in ticket.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt" role="function">
<title>shishi_tkt ()</title>
<indexterm zone="shishi-tkt"><primary>shishi_tkt</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> **tkt);</programlisting>
<para>
Create a new ticket handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated ticket.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt2" role="function">
<title>shishi_tkt2 ()</title>
<indexterm zone="shishi-tkt2"><primary>shishi_tkt2</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tkt2                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep);</programlisting>
<para>
Create a new ticket handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> input variable with auxilliary ticket information.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> input variable with KDC-REP ticket information.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns new ticket handle, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-pretty-print" role="function">
<title>shishi_tkt_pretty_print ()</title>
<indexterm zone="shishi-tkt-pretty-print"><primary>shishi_tkt_pretty_print</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tkt_pretty_print             (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);</programlisting>
<para>
Print a human readable representation of a ticket to file handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-realm" role="function">
<title>shishi_tkt_realm ()</title>
<indexterm zone="shishi-tkt-realm"><primary>shishi_tkt_realm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_realm                    (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **realm,
                                                         <link linkend="size-t">size_t</link> *realmlen);</programlisting>
<para>
Extract realm of server in ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated character array with realm name.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realmlen</parameter>&nbsp;:</term>
<listitem><simpara> length of newly allocated character array with realm name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-client" role="function">
<title>shishi_tkt_client ()</title>
<indexterm zone="shishi-tkt-client"><primary>shishi_tkt_client</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_client                   (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);</programlisting>
<para>
Represent client principal name in Ticket KDC-REP as
zero-terminated string.  The string is allocate by this function,
and it is the responsibility of the caller to deallocate it.  Note
that the output length <parameter>clientlen</parameter> does not include the terminating
zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>clientlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>clientlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>client</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>client</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-client-p" role="function">
<title>shishi_tkt_client_p ()</title>
<indexterm zone="shishi-tkt-client-p"><primary>shishi_tkt_client_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_client_p                 (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         const <link linkend="char">char</link> *client);</programlisting>
<para>
Determine if ticket is for specified client.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> client name of ticket.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff ticket is for specified client.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-clientrealm" role="function">
<title>shishi_tkt_clientrealm ()</title>
<indexterm zone="shishi-tkt-clientrealm"><primary>shishi_tkt_clientrealm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_clientrealm              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);</programlisting>
<para>
Convert cname and realm fields from AS-REQ to printable principal
name format.  The string is allocate by this function, and it is
the responsibility of the caller to deallocate it.  Note that the
output length <parameter>clientlen</parameter> does not include the terminating zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name and realm.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>clientlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>clientlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>client</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>client</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-clientrealm-p" role="function">
<title>shishi_tkt_clientrealm_p ()</title>
<indexterm zone="shishi-tkt-clientrealm-p"><primary>shishi_tkt_clientrealm_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_clientrealm_p            (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         const <link linkend="char">char</link> *client);</programlisting>
<para>
Determine if ticket is for specified client principal.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> principal name (client name and realm) of ticket.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff ticket is for specified client principal.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-clientrealm-set" role="function">
<title>shishi_tkt_clientrealm_set ()</title>
<indexterm zone="shishi-tkt-clientrealm-set"><primary>shishi_tkt_clientrealm_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_clientrealm_set          (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         const <link linkend="char">char</link> *realm,
                                                         const <link linkend="char">char</link> *client);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-serverrealm-set" role="function">
<title>shishi_tkt_serverrealm_set ()</title>
<indexterm zone="shishi-tkt-serverrealm-set"><primary>shishi_tkt_serverrealm_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_serverrealm_set          (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         const <link linkend="char">char</link> *realm,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-build" role="function">
<title>shishi_tkt_build ()</title>
<indexterm zone="shishi-tkt-build"><primary>shishi_tkt_build</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_build                    (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-lastreq" role="function">
<title>shishi_tkt_lastreq ()</title>
<indexterm zone="shishi-tkt-lastreq"><primary>shishi_tkt_lastreq</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_lastreq                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **lrtime,
                                                         <link linkend="size-t">size_t</link> *lrtimelen,
                                                         <link linkend="int32-t">int32_t</link> lrtype);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>lrtime</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>lrtimelen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>lrtype</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-lastreqc" role="function">
<title>shishi_tkt_lastreqc ()</title>
<indexterm zone="shishi-tkt-lastreqc"><primary>shishi_tkt_lastreqc</primary></indexterm><programlisting><link linkend="time-t">time_t</link>              shishi_tkt_lastreqc                 (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-lrtype">Shishi_lrtype</link> lrtype);</programlisting>
<para>
Extract C time corresponding to given lastreq type field in the
ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>lrtype</parameter>&nbsp;:</term>
<listitem><simpara> lastreq type to extract, see Shishi_lrtype.  E.g.,
  SHISHI_LRTYPE_LAST_REQUEST.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns C time interpretation of the specified
  lastreq field, or (time_t) -1.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-lastreq-pretty-print" role="function">
<title>shishi_tkt_lastreq_pretty_print ()</title>
<indexterm zone="shishi-tkt-lastreq-pretty-print"><primary>shishi_tkt_lastreq_pretty_print</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tkt_lastreq_pretty_print     (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);</programlisting>
<para>
Print a human readable representation of the various lastreq fields
in the ticket (really EncKDCRepPart).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-authtime" role="function">
<title>shishi_tkt_authtime ()</title>
<indexterm zone="shishi-tkt-authtime"><primary>shishi_tkt_authtime</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_authtime                 (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **authtime,
                                                         <link linkend="size-t">size_t</link> *authtimelen);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authtime</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authtimelen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-authctime" role="function">
<title>shishi_tkt_authctime ()</title>
<indexterm zone="shishi-tkt-authctime"><primary>shishi_tkt_authctime</primary></indexterm><programlisting><link linkend="time-t">time_t</link>              shishi_tkt_authctime                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Extract C time corresponding to the authtime field.  The field
holds the time when the original authentication took place that
later resulted in this ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns C time interpretation of the endtime in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-starttime" role="function">
<title>shishi_tkt_starttime ()</title>
<indexterm zone="shishi-tkt-starttime"><primary>shishi_tkt_starttime</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_starttime                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **starttime,
                                                         <link linkend="size-t">size_t</link> *starttimelen);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>starttime</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>starttimelen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-startctime" role="function">
<title>shishi_tkt_startctime ()</title>
<indexterm zone="shishi-tkt-startctime"><primary>shishi_tkt_startctime</primary></indexterm><programlisting><link linkend="time-t">time_t</link>              shishi_tkt_startctime               (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Extract C time corresponding to the starttime field.  The field
holds the time where the ticket start to be valid (typically in the
past).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns C time interpretation of the endtime in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-endtime" role="function">
<title>shishi_tkt_endtime ()</title>
<indexterm zone="shishi-tkt-endtime"><primary>shishi_tkt_endtime</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_endtime                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **endtime,
                                                         <link linkend="size-t">size_t</link> *endtimelen);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>endtime</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>endtimelen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-endctime" role="function">
<title>shishi_tkt_endctime ()</title>
<indexterm zone="shishi-tkt-endctime"><primary>shishi_tkt_endctime</primary></indexterm><programlisting><link linkend="time-t">time_t</link>              shishi_tkt_endctime                 (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Extract C time corresponding to the endtime field.  The field holds
the time where the ticket stop being valid.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns C time interpretation of the endtime in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-renew-till" role="function">
<title>shishi_tkt_renew_till ()</title>
<indexterm zone="shishi-tkt-renew-till"><primary>shishi_tkt_renew_till</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_renew_till               (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **renewtilltime,
                                                         <link linkend="size-t">size_t</link> *renewtilllen);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>renewtilltime</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>renewtilllen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-renew-tillc" role="function">
<title>shishi_tkt_renew_tillc ()</title>
<indexterm zone="shishi-tkt-renew-tillc"><primary>shishi_tkt_renew_tillc</primary></indexterm><programlisting><link linkend="time-t">time_t</link>              shishi_tkt_renew_tillc              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Extract C time corresponding to the renew-till field.  The field
holds the time where the ticket stop being valid for renewal.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns C time interpretation of the renew-till in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-keytype" role="function">
<title>shishi_tkt_keytype ()</title>
<indexterm zone="shishi-tkt-keytype"><primary>shishi_tkt_keytype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_keytype                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int32-t">int32_t</link> *etype);</programlisting>
<para>
Extract encryption type of key in ticket (really EncKDCRepPart).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> pointer to encryption type that is set, see Shishi_etype.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-keytype-fast" role="function">
<title>shishi_tkt_keytype_fast ()</title>
<indexterm zone="shishi-tkt-keytype-fast"><primary>shishi_tkt_keytype_fast</primary></indexterm><programlisting><link linkend="int32-t">int32_t</link>             shishi_tkt_keytype_fast             (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Extract encryption type of key in ticket (really EncKDCRepPart).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns encryption type of session key in ticket
  (really EncKDCRepPart), or -1 on error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-keytype-p" role="function">
<title>shishi_tkt_keytype_p ()</title>
<indexterm zone="shishi-tkt-keytype-p"><primary>shishi_tkt_keytype_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_keytype_p                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int32-t">int32_t</link> etype);</programlisting>
<para>
Determine if key in ticket (really EncKDCRepPart) is of specified
key type (really encryption type).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> encryption type, see Shishi_etype.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff key in ticket is of specified
  encryption type.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-server" role="function">
<title>shishi_tkt_server ()</title>
<indexterm zone="shishi-tkt-server"><primary>shishi_tkt_server</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_server                   (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="char">char</link> **server,
                                                         <link linkend="size-t">size_t</link> *serverlen);</programlisting>
<para>
Represent server principal name in Ticket as zero-terminated
string.  The string is allocate by this function, and it is the
responsibility of the caller to deallocate it.  Note that the
output length <parameter>serverlen</parameter> does not include the terminating zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>serverlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>serverlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>server</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>server</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-server-p" role="function">
<title>shishi_tkt_server_p ()</title>
<indexterm zone="shishi-tkt-server-p"><primary>shishi_tkt_server_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_server_p                 (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>
Determine if ticket is for specified server.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> server name of ticket.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff ticket is for specified server.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-valid-at-time-p" role="function">
<title>shishi_tkt_valid_at_time_p ()</title>
<indexterm zone="shishi-tkt-valid-at-time-p"><primary>shishi_tkt_valid_at_time_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_valid_at_time_p          (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="time-t">time_t</link> now);</programlisting>
<para>
Determine if ticket is valid at a specific point in time.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>now</parameter>&nbsp;:</term>
<listitem><simpara> time to check for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff ticket is valid (not expired and
  after starttime) at specified time.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-valid-now-p" role="function">
<title>shishi_tkt_valid_now_p ()</title>
<indexterm zone="shishi-tkt-valid-now-p"><primary>shishi_tkt_valid_now_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_valid_now_p              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket is valid now.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns 0 iff ticket is invalid (expired or not yet
  valid).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-expired-p" role="function">
<title>shishi_tkt_expired_p ()</title>
<indexterm zone="shishi-tkt-expired-p"><primary>shishi_tkt_expired_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_expired_p                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket has expired (i.e., endtime is in the past).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns 0 iff ticket has expired.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-decrypt" role="function">
<title>shishi_tkt_decrypt ()</title>
<indexterm zone="shishi-tkt-decrypt"><primary>shishi_tkt_decrypt</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_decrypt                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-done" role="function">
<title>shishi_tkt_done ()</title>
<indexterm zone="shishi-tkt-done"><primary>shishi_tkt_done</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tkt_done                     (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Deallocate resources associated with ticket.  The ticket must not
be used again after this call.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-flags" role="function">
<title>shishi_tkt_flags ()</title>
<indexterm zone="shishi-tkt-flags"><primary>shishi_tkt_flags</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_flags                    (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="uint32-t">uint32_t</link> *flags);</programlisting>
<para>
Extract flags in ticket (i.e., EncKDCRepPart).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> pointer to output integer with flags.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-flags-set" role="function">
<title>shishi_tkt_flags_set ()</title>
<indexterm zone="shishi-tkt-flags-set"><primary>shishi_tkt_flags_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_flags_set                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="uint32-t">uint32_t</link> flags);</programlisting>
<para>
Set flags in ticket, i.e., both EncTicketPart and EncKDCRepPart.
Note that this reset any already existing flags.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> integer with flags to store in ticket.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-flags-add" role="function">
<title>shishi_tkt_flags_add ()</title>
<indexterm zone="shishi-tkt-flags-add"><primary>shishi_tkt_flags_add</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_flags_add                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="uint32-t">uint32_t</link> flag);</programlisting>
<para>
Add ticket flags to Ticket and EncKDCRepPart.  This preserves all
existing options.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flag</parameter>&nbsp;:</term>
<listitem><simpara> integer with flags to store in ticket.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-forwardable-p" role="function">
<title>shishi_tkt_forwardable_p ()</title>
<indexterm zone="shishi-tkt-forwardable-p"><primary>shishi_tkt_forwardable_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_forwardable_p            (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket is forwardable.
</para>
<para>
The FORWARDABLE flag in a ticket is normally only interpreted by
the ticket-granting service. It can be ignored by application
servers.  The FORWARDABLE flag has an interpretation similar to
that of the PROXIABLE flag, except ticket-granting tickets may also
be issued with different network addresses. This flag is reset by
default, but users MAY request that it be set by setting the
FORWARDABLE option in the AS request when they request their
initial ticket-granting ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff forwardable flag is set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-forwarded-p" role="function">
<title>shishi_tkt_forwarded_p ()</title>
<indexterm zone="shishi-tkt-forwarded-p"><primary>shishi_tkt_forwarded_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_forwarded_p              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket is forwarded.
</para>
<para>
The FORWARDED flag is set by the TGS when a client presents a
ticket with the FORWARDABLE flag set and requests a forwarded
ticket by specifying the FORWARDED KDC option and supplying a set
of addresses for the new ticket. It is also set in all tickets
issued based on tickets with the FORWARDED flag set. Application
servers may choose to process FORWARDED tickets differently than
non-FORWARDED tickets.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff forwarded flag is set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-proxiable-p" role="function">
<title>shishi_tkt_proxiable_p ()</title>
<indexterm zone="shishi-tkt-proxiable-p"><primary>shishi_tkt_proxiable_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_proxiable_p              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket is proxiable.
</para>
<para>
The PROXIABLE flag in a ticket is normally only interpreted by the
ticket-granting service. It can be ignored by application servers.
When set, this flag tells the ticket-granting server that it is OK
to issue a new ticket (but not a ticket-granting ticket) with a
different network address based on this ticket. This flag is set if
requested by the client on initial authentication. By default, the
client will request that it be set when requesting a
ticket-granting ticket, and reset when requesting any other ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff proxiable flag is set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-proxy-p" role="function">
<title>shishi_tkt_proxy_p ()</title>
<indexterm zone="shishi-tkt-proxy-p"><primary>shishi_tkt_proxy_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_proxy_p                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket is proxy ticket.
</para>
<para>
The PROXY flag is set in a ticket by the TGS when it issues a proxy
ticket.  Application servers MAY check this flag and at their
option they MAY require additional authentication from the agent
presenting the proxy in order to provide an audit trail.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff proxy flag is set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-may-postdate-p" role="function">
<title>shishi_tkt_may_postdate_p ()</title>
<indexterm zone="shishi-tkt-may-postdate-p"><primary>shishi_tkt_may_postdate_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_may_postdate_p           (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket may be used to grant postdated tickets.
</para>
<para>
The MAY-POSTDATE flag in a ticket is normally only interpreted by
the ticket-granting service. It can be ignored by application
servers.  This flag MUST be set in a ticket-granting ticket in
order to issue a postdated ticket based on the presented ticket. It
is reset by default; it MAY be requested by a client by setting the
ALLOW- POSTDATE option in the KRB_AS_REQ message.  This flag does
not allow a client to obtain a postdated ticket-granting ticket;
postdated ticket-granting tickets can only by obtained by
requesting the postdating in the KRB_AS_REQ message. The life
(endtime-starttime) of a postdated ticket will be the remaining
life of the ticket-granting ticket at the time of the request,
unless the RENEWABLE option is also set, in which case it can be
the full life (endtime-starttime) of the ticket-granting
ticket. The KDC MAY limit how far in the future a ticket may be
postdated.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff may-postdate flag is set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-postdated-p" role="function">
<title>shishi_tkt_postdated_p ()</title>
<indexterm zone="shishi-tkt-postdated-p"><primary>shishi_tkt_postdated_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_postdated_p              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket is postdated.
</para>
<para>
The POSTDATED flag indicates that a ticket has been postdated. The
application server can check the authtime field in the ticket to
see when the original authentication occurred. Some services MAY
choose to reject postdated tickets, or they may only accept them
within a certain period after the original authentication. When the
KDC issues a POSTDATED ticket, it will also be marked as INVALID,
so that the application client MUST present the ticket to the KDC
to be validated before use.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff postdated flag is set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-invalid-p" role="function">
<title>shishi_tkt_invalid_p ()</title>
<indexterm zone="shishi-tkt-invalid-p"><primary>shishi_tkt_invalid_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_invalid_p                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket is invalid.
</para>
<para>
The INVALID flag indicates that a ticket is invalid. Application
servers MUST reject tickets which have this flag set. A postdated
ticket will be issued in this form. Invalid tickets MUST be
validated by the KDC before use, by presenting them to the KDC in a
TGS request with the VALIDATE option specified. The KDC will only
validate tickets after their starttime has passed. The validation
is required so that postdated tickets which have been stolen before
their starttime can be rendered permanently invalid (through a
hot-list mechanism).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff invalid flag is set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-renewable-p" role="function">
<title>shishi_tkt_renewable_p ()</title>
<indexterm zone="shishi-tkt-renewable-p"><primary>shishi_tkt_renewable_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_renewable_p              (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket is renewable.
</para>
<para>
The RENEWABLE flag in a ticket is normally only interpreted by the
ticket-granting service (discussed below in section 3.3). It can
usually be ignored by application servers. However, some
particularly careful application servers MAY disallow renewable
tickets.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff renewable flag is set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-initial-p" role="function">
<title>shishi_tkt_initial_p ()</title>
<indexterm zone="shishi-tkt-initial-p"><primary>shishi_tkt_initial_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_initial_p                (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket was issued using AS exchange.
</para>
<para>
The INITIAL flag indicates that a ticket was issued using the AS
protocol, rather than issued based on a ticket-granting ticket.
Application servers that want to require the demonstrated knowledge
of a client's secret key (e.g. a password-changing program) can
insist that this flag be set in any tickets they accept, and thus
be assured that the client's key was recently presented to the
application client.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff initial flag is set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-pre-authent-p" role="function">
<title>shishi_tkt_pre_authent_p ()</title>
<indexterm zone="shishi-tkt-pre-authent-p"><primary>shishi_tkt_pre_authent_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_pre_authent_p            (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket was pre-authenticated.
</para>
<para>
The PRE-AUTHENT and HW-AUTHENT flags provide additional information
about the initial authentication, regardless of whether the current
ticket was issued directly (in which case INITIAL will also be set)
or issued on the basis of a ticket-granting ticket (in which case
the INITIAL flag is clear, but the PRE-AUTHENT and HW-AUTHENT flags
are carried forward from the ticket-granting ticket).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff pre-authent flag is set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-hw-authent-p" role="function">
<title>shishi_tkt_hw_authent_p ()</title>
<indexterm zone="shishi-tkt-hw-authent-p"><primary>shishi_tkt_hw_authent_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_hw_authent_p             (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket is authenticated using a hardware token.
</para>
<para>
The PRE-AUTHENT and HW-AUTHENT flags provide additional information
about the initial authentication, regardless of whether the current
ticket was issued directly (in which case INITIAL will also be set)
or issued on the basis of a ticket-granting ticket (in which case
the INITIAL flag is clear, but the PRE-AUTHENT and HW-AUTHENT flags
are carried forward from the ticket-granting ticket).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff hw-authent flag is set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-transited-policy-checked-p" role="function">
<title>shishi_tkt_transited_policy_checked_p ()</title>
<indexterm zone="shishi-tkt-transited-policy-checked-p"><primary>shishi_tkt_transited_policy_checked_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_transited_policy_checked_p
                                                        (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket has been policy checked for transit.
</para>
<para>
The application server is ultimately responsible for accepting or
rejecting authentication and SHOULD check that only suitably
trusted KDCs are relied upon to authenticate a principal.  The
transited field in the ticket identifies which realms (and thus
which KDCs) were involved in the authentication process and an
application server would normally check this field. If any of these
are untrusted to authenticate the indicated client principal
(probably determined by a realm-based policy), the authentication
attempt MUST be rejected. The presence of trusted KDCs in this list
does not provide any guarantee; an untrusted KDC may have
fabricated the list.
</para>
<para>
While the end server ultimately decides whether authentication is
valid, the KDC for the end server's realm MAY apply a realm
specific policy for validating the transited field and accepting
credentials for cross-realm authentication. When the KDC applies
such checks and accepts such cross-realm authentication it will set
the TRANSITED-POLICY-CHECKED flag in the service tickets it issues
based on the cross-realm TGT. A client MAY request that the KDCs
not check the transited field by setting the
DISABLE-TRANSITED-CHECK flag. KDCs are encouraged but not required
to honor this flag.
</para>
<para>
Application servers MUST either do the transited-realm checks
themselves, or reject cross-realm tickets without TRANSITED-POLICY-
CHECKED set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff transited-policy-checked flag is
  set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-ok-as-delegate-p" role="function">
<title>shishi_tkt_ok_as_delegate_p ()</title>
<indexterm zone="shishi-tkt-ok-as-delegate-p"><primary>shishi_tkt_ok_as_delegate_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_ok_as_delegate_p         (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Determine if ticket is ok as delegated ticket.
</para>
<para>
The copy of the ticket flags in the encrypted part of the KDC reply
may have the OK-AS-DELEGATE flag set to indicates to the client
that the server specified in the ticket has been determined by
policy of the realm to be a suitable recipient of delegation.  A
client can use the presence of this flag to help it make a decision
whether to delegate credentials (either grant a proxy or a
forwarded ticket- granting ticket) to this server.  It is
acceptable to ignore the value of this flag. When setting this
flag, an administrator should consider the security and placement
of the server on which the service will run, as well as whether the
service requires the use of delegated credentials.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff ok-as-delegate flag is set in ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-default-file-guess" role="function">
<title>shishi_tkts_default_file_guess ()</title>
<indexterm zone="shishi-tkts-default-file-guess"><primary>shishi_tkts_default_file_guess</primary></indexterm><programlisting><link linkend="char">char</link>*               shishi_tkts_default_file_guess      (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Guesses the default ticket filename; it is $SHISHI_TICKETS,
$SHISHI_HOME/tickets, or $HOME/.shishi/tickets.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns default tkts filename as a string that
has to be deallocated with <link linkend="free"><function>free()</function></link> by the caller.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-default-file" role="function">
<title>shishi_tkts_default_file ()</title>
<indexterm zone="shishi-tkts-default-file"><primary>shishi_tkts_default_file</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_tkts_default_file            (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Get filename of default ticket set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the default ticket set filename used in the
library.  The string is not a copy, so don't modify or deallocate
it.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-default-file-set" role="function">
<title>shishi_tkts_default_file_set ()</title>
<indexterm zone="shishi-tkts-default-file-set"><primary>shishi_tkts_default_file_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tkts_default_file_set        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *tktsfile);</programlisting>
<para>
Set the default ticket set filename used in the library.  The
string is copied into the library, so you can dispose of the
variable immediately after calling this function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tktsfile</parameter>&nbsp;:</term>
<listitem><simpara> string with new default tkts file name, or
                NULL to reset to default.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-default" role="function">
<title>shishi_tkts_default ()</title>
<indexterm zone="shishi-tkts-default"><primary>shishi_tkts_default</primary></indexterm><programlisting><link linkend="Shishi-tkts">Shishi_tkts</link>*        shishi_tkts_default                 (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Get the default ticket set for library handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return the handle global ticket set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-default-to-file" role="function">
<title>shishi_tkts_default_to_file ()</title>
<indexterm zone="shishi-tkts-default-to-file"><primary>shishi_tkts_default_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_default_to_file         (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts" role="function">
<title>shishi_tkts ()</title>
<indexterm zone="shishi-tkts"><primary>shishi_tkts</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-tkts">Shishi_tkts</link> **tkts);</programlisting>
<para>
Get a new ticket set handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> output pointer to newly allocated tkts handle.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-nth" role="function">
<title>shishi_tkts_nth ()</title>
<indexterm zone="shishi-tkts-nth"><primary>shishi_tkts_nth</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tkts_nth                     (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="int">int</link> ticketno);</programlisting>
<para>
Get the n:th ticket in ticket set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticketno</parameter>&nbsp;:</term>
<listitem><simpara> integer indicating requested ticket in ticket set.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns a ticket handle to the ticketno:th ticket in
  the ticket set, or NULL if ticket set is invalid or ticketno is
  out of bounds.  The first ticket is ticketno 0, the second
  ticketno 1, and so on.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-size" role="function">
<title>shishi_tkts_size ()</title>
<indexterm zone="shishi-tkts-size"><primary>shishi_tkts_size</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_size                    (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts);</programlisting>
<para>
Get size of ticket set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns number of tickets stored in ticket set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-add" role="function">
<title>shishi_tkts_add ()</title>
<indexterm zone="shishi-tkts-add"><primary>shishi_tkts_add</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_add                     (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Add a ticket to the ticket set.  Only the pointer is stored, so if
you modify <parameter>tkt</parameter>, the ticket in the ticket set will also be
modified.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to be added to ticket set.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-new" role="function">
<title>shishi_tkts_new ()</title>
<indexterm zone="shishi-tkts-new"><primary>shishi_tkts_new</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_new                     (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep);</programlisting>
<para>
Allocate a new ticket and add it to the ticket set.
</para>
<para>
Note that <parameter>ticket</parameter>, <parameter>enckdcreppart</parameter> and <parameter>kdcrep</parameter> are stored by
reference, so you must not de-allocate them before the ticket is
removed from the ticket set and de-allocated.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> input ticket variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> input ticket detail variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> input KDC-REP variable.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-remove" role="function">
<title>shishi_tkts_remove ()</title>
<indexterm zone="shishi-tkts-remove"><primary>shishi_tkts_remove</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_remove                  (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="int">int</link> ticketno);</programlisting>
<para>
Remove a ticket, indexed by <parameter>ticketno</parameter>, in ticket set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticketno</parameter>&nbsp;:</term>
<listitem><simpara> ticket number of ticket in the set to remove.  The first
  ticket is ticket number 0.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if succesful or if ticketno larger
  than size of ticket set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-expire" role="function">
<title>shishi_tkts_expire ()</title>
<indexterm zone="shishi-tkts-expire"><primary>shishi_tkts_expire</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_expire                  (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts);</programlisting>
<para>
Remove expired tickets from ticket set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-print-for-service" role="function">
<title>shishi_tkts_print_for_service ()</title>
<indexterm zone="shishi-tkts-print-for-service"><primary>shishi_tkts_print_for_service</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_print_for_service       (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         const <link linkend="char">char</link> *service);</programlisting>
<para>
Print description of tickets for specified service to file
descriptor.  If service is NULL, all tickets are printed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file descriptor to print to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>service</parameter>&nbsp;:</term>
<listitem><simpara> service to limit tickets printed to, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-print" role="function">
<title>shishi_tkts_print ()</title>
<indexterm zone="shishi-tkts-print"><primary>shishi_tkts_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_print                   (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);</programlisting>
<para>
Print description of all tickets to file descriptor.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file descriptor to print to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-write" role="function">
<title>shishi_tkts_write ()</title>
<indexterm zone="shishi-tkts-write"><primary>shishi_tkts_write</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_write                   (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);</programlisting>
<para>
Write tickets in set to file descriptor.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file descriptor to write tickets to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-to-file" role="function">
<title>shishi_tkts_to_file ()</title>
<indexterm zone="shishi-tkts-to-file"><primary>shishi_tkts_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_to_file                 (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Write tickets in set to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> filename to write tickets to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-read" role="function">
<title>shishi_tkts_read ()</title>
<indexterm zone="shishi-tkts-read"><primary>shishi_tkts_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_read                    (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);</programlisting>
<para>
Read tickets from file descriptor and add them to the ticket set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file descriptor to read from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-from-file" role="function">
<title>shishi_tkts_from_file ()</title>
<indexterm zone="shishi-tkts-from-file"><primary>shishi_tkts_from_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_from_file               (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Read tickets from file and add them to the ticket set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> filename to read tickets from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-done" role="function">
<title>shishi_tkts_done ()</title>
<indexterm zone="shishi-tkts-done"><primary>shishi_tkts_done</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tkts_done                    (<link linkend="Shishi-tkts">Shishi_tkts</link> **tkts);</programlisting>
<para>
Deallocates all resources associated with ticket set.  The ticket
set handle must not be used in calls to other shishi_tkts_*()
functions after this.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkt-match-p" role="function">
<title>shishi_tkt_match_p ()</title>
<indexterm zone="shishi-tkt-match-p"><primary>shishi_tkt_match_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkt_match_p                  (<link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);</programlisting>
<para>
Test if a ticket matches specified hints.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to test hints on.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hint</parameter>&nbsp;:</term>
<listitem><simpara> structure with characteristics of ticket to be found.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns 0 iff ticket fails to match given criteria.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-find" role="function">
<title>shishi_tkts_find ()</title>
<indexterm zone="shishi-tkts-find"><primary>shishi_tkts_find</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tkts_find                    (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);</programlisting>
<para>
Search the ticketset sequentially (from ticket number 0 through all
tickets in the set) for a ticket that fits the given
characteristics.  If a ticket is found, the hint->startpos field is
updated to point to the next ticket in the set, so this function
can be called repeatedly with the same hint argument in order to
find all tickets matching a certain criterium.  Note that if
tickets are added to, or removed from, the ticketset during a query
with the same hint argument, the hint->startpos field must be
updated appropriately.
</para>
<para>
Here is how you would typically use this function:
</para>
<para>
  Shishi_tkts_hint  hint;
</para>
<para>
  Shishi_tkt  tkt;
</para>
<para>
  memset(&amp;hint, 0, sizeof(hint));
</para>
<para>
  hint.server = "imap/mail.example.org";
</para>
<para>
  tkt = shishi_tkts_find (shishi_tkts_default(handle), &amp;hint);
</para>
<para>
  if (!tkt)
</para>
<para>
    printf("No ticket found...\n");
</para>
<para>
  else
</para>
<para>
    do_something_with_ticket (tkt);</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hint</parameter>&nbsp;:</term>
<listitem><simpara> structure with characteristics of ticket to be found.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns a ticket if found, or NULL if no further
              matching tickets could be found.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-find-for-clientserver" role="function">
<title>shishi_tkts_find_for_clientserver ()</title>
<indexterm zone="shishi-tkts-find-for-clientserver"><primary>shishi_tkts_find_for_clientserver</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tkts_find_for_clientserver   (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *client,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>
Short-hand function for searching the ticket set for a ticket for
the given client and server.  See <link linkend="shishi-tkts-find"><function>shishi_tkts_find()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> client name to find ticket for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> server name to find ticket for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns a ticket if found, or NULL.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-find-for-server" role="function">
<title>shishi_tkts_find_for_server ()</title>
<indexterm zone="shishi-tkts-find-for-server"><primary>shishi_tkts_find_for_server</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tkts_find_for_server         (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>
Short-hand function for searching the ticket set for a ticket for
the given server using the default client principal.  See
<link linkend="shishi-tkts-find-for-clientserver"><function>shishi_tkts_find_for_clientserver()</function></link> and <link linkend="shishi-tkts-find"><function>shishi_tkts_find()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> server name to find ticket for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns a ticket if found, or NULL.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-get" role="function">
<title>shishi_tkts_get ()</title>
<indexterm zone="shishi-tkts-get"><primary>shishi_tkts_get</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tkts_get                     (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);</programlisting>
<para>
Get a ticket matching given characteristics.  This function first
looks in the ticket set for the ticket, then tries to find a
suitable TGT, possibly via an AS exchange, using
<link linkend="shishi-tkts-get-tgt"><function>shishi_tkts_get_tgt()</function></link>, and then use that TGT in a TGS exchange to
get the ticket.
</para>
<para>
Currently this function do not implement cross realm logic.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hint</parameter>&nbsp;:</term>
<listitem><simpara> structure with characteristics of ticket to begot.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns a ticket if found, or NULL if this function
              is unable to get the ticket.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-get-tgt" role="function">
<title>shishi_tkts_get_tgt ()</title>
<indexterm zone="shishi-tkts-get-tgt"><primary>shishi_tkts_get_tgt</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tkts_get_tgt                 (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);</programlisting>
<para>
Get a ticket granting ticket (TGT) suitable for acquiring ticket
matching the hint.  I.e., get a TGT for the server realm in the
hint structure (hint->serverrealm), or the default realm if the
serverrealm field is NULL.  Can result in AS exchange.
</para>
<para>
Currently this function do not implement cross realm logic.
</para>
<para>
This function is used by <link linkend="shishi-tkts-get"><function>shishi_tkts_get()</function></link>, which is probably what
you really want to use unless you have special needs.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hint</parameter>&nbsp;:</term>
<listitem><simpara> structure with characteristics of ticket to begot.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns a ticket granting ticket if successful, or
  NULL if this function is unable to acquire on.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-get-tgs" role="function">
<title>shishi_tkts_get_tgs ()</title>
<indexterm zone="shishi-tkts-get-tgs"><primary>shishi_tkts_get_tgs</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tkts_get_tgs                 (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tgt);</programlisting>
<para>
Get a ticket via TGS exchange using specified ticket granting
ticket.
</para>
<para>
This function is used by <link linkend="shishi-tkts-get"><function>shishi_tkts_get()</function></link>, which is probably what
you really want to use unless you have special needs.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hint</parameter>&nbsp;:</term>
<listitem><simpara> structure with characteristics of ticket to begot.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tgt</parameter>&nbsp;:</term>
<listitem><simpara> ticket granting ticket to use.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns a ticket if successful, or NULL if this
  function is unable to acquire on.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-get-for-clientserver" role="function">
<title>shishi_tkts_get_for_clientserver ()</title>
<indexterm zone="shishi-tkts-get-for-clientserver"><primary>shishi_tkts_get_for_clientserver</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tkts_get_for_clientserver    (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *client,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>
Short-hand function for getting a ticket for the given client and
server.  See <link linkend="shishi-tkts-get"><function>shishi_tkts_get()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> client name to get ticket for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> server name to get ticket for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns a ticket if found, or NULL.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-get-for-server" role="function">
<title>shishi_tkts_get_for_server ()</title>
<indexterm zone="shishi-tkts-get-for-server"><primary>shishi_tkts_get_for_server</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tkts_get_for_server          (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>
Short-hand function for getting a ticket for the given server and
the default principal client.  See <link linkend="shishi-tkts-get"><function>shishi_tkts_get()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> ticket set handle as allocated by <link linkend="shishi-tkts"><function>shishi_tkts()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> server name to get ticket for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns a ticket if found, or NULL.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-get-for-localservicepasswd" role="function">
<title>shishi_tkts_get_for_localservicepasswd ()</title>
<indexterm zone="shishi-tkts-get-for-localservicepasswd"><primary>shishi_tkts_get_for_localservicepasswd</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tkts_get_for_localservicepasswd
                                                        (<link linkend="Shishi-tkts">Shishi_tkts</link> *tkts,
                                                         const <link linkend="char">char</link> *service,
                                                         const <link linkend="char">char</link> *passwd);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>service</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>passwd</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-default-ccache-guess" role="function">
<title>shishi_tkts_default_ccache_guess ()</title>
<indexterm zone="shishi-tkts-default-ccache-guess"><primary>shishi_tkts_default_ccache_guess</primary></indexterm><programlisting><link linkend="char">char</link>*               shishi_tkts_default_ccache_guess    (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Guesses the default ccache ticket filename; it is the contents of
the environment variable KRB5CCNAME or /tmp/krb5cc_UID where UID is
the user's identity in decimal, as returned by <link linkend="getuid"><function>getuid()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns default ccache filename as a string that has
  to be deallocated with <link linkend="free"><function>free()</function></link> by the caller.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-default-ccache" role="function">
<title>shishi_tkts_default_ccache ()</title>
<indexterm zone="shishi-tkts-default-ccache"><primary>shishi_tkts_default_ccache</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_tkts_default_ccache          (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Get filename of default ccache filename.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the default ccache filename used in the
  library.  The string is not a copy, so don't modify or deallocate
  it.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-default-ccache-set" role="function">
<title>shishi_tkts_default_ccache_set ()</title>
<indexterm zone="shishi-tkts-default-ccache-set"><primary>shishi_tkts_default_ccache_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tkts_default_ccache_set      (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *ccache);</programlisting>
<para>
Set the default ccache filename used in the library.  The string is
copied into the library, so you can dispose of the variable
immediately after calling this function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ccache</parameter>&nbsp;:</term>
<listitem><simpara> string with new default ccache filename, or
                NULL to reset to default.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-add-ccache-mem" role="function">
<title>shishi_tkts_add_ccache_mem ()</title>
<indexterm zone="shishi-tkts-add-ccache-mem"><primary>shishi_tkts_add_ccache_mem</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_add_ccache_mem          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len,
                                                         <link linkend="Shishi-tkts">Shishi_tkts</link> *tkts);</programlisting>
<para>
Read tickets from a ccache data structure, and add them to the
ticket set.
</para>
<para>
The ccache format is proprietary, and this function support (at
least) the 0x0504 format.  See the section The Credential Cache
Binary File Format in the Shishi manual for a description of the
file format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> constant memory buffer with ccache of <parameter>len</parameter> size.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> size of memory buffer with ccache data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> allocated key set to store tickets in.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-CCACHE-ERROR:CAPS"><literal>SHISHI_CCACHE_ERROR</literal></link> if the data does not
  represent a valid ccache structure, and <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-add-ccache-file" role="function">
<title>shishi_tkts_add_ccache_file ()</title>
<indexterm zone="shishi-tkts-add-ccache-file"><primary>shishi_tkts_add_ccache_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_add_ccache_file         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="Shishi-tkts">Shishi_tkts</link> *tkts);</programlisting>
<para>
Read tickets from a ccache data structure, and add them to the
ticket set.
</para>
<para>
The ccache format is proprietary, and this function support (at
least) the 0x0504 format.  See the section The Credential Cache
Binary File Format in the Shishi manual for a description of the
file format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> name of file to read.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkts</parameter>&nbsp;:</term>
<listitem><simpara> allocated ticket set to store tickets in.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-IO-ERROR:CAPS"><literal>SHISHI_IO_ERROR</literal></link> if the file cannot be read,
  <link linkend="SHISHI-CCACHE-ERROR:CAPS"><literal>SHISHI_CCACHE_ERROR</literal></link> if the data cannot be parsed as a valid ccache
  structure, and <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-from-ccache-mem" role="function">
<title>shishi_tkts_from_ccache_mem ()</title>
<indexterm zone="shishi-tkts-from-ccache-mem"><primary>shishi_tkts_from_ccache_mem</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_from_ccache_mem         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len,
                                                         <link linkend="Shishi-tkts">Shishi_tkts</link> **outtkts);</programlisting>
<para>
Read tickets from a ccache data structure, and add them to the
ticket set.
</para>
<para>
The ccache format is proprietary, and this function support (at
least) the 0x0504 format.  See the section The Credential Cache
Binary File Format in the Shishi manual for a description of the
file format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> constant memory buffer with ccache of <parameter>len</parameter> size.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> size of memory buffer with ccache data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outtkts</parameter>&nbsp;:</term>
<listitem><simpara> pointer to ticket set that will be allocated and populated,
  must be deallocated by caller on succes.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-CCACHE-ERROR:CAPS"><literal>SHISHI_CCACHE_ERROR</literal></link> if the data does not
  represent a valid ccache structure, and <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tkts-from-ccache-file" role="function">
<title>shishi_tkts_from_ccache_file ()</title>
<indexterm zone="shishi-tkts-from-ccache-file"><primary>shishi_tkts_from_ccache_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tkts_from_ccache_file        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="Shishi-tkts">Shishi_tkts</link> **outtkts);</programlisting>
<para>
Read tickets from a ccache data structure, and add them to the
ticket set.
</para>
<para>
The ccache format is proprietary, and this function support (at
least) the 0x0504 format.  See the section The Credential Cache
Binary File Format in the Shishi manual for a description of the
file format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> name of file to read.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outtkts</parameter>&nbsp;:</term>
<listitem><simpara> pointer to ticket set that will be allocated and populated,
  must be deallocated by caller on succes.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-IO-ERROR:CAPS"><literal>SHISHI_IO_ERROR</literal></link> if the file cannot be read,
  <link linkend="SHISHI-CCACHE-ERROR:CAPS"><literal>SHISHI_CCACHE_ERROR</literal></link> if the data cannot be parsed as a valid ccache
  structure, and <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-print" role="function">
<title>shishi_enckdcreppart_print ()</title>
<indexterm zone="shishi-enckdcreppart-print"><primary>shishi_enckdcreppart_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_print          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-save" role="function">
<title>shishi_enckdcreppart_save ()</title>
<indexterm zone="shishi-enckdcreppart-save"><primary>shishi_enckdcreppart_save</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_save           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-parse" role="function">
<title>shishi_enckdcreppart_parse ()</title>
<indexterm zone="shishi-enckdcreppart-parse"><primary>shishi_enckdcreppart_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_parse          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *enckdcreppart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-read" role="function">
<title>shishi_enckdcreppart_read ()</title>
<indexterm zone="shishi-enckdcreppart-read"><primary>shishi_enckdcreppart_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_read           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *enckdcreppart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-save" role="function">
<title>shishi_ticket_save ()</title>
<indexterm zone="shishi-ticket-save"><primary>shishi_ticket_save</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_save                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-print" role="function">
<title>shishi_ticket_print ()</title>
<indexterm zone="shishi-ticket-print"><primary>shishi_ticket_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_print                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdc-print" role="function">
<title>shishi_kdc_print ()</title>
<indexterm zone="shishi-kdc-print"><primary>shishi_kdc_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdc_print                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asrep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encasreppart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asreq</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asrep</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encasreppart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-parse" role="function">
<title>shishi_ticket_parse ()</title>
<indexterm zone="shishi-ticket-parse"><primary>shishi_ticket_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_parse                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *ticket);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ticket-read" role="function">
<title>shishi_ticket_read ()</title>
<indexterm zone="shishi-ticket-read"><primary>shishi_ticket_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ticket_read                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *ticket);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-etype-info-print" role="function">
<title>shishi_etype_info_print ()</title>
<indexterm zone="shishi-etype-info-print"><primary>shishi_etype_info_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_etype_info_print             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> etypeinfo);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etypeinfo</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-etype-info2-print" role="function">
<title>shishi_etype_info2_print ()</title>
<indexterm zone="shishi-etype-info2-print"><primary>shishi_etype_info2_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_etype_info2_print            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> etypeinfo2);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etypeinfo2</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-padata-print" role="function">
<title>shishi_padata_print ()</title>
<indexterm zone="shishi-padata-print"><primary>shishi_padata_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_padata_print                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> padata);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>padata</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-methoddata-print" role="function">
<title>shishi_methoddata_print ()</title>
<indexterm zone="shishi-methoddata-print"><primary>shishi_methoddata_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_methoddata_print             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> methoddata);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>methoddata</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator" role="function">
<title>shishi_authenticator ()</title>
<indexterm zone="shishi-authenticator"><primary>shishi_authenticator</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_authenticator                (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
This function creates a new Authenticator, populated with some
default values.  It uses the current time as returned by the system
for the ctime and cusec fields.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the authenticator or NULL on
failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-set-crealm" role="function">
<title>shishi_authenticator_set_crealm ()</title>
<indexterm zone="shishi-authenticator-set-crealm"><primary>shishi_authenticator_set_crealm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_set_crealm     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         const <link linkend="char">char</link> *crealm);</programlisting>
<para>
Set realm field in authenticator to specified value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>crealm</parameter>&nbsp;:</term>
<listitem><simpara> input array with realm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-set-cname" role="function">
<title>shishi_authenticator_set_cname ()</title>
<indexterm zone="shishi-authenticator-set-cname"><primary>shishi_authenticator_set_cname</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_set_cname      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *cname[]);</programlisting>
<para>
Set principal field in authenticator to specified value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name_type</parameter>&nbsp;:</term>
<listitem><simpara> type of principial, see Shishi_name_type, usually
            SHISHI_NT_UNKNOWN.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cname</parameter>&nbsp;:</term>
<listitem><simpara> input array with principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-client-set" role="function">
<title>shishi_authenticator_client_set ()</title>
<indexterm zone="shishi-authenticator-client-set"><primary>shishi_authenticator_client_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_client_set     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         const <link linkend="char">char</link> *client);</programlisting>
<para>
Set the client name field in the Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> Authenticator to set client name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> zero-terminated string with principal name on RFC 1964 form.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-ctime" role="function">
<title>shishi_authenticator_ctime ()</title>
<indexterm zone="shishi-authenticator-ctime"><primary>shishi_authenticator_ctime</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_ctime          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="char">char</link> **t);</programlisting>
<para>
Extract client time from Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> Authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated zero-terminated character array with client time.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-ctime-set" role="function">
<title>shishi_authenticator_ctime_set ()</title>
<indexterm zone="shishi-authenticator-ctime-set"><primary>shishi_authenticator_ctime_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_ctime_set      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         const <link linkend="char">char</link> *t);</programlisting>
<para>
Store client time in Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> Authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> string with generalized time value to store in Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-cusec-get" role="function">
<title>shishi_authenticator_cusec_get ()</title>
<indexterm zone="shishi-authenticator-cusec-get"><primary>shishi_authenticator_cusec_get</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_cusec_get      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="uint32-t">uint32_t</link> *cusec);</programlisting>
<para>
Extract client microseconds field from Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> Authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cusec</parameter>&nbsp;:</term>
<listitem><simpara> output integer with client microseconds field.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-cusec-set" role="function">
<title>shishi_authenticator_cusec_set ()</title>
<indexterm zone="shishi-authenticator-cusec-set"><primary>shishi_authenticator_cusec_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_cusec_set      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="uint32-t">uint32_t</link> cusec);</programlisting>
<para>
Set the cusec field in the Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cusec</parameter>&nbsp;:</term>
<listitem><simpara> client microseconds to set in authenticator, 0-999999.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-seqnumber-get" role="function">
<title>shishi_authenticator_seqnumber_get ()</title>
<indexterm zone="shishi-authenticator-seqnumber-get"><primary>shishi_authenticator_seqnumber_get</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_seqnumber_get  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="uint32-t">uint32_t</link> *seqnumber);</programlisting>
<para>
Extract sequence number field from Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>seqnumber</parameter>&nbsp;:</term>
<listitem><simpara> output integer with sequence number field.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-seqnumber-remove" role="function">
<title>shishi_authenticator_seqnumber_remove ()</title>
<indexterm zone="shishi-authenticator-seqnumber-remove"><primary>shishi_authenticator_seqnumber_remove</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_seqnumber_remove
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);</programlisting>
<para>
Remove sequence number field in Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-seqnumber-set" role="function">
<title>shishi_authenticator_seqnumber_set ()</title>
<indexterm zone="shishi-authenticator-seqnumber-set"><primary>shishi_authenticator_seqnumber_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_seqnumber_set  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="uint32-t">uint32_t</link> seqnumber);</programlisting>
<para>
Store sequence number field in Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>seqnumber</parameter>&nbsp;:</term>
<listitem><simpara> integer with sequence number field to store in Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-client" role="function">
<title>shishi_authenticator_client ()</title>
<indexterm zone="shishi-authenticator-client"><primary>shishi_authenticator_client</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_client         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);</programlisting>
<para>
Represent client principal name in Authenticator as zero-terminated
string.  The string is allocate by this function, and it is the
responsibility of the caller to deallocate it.  Note that the
output length <parameter>clientlen</parameter> does not include the terminating zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> Authenticator variable to get client name from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>clientlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>clientlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>client</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>client</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-clientrealm" role="function">
<title>shishi_authenticator_clientrealm ()</title>
<indexterm zone="shishi-authenticator-clientrealm"><primary>shishi_authenticator_clientrealm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_clientrealm    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);</programlisting>
<para>
Convert cname and realm fields from Authenticator to printable
principal name format.  The string is allocate by this function,
and it is the responsibility of the caller to deallocate it.  Note
that the output length <parameter>clientlen</parameter> does not include the terminating
zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> Authenticator variable to get client name and realm from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name and realm.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>clientlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>clientlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>client</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>client</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-remove-cksum" role="function">
<title>shishi_authenticator_remove_cksum ()</title>
<indexterm zone="shishi-authenticator-remove-cksum"><primary>shishi_authenticator_remove_cksum</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_remove_cksum   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-cksum" role="function">
<title>shishi_authenticator_cksum ()</title>
<indexterm zone="shishi-authenticator-cksum"><primary>shishi_authenticator_cksum</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_cksum          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int32-t">int32_t</link> *cksumtype,
                                                         <link linkend="char">char</link> **cksum,
                                                         <link linkend="size-t">size_t</link> *cksumlen);</programlisting>
<para>
Read checksum value from authenticator.  <parameter>cksum</parameter> is allocated by
this function, and it is the responsibility of caller to deallocate
it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumtype</parameter>&nbsp;:</term>
<listitem><simpara> output checksum type.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksum</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated output checksum data from authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumlen</parameter>&nbsp;:</term>
<listitem><simpara> on output, actual size of allocated output checksum data buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-set-cksum" role="function">
<title>shishi_authenticator_set_cksum ()</title>
<indexterm zone="shishi-authenticator-set-cksum"><primary>shishi_authenticator_set_cksum</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_set_cksum      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int">int</link> cksumtype,
                                                         <link linkend="char">char</link> *cksum,
                                                         <link linkend="size-t">size_t</link> cksumlen);</programlisting>
<para>
Store checksum value in authenticator.  A checksum is usually created
by calling <link linkend="shishi-checksum"><function>shishi_checksum()</function></link> on some application specific data using
the key from the ticket that is being used.  To save time, you may
want to use <link linkend="shishi-authenticator-add-cksum"><function>shishi_authenticator_add_cksum()</function></link> instead, which calculates
the checksum and calls this function in one step.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumtype</parameter>&nbsp;:</term>
<listitem><simpara> input checksum type to store in authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksum</parameter>&nbsp;:</term>
<listitem><simpara> input checksum data to store in authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input checksum data to store in authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-add-cksum" role="function">
<title>shishi_authenticator_add_cksum ()</title>
<indexterm zone="shishi-authenticator-add-cksum"><primary>shishi_authenticator_add_cksum</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_add_cksum      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> datalen);</programlisting>
<para>
Calculate checksum for data and store it in the authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to to use for encryption.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> cryptographic key usage value to use in encryption.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to calculate checksum on.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>datalen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to calculate checksum on.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-add-cksum-type" role="function">
<title>shishi_authenticator_add_cksum_type ()</title>
<indexterm zone="shishi-authenticator-add-cksum-type"><primary>shishi_authenticator_add_cksum_type</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_add_cksum_type (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int">int</link> cksumtype,
                                                         <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> datalen);</programlisting>
<para>
Calculate checksum for data and store it in the authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to to use for encryption.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> cryptographic key usage value to use in encryption.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumtype</parameter>&nbsp;:</term>
<listitem><simpara> checksum to type to calculate checksum.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to calculate checksum on.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>datalen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to calculate checksum on.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-remove-subkey" role="function">
<title>shishi_authenticator_remove_subkey ()</title>
<indexterm zone="shishi-authenticator-remove-subkey"><primary>shishi_authenticator_remove_subkey</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_remove_subkey  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);</programlisting>
<para>
Remove subkey from the authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-subkey" role="function">
<title>shishi_authenticator_subkey ()</title>
<indexterm zone="shishi-authenticator-subkey"><primary>shishi_authenticator_subkey</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_authenticator_subkey         (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
This function creates a new Authenticator, populated with some
default values.  It uses the current time as returned by the system
for the ctime and cusec fields. It adds a random subkey.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the authenticator or NULL on
failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-get-subkey" role="function">
<title>shishi_authenticator_get_subkey ()</title>
<indexterm zone="shishi-authenticator-get-subkey"><primary>shishi_authenticator_get_subkey</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_get_subkey     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-key">Shishi_key</link> **subkey);</programlisting>
<para>
Read subkey value from authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>subkey</parameter>&nbsp;:</term>
<listitem><simpara> output newly allocated subkey from authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful or SHISHI_ASN1_NO_ELEMENT
              if subkey is not present.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-set-subkey" role="function">
<title>shishi_authenticator_set_subkey ()</title>
<indexterm zone="shishi-authenticator-set-subkey"><primary>shishi_authenticator_set_subkey</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_set_subkey     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int32-t">int32_t</link> subkeytype,
                                                         const <link linkend="char">char</link> *subkey,
                                                         <link linkend="size-t">size_t</link> subkeylen);</programlisting>
<para>
Store subkey value in authenticator.  A subkey is usually created
by calling <link linkend="shishi-key-random"><function>shishi_key_random()</function></link> using the default encryption type of
the key from the ticket that is being used.  To save time, you may
want to use <link linkend="shishi-authenticator-add-subkey"><function>shishi_authenticator_add_subkey()</function></link> instead, which calculates
the subkey and calls this function in one step.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>subkeytype</parameter>&nbsp;:</term>
<listitem><simpara> input subkey type to store in authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>subkey</parameter>&nbsp;:</term>
<listitem><simpara> input subkey data to store in authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>subkeylen</parameter>&nbsp;:</term>
<listitem><simpara> size of input subkey data to store in authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-add-random-subkey" role="function">
<title>shishi_authenticator_add_random_subkey ()</title>
<indexterm zone="shishi-authenticator-add-random-subkey"><primary>shishi_authenticator_add_random_subkey</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_add_random_subkey
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);</programlisting>
<para>
Generate random subkey, of the default encryption type from
configuration, and store it in the authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-add-random-subkey-etype" role="function">
<title>shishi_authenticator_add_random_subkey_etype ()</title>
<indexterm zone="shishi-authenticator-add-random-subkey-etype"><primary>shishi_authenticator_add_random_subkey_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_add_random_subkey_etype
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int">int</link> etype);</programlisting>
<para>
Generate random subkey of indicated encryption type, and store it
in the authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> encryption type of random key to generate.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-add-subkey" role="function">
<title>shishi_authenticator_add_subkey ()</title>
<indexterm zone="shishi-authenticator-add-subkey"><primary>shishi_authenticator_add_subkey</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_add_subkey     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-key">Shishi_key</link> *subkey);</programlisting>
<para>
Store subkey in the authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>subkey</parameter>&nbsp;:</term>
<listitem><simpara> subkey to add to authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-clear-authorizationdata" role="function">
<title>shishi_authenticator_clear_authorizationdata ()</title>
<indexterm zone="shishi-authenticator-clear-authorizationdata"><primary>shishi_authenticator_clear_authorizationdata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_clear_authorizationdata
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);</programlisting>
<para>
Remove the authorization-data field from Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> Authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-add-authorizationdata" role="function">
<title>shishi_authenticator_add_authorizationdata ()</title>
<indexterm zone="shishi-authenticator-add-authorizationdata"><primary>shishi_authenticator_add_authorizationdata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_add_authorizationdata
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int32-t">int32_t</link> adtype,
                                                         const <link linkend="char">char</link> *addata,
                                                         <link linkend="size-t">size_t</link> addatalen);</programlisting>
<para>
Add authorization data to authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>adtype</parameter>&nbsp;:</term>
<listitem><simpara> input authorization data type to add.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>addata</parameter>&nbsp;:</term>
<listitem><simpara> input authorization data to add.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>addatalen</parameter>&nbsp;:</term>
<listitem><simpara> size of input authorization data to add.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-authorizationdata" role="function">
<title>shishi_authenticator_authorizationdata ()</title>
<indexterm zone="shishi-authenticator-authorizationdata"><primary>shishi_authenticator_authorizationdata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_authorizationdata
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int32-t">int32_t</link> *adtype,
                                                         <link linkend="char">char</link> **addata,
                                                         <link linkend="size-t">size_t</link> *addatalen,
                                                         <link linkend="size-t">size_t</link> nth);</programlisting>
<para>
Extract n:th authorization data from authenticator.  The first
field is 1.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>adtype</parameter>&nbsp;:</term>
<listitem><simpara> output authorization data type.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>addata</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated output authorization data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>addatalen</parameter>&nbsp;:</term>
<listitem><simpara> on output, actual size of newly allocated authorization data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>nth</parameter>&nbsp;:</term>
<listitem><simpara> element number of authorization-data to extract.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-read" role="function">
<title>shishi_authenticator_read ()</title>
<indexterm zone="shishi-authenticator-read"><primary>shishi_authenticator_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_read           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *authenticator);</programlisting>
<para>
Read DER encoded authenticator from file and populate given
authenticator variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-parse" role="function">
<title>shishi_authenticator_parse ()</title>
<indexterm zone="shishi-authenticator-parse"><primary>shishi_authenticator_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_parse          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *authenticator);</programlisting>
<para>
Read ASCII armored DER encoded authenticator from file and populate
given authenticator variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-from-file" role="function">
<title>shishi_authenticator_from_file ()</title>
<indexterm zone="shishi-authenticator-from-file"><primary>shishi_authenticator_from_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_from_file      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *authenticator,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Read Authenticator from file in specified TYPE.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be read,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to read from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-print" role="function">
<title>shishi_authenticator_print ()</title>
<indexterm zone="shishi-authenticator-print"><primary>shishi_authenticator_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_print          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);</programlisting>
<para>
Print ASCII armored DER encoding of authenticator to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-to-file" role="function">
<title>shishi_authenticator_to_file ()</title>
<indexterm zone="shishi-authenticator-to-file"><primary>shishi_authenticator_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_to_file        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Write Authenticator to file in specified TYPE.  The file will be
truncated if it exists.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> Authenticator to save.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be written,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to write to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authenticator-save" role="function">
<title>shishi_authenticator_save ()</title>
<indexterm zone="shishi-authenticator-save"><primary>shishi_authenticator_save</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authenticator_save           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);</programlisting>
<para>
Save DER encoding of authenticator to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as" role="function">
<title>shishi_as ()</title>
<indexterm zone="shishi-as"><primary>shishi_as</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as                           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-as">Shishi_as</link> **as);</programlisting>
<para>
Allocate a new AS exchange variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> holds pointer to newly allocate Shishi_as structure.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-done" role="function">
<title>shishi_as_done ()</title>
<indexterm zone="shishi-as-done"><primary>shishi_as_done</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_as_done                      (<link linkend="Shishi-as">Shishi_as</link> *as);</programlisting>
<para>
Deallocate resources associated with AS exchange.  This should be
called by the application when it no longer need to utilize the AS
exchange handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-req" role="function">
<title>shishi_as_req ()</title>
<indexterm zone="shishi-as-req"><primary>shishi_as_req</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_as_req                       (<link linkend="Shishi-as">Shishi_as</link> *as);</programlisting>
<para>
Get ASN.1 AS-REQ structure from AS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the generated AS-REQ packet from the AS
              exchange, or NULL if not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-req-build" role="function">
<title>shishi_as_req_build ()</title>
<indexterm zone="shishi-as-req-build"><primary>shishi_as_req_build</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_req_build                 (<link linkend="Shishi-as">Shishi_as</link> *as);</programlisting>
<para>
Possibly remove unset fields (e.g., rtime).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-req-set" role="function">
<title>shishi_as_req_set ()</title>
<indexterm zone="shishi-as-req-set"><primary>shishi_as_req_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_as_req_set                   (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq);</programlisting>
<para>
Set the AS-REQ in the AS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asreq</parameter>&nbsp;:</term>
<listitem><simpara> asreq to store in AS.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-req-der" role="function">
<title>shishi_as_req_der ()</title>
<indexterm zone="shishi-as-req-der"><primary>shishi_as_req_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_req_der                   (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
DER encode AS-REQ.  <parameter>out</parameter> is allocated by this function, and it is
the responsibility of caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated DER encoding of AS-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> length of output array with DER encoding of AS-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-req-der-set" role="function">
<title>shishi_as_req_der_set ()</title>
<indexterm zone="shishi-as-req-der-set"><primary>shishi_as_req_der_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_req_der_set               (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
DER decode AS-REQ and set it AS exchange.  If decoding fails, the
AS-REQ in the AS exchange remains.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input array with DER encoded AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with DER encoded AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-rep" role="function">
<title>shishi_as_rep ()</title>
<indexterm zone="shishi-as-rep"><primary>shishi_as_rep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_as_rep                       (<link linkend="Shishi-as">Shishi_as</link> *as);</programlisting>
<para>
Get ASN.1 AS-REP structure from AS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the received AS-REP packet from the AS
              exchange, or NULL if not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-rep-set" role="function">
<title>shishi_as_rep_set ()</title>
<indexterm zone="shishi-as-rep-set"><primary>shishi_as_rep_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_as_rep_set                   (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asrep);</programlisting>
<para>
Set the AS-REP in the AS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asrep</parameter>&nbsp;:</term>
<listitem><simpara> asrep to store in AS.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-rep-build" role="function">
<title>shishi_as_rep_build ()</title>
<indexterm zone="shishi-as-rep-build"><primary>shishi_as_rep_build</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_rep_build                 (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Build AS-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> user's key, used to encrypt the encrypted part of the AS-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-rep-der" role="function">
<title>shishi_as_rep_der ()</title>
<indexterm zone="shishi-as-rep-der"><primary>shishi_as_rep_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_rep_der                   (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
DER encode AS-REP. <parameter>out</parameter> is allocated by this function, and it is
the responsibility of caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated DER encoding of AS-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> length of output array with DER encoding of AS-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-rep-der-set" role="function">
<title>shishi_as_rep_der_set ()</title>
<indexterm zone="shishi-as-rep-der-set"><primary>shishi_as_rep_der_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_rep_der_set               (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
DER decode AS-REP and set it AS exchange.  If decoding fails, the
AS-REP in the AS exchange remains.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input array with DER encoded AP-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with DER encoded AP-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-krberror" role="function">
<title>shishi_as_krberror ()</title>
<indexterm zone="shishi-as-krberror"><primary>shishi_as_krberror</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_as_krberror                  (<link linkend="Shishi-as">Shishi_as</link> *as);</programlisting>
<para>
Get ASN.1 KRB-ERROR structure from AS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the received KRB-ERROR packet from the AS
              exchange, or NULL if not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-krberror-der" role="function">
<title>shishi_as_krberror_der ()</title>
<indexterm zone="shishi-as-krberror-der"><primary>shishi_as_krberror_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_krberror_der              (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
DER encode KRB-ERROR. <parameter>out</parameter> is allocated by this function, and it is
the responsibility of caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated DER encoding of KRB-ERROR.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> length of output array with DER encoding of KRB-ERROR.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-krberror-set" role="function">
<title>shishi_as_krberror_set ()</title>
<indexterm zone="shishi-as-krberror-set"><primary>shishi_as_krberror_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_as_krberror_set              (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Set the KRB-ERROR in the AS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror to store in AS.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-tkt" role="function">
<title>shishi_as_tkt ()</title>
<indexterm zone="shishi-as-tkt"><primary>shishi_as_tkt</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_as_tkt                       (<link linkend="Shishi-as">Shishi_as</link> *as);</programlisting>
<para>
Get Ticket in AS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the newly aquired tkt from the AS
              exchange, or NULL if not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-tkt-set" role="function">
<title>shishi_as_tkt_set ()</title>
<indexterm zone="shishi-as-tkt-set"><primary>shishi_as_tkt_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_as_tkt_set                   (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Set the Tkt in the AS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> tkt to store in AS.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-sendrecv" role="function">
<title>shishi_as_sendrecv ()</title>
<indexterm zone="shishi-as-sendrecv"><primary>shishi_as_sendrecv</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_sendrecv                  (<link linkend="Shishi-as">Shishi_as</link> *as);</programlisting>
<para>
Send AS-REQ and receive AS-REP or KRB-ERROR.  This is the initial
authentication, usually used to acquire a Ticket Granting Ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-sendrecv-hint" role="function">
<title>shishi_as_sendrecv_hint ()</title>
<indexterm zone="shishi-as-sendrecv-hint"><primary>shishi_as_sendrecv_hint</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_sendrecv_hint             (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);</programlisting>
<para>
Send AS-REQ and receive AS-REP or KRB-ERROR.  This is the initial
authentication, usually used to acquire a Ticket Granting Ticket.
The <parameter>hint</parameter> structure can be used to set, e.g., parameters for TLS
authentication.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hint</parameter>&nbsp;:</term>
<listitem><simpara> additional parameters that modify connection behaviour, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-rep-process" role="function">
<title>shishi_as_rep_process ()</title>
<indexterm zone="shishi-as-rep-process"><primary>shishi_as_rep_process</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_rep_process               (<link linkend="Shishi-as">Shishi_as</link> *as,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         const <link linkend="char">char</link> *password);</programlisting>
<para>
Process new AS-REP and set ticket.  The key is used to decrypt the
AP-REP.  If both key and password is NULL, the user is queried for
it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>as</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> user's key, used to encrypt the encrypted part of the AS-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&nbsp;:</term>
<listitem><simpara> user's password, used if key is NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs" role="function">
<title>shishi_tgs ()</title>
<indexterm zone="shishi-tgs"><primary>shishi_tgs</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-tgs">Shishi_tgs</link> **tgs);</programlisting>
<para>
Allocate a new TGS exchange variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> holds pointer to newly allocate Shishi_tgs structure.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-done" role="function">
<title>shishi_tgs_done ()</title>
<indexterm zone="shishi-tgs-done"><primary>shishi_tgs_done</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tgs_done                     (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);</programlisting>
<para>
Deallocate resources associated with TGS exchange.  This should be
called by the application when it no longer need to utilize the TGS
exchange handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AS exchange
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-tgtkt" role="function">
<title>shishi_tgs_tgtkt ()</title>
<indexterm zone="shishi-tgs-tgtkt"><primary>shishi_tgs_tgtkt</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tgs_tgtkt                    (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);</programlisting>
<para>
Get Ticket-granting-ticket from TGS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the ticket-granting-ticket used in the TGS
              exchange, or NULL if not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-tgtkt-set" role="function">
<title>shishi_tgs_tgtkt_set ()</title>
<indexterm zone="shishi-tgs-tgtkt-set"><primary>shishi_tgs_tgtkt_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tgs_tgtkt_set                (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tgtkt);</programlisting>
<para>
Set the Ticket in the TGS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tgtkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket granting ticket to store in TGS.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-ap" role="function">
<title>shishi_tgs_ap ()</title>
<indexterm zone="shishi-tgs-ap"><primary>shishi_tgs_ap</primary></indexterm><programlisting><link linkend="Shishi-ap">Shishi_ap</link>*          shishi_tgs_ap                       (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);</programlisting>
<para>
Get the AP from TGS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the AP exchange (part of TGS-REQ) from the
              TGS exchange, or NULL if not yet set or an error
              occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-req" role="function">
<title>shishi_tgs_req ()</title>
<indexterm zone="shishi-tgs-req"><primary>shishi_tgs_req</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_tgs_req                      (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);</programlisting>
<para>
Get the TGS-REQ from TGS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the generated TGS-REQ from the TGS exchange,
              or NULL if not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-req-der" role="function">
<title>shishi_tgs_req_der ()</title>
<indexterm zone="shishi-tgs-req-der"><primary>shishi_tgs_req_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_req_der                  (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
DER encode TGS-REQ. <parameter>out</parameter> is allocated by this function, and it is
the responsibility of caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated DER encoding of TGS-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> length of output array with DER encoding of TGS-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-req-der-set" role="function">
<title>shishi_tgs_req_der_set ()</title>
<indexterm zone="shishi-tgs-req-der-set"><primary>shishi_tgs_req_der_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_req_der_set              (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
DER decode TGS-REQ and set it TGS exchange.  If decoding fails, the
TGS-REQ in the TGS exchange remains.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input array with DER encoded AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with DER encoded AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-req-set" role="function">
<title>shishi_tgs_req_set ()</title>
<indexterm zone="shishi-tgs-req-set"><primary>shishi_tgs_req_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tgs_req_set                  (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> tgsreq);</programlisting>
<para>
Set the TGS-REQ in the TGS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tgsreq</parameter>&nbsp;:</term>
<listitem><simpara> tgsreq to store in TGS.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-req-build" role="function">
<title>shishi_tgs_req_build ()</title>
<indexterm zone="shishi-tgs-req-build"><primary>shishi_tgs_req_build</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_req_build                (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);</programlisting>
<para>
Checksum data in authenticator and add ticket and authenticator to
TGS-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-req-process" role="function">
<title>shishi_tgs_req_process ()</title>
<indexterm zone="shishi-tgs-req-process"><primary>shishi_tgs_req_process</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_req_process              (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);</programlisting>
<para>
Process new TGS-REQ and set ticket.  The key to decrypt the TGS-REQ
is taken from the EncKDCReqPart of the TGS tgticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-rep" role="function">
<title>shishi_tgs_rep ()</title>
<indexterm zone="shishi-tgs-rep"><primary>shishi_tgs_rep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_tgs_rep                      (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);</programlisting>
<para>
Get TGS-REP from TGS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the received TGS-REP from the TGS exchange,
              or NULL if not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-rep-der" role="function">
<title>shishi_tgs_rep_der ()</title>
<indexterm zone="shishi-tgs-rep-der"><primary>shishi_tgs_rep_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_rep_der                  (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
DER encode TGS-REP. <parameter>out</parameter> is allocated by this function, and it is
the responsibility of caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated DER encoding of TGS-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> length of output array with DER encoding of TGS-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-rep-build" role="function">
<title>shishi_tgs_rep_build ()</title>
<indexterm zone="shishi-tgs-rep-build"><primary>shishi_tgs_rep_build</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_rep_build                (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Build TGS-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> keyusage integer.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> user's key, used to encrypt the encrypted part of the TGS-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-rep-process" role="function">
<title>shishi_tgs_rep_process ()</title>
<indexterm zone="shishi-tgs-rep-process"><primary>shishi_tgs_rep_process</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_rep_process              (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);</programlisting>
<para>
Process new TGS-REP and set ticket.  The key to decrypt the TGS-REP
is taken from the EncKDCRepPart of the TGS tgticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-krberror" role="function">
<title>shishi_tgs_krberror ()</title>
<indexterm zone="shishi-tgs-krberror"><primary>shishi_tgs_krberror</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_tgs_krberror                 (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);</programlisting>
<para>
Get KRB-ERROR from TGS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the received TGS-REP from the TGS exchange,
              or NULL if not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-krberror-der" role="function">
<title>shishi_tgs_krberror_der ()</title>
<indexterm zone="shishi-tgs-krberror-der"><primary>shishi_tgs_krberror_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_krberror_der             (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
DER encode KRB-ERROR.  <parameter>out</parameter> is allocated by this function, and it is
the responsibility of caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated DER encoding of KRB-ERROR.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> length of output array with DER encoding of KRB-ERROR.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-krberror-set" role="function">
<title>shishi_tgs_krberror_set ()</title>
<indexterm zone="shishi-tgs-krberror-set"><primary>shishi_tgs_krberror_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tgs_krberror_set             (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Set the KRB-ERROR in the TGS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror to store in TGS.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-tkt" role="function">
<title>shishi_tgs_tkt ()</title>
<indexterm zone="shishi-tgs-tkt"><primary>shishi_tgs_tkt</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_tgs_tkt                      (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);</programlisting>
<para>
Get Ticket from TGS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the newly aquired ticket from the TGS
              exchange, or NULL if not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-tkt-set" role="function">
<title>shishi_tgs_tkt_set ()</title>
<indexterm zone="shishi-tgs-tkt-set"><primary>shishi_tgs_tkt_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_tgs_tkt_set                  (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Set the Ticket in the TGS exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to store in TGS.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-sendrecv" role="function">
<title>shishi_tgs_sendrecv ()</title>
<indexterm zone="shishi-tgs-sendrecv"><primary>shishi_tgs_sendrecv</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_sendrecv                 (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs);</programlisting>
<para>
Send TGS-REQ and receive TGS-REP or KRB-ERROR.  This is the
subsequent authentication, usually used to acquire server tickets.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-sendrecv-hint" role="function">
<title>shishi_tgs_sendrecv_hint ()</title>
<indexterm zone="shishi-tgs-sendrecv-hint"><primary>shishi_tgs_sendrecv_hint</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_sendrecv_hint            (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);</programlisting>
<para>
Send TGS-REQ and receive TGS-REP or KRB-ERROR.  This is the
subsequent authentication, usually used to acquire server tickets.
The <parameter>hint</parameter> structure can be used to set, e.g., parameters for TLS
authentication.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hint</parameter>&nbsp;:</term>
<listitem><simpara> additional parameters that modify connection behaviour, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-set-server" role="function">
<title>shishi_tgs_set_server ()</title>
<indexterm zone="shishi-tgs-set-server"><primary>shishi_tgs_set_server</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_set_server               (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>
Set the server in the TGS-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> indicates the server to acquire ticket for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-set-realm" role="function">
<title>shishi_tgs_set_realm ()</title>
<indexterm zone="shishi-tgs-set-realm"><primary>shishi_tgs_set_realm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_set_realm                (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         const <link linkend="char">char</link> *realm);</programlisting>
<para>
Set the server in the TGS-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> indicates the realm to acquire ticket for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-set-realmserver" role="function">
<title>shishi_tgs_set_realmserver ()</title>
<indexterm zone="shishi-tgs-set-realmserver"><primary>shishi_tgs_set_realmserver</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_set_realmserver          (<link linkend="Shishi-tgs">Shishi_tgs</link> *tgs,
                                                         const <link linkend="char">char</link> *realm,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>
Set the realm and server in the TGS-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>tgs</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about TGS exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> indicates the realm to acquire ticket for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> indicates the server to acquire ticket for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq" role="function">
<title>shishi_kdcreq ()</title>
<indexterm zone="shishi-kdcreq"><primary>shishi_kdcreq</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq                       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *realm,
                                                         <link linkend="char">char</link> *service,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *req);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>service</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>req</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asreq" role="function">
<title>shishi_asreq ()</title>
<indexterm zone="shishi-asreq"><primary>shishi_asreq</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asreq                        (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
This function creates a new AS-REQ, populated with some default
values.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the AS-REQ or NULL on failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asreq-rsc" role="function">
<title>shishi_asreq_rsc ()</title>
<indexterm zone="shishi-asreq-rsc"><primary>shishi_asreq_rsc</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asreq_rsc                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *realm,
                                                         <link linkend="char">char</link> *server,
                                                         <link linkend="char">char</link> *client);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgsreq" role="function">
<title>shishi_tgsreq ()</title>
<indexterm zone="shishi-tgsreq"><primary>shishi_tgsreq</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_tgsreq                       (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
This function creates a new TGS-REQ, populated with some default
values.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the TGS-REQ or NULL on failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgsreq-rst" role="function">
<title>shishi_tgsreq_rst ()</title>
<indexterm zone="shishi-tgsreq-rst"><primary>shishi_tgsreq_rst</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_tgsreq_rst                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *realm,
                                                         <link linkend="char">char</link> *server,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-save" role="function">
<title>shishi_kdcreq_save ()</title>
<indexterm zone="shishi-kdcreq-save"><primary>shishi_kdcreq_save</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_save                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Print DER encoding of KDC-REQ to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ to save.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-print" role="function">
<title>shishi_kdcreq_print ()</title>
<indexterm zone="shishi-kdcreq-print"><primary>shishi_kdcreq_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_print                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Print ASCII armored DER encoding of KDC-REQ to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ to print.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-to-file" role="function">
<title>shishi_kdcreq_to_file ()</title>
<indexterm zone="shishi-kdcreq-to-file"><primary>shishi_kdcreq_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_to_file               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Write KDC-REQ to file in specified TYPE.  The file will be truncated
if it exists.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ to save.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be written,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to write to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-parse" role="function">
<title>shishi_kdcreq_parse ()</title>
<indexterm zone="shishi-kdcreq-parse"><primary>shishi_kdcreq_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_parse                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcreq);</programlisting>
<para>
Read ASCII armored DER encoded KDC-REQ from file and populate given
variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated KDC-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-read" role="function">
<title>shishi_kdcreq_read ()</title>
<indexterm zone="shishi-kdcreq-read"><primary>shishi_kdcreq_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_read                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcreq);</programlisting>
<para>
Read DER encoded KDC-REQ from file and populate given variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated KDC-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-from-file" role="function">
<title>shishi_kdcreq_from_file ()</title>
<indexterm zone="shishi-kdcreq-from-file"><primary>shishi_kdcreq_from_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_from_file             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcreq,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Read KDC-REQ from file in specified TYPE.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated KDC-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be read,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to read from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asreq-clientrealm" role="function">
<title>shishi_asreq_clientrealm ()</title>
<indexterm zone="shishi-asreq-clientrealm"><primary>shishi_asreq_clientrealm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asreq_clientrealm            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);</programlisting>
<para>
Convert cname and realm fields from AS-REQ to printable principal
name format.  The string is allocate by this function, and it is
the responsibility of the caller to deallocate it.  Note that the
output length <parameter>clientlen</parameter> does not include the terminating zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asreq</parameter>&nbsp;:</term>
<listitem><simpara> AS-REQ variable to get client name and realm from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name and realm.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>clientlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>clientlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>client</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>client</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-nonce" role="function">
<title>shishi_kdcreq_nonce ()</title>
<indexterm zone="shishi-kdcreq-nonce"><primary>shishi_kdcreq_nonce</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_nonce                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="uint32-t">uint32_t</link> *nonce);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>nonce</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-nonce-set" role="function">
<title>shishi_kdcreq_nonce_set ()</title>
<indexterm zone="shishi-kdcreq-nonce-set"><primary>shishi_kdcreq_nonce_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_nonce_set             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="uint32-t">uint32_t</link> nonce);</programlisting>
<para>
Store nonce number field in KDC-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to set client name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>nonce</parameter>&nbsp;:</term>
<listitem><simpara> integer nonce to store in KDC-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-client" role="function">
<title>shishi_kdcreq_client ()</title>
<indexterm zone="shishi-kdcreq-client"><primary>shishi_kdcreq_client</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_client                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);</programlisting>
<para>
Represent client principal name in KDC-REQ as zero-terminated
string.  The string is allocate by this function, and it is the
responsibility of the caller to deallocate it.  Note that the
output length <parameter>clientlen</parameter> does not include the terminating zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get client name from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>clientlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>clientlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>client</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>client</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-set-cname" role="function">
<title>shishi_kdcreq_set_cname ()</title>
<indexterm zone="shishi-kdcreq-set-cname"><primary>shishi_kdcreq_set_cname</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_set_cname             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *principal);</programlisting>
<para>
Set the client name field in the KDC-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to set client name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name_type</parameter>&nbsp;:</term>
<listitem><simpara> type of principial, see Shishi_name_type, usually
            SHISHI_NT_UNKNOWN.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>principal</parameter>&nbsp;:</term>
<listitem><simpara> input array with principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-server" role="function">
<title>shishi_kdcreq_server ()</title>
<indexterm zone="shishi-kdcreq-server"><primary>shishi_kdcreq_server</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_server                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="char">char</link> **server,
                                                         <link linkend="size-t">size_t</link> *serverlen);</programlisting>
<para>
Represent server principal name in KDC-REQ as zero-terminated
string.  The string is allocate by this function, and it is the
responsibility of the caller to deallocate it.  Note that the
output length <parameter>serverlen</parameter> does not include the terminating zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get server name from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>serverlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>serverlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>server</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>server</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-set-sname" role="function">
<title>shishi_kdcreq_set_sname ()</title>
<indexterm zone="shishi-kdcreq-set-sname"><primary>shishi_kdcreq_set_sname</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_set_sname             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *sname[]);</programlisting>
<para>
Set the server name field in the KDC-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to set server name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name_type</parameter>&nbsp;:</term>
<listitem><simpara> type of principial, see Shishi_name_type, usually
            SHISHI_NT_UNKNOWN.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sname</parameter>&nbsp;:</term>
<listitem><simpara> input array with principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-realm" role="function">
<title>shishi_kdcreq_realm ()</title>
<indexterm zone="shishi-kdcreq-realm"><primary>shishi_kdcreq_realm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_realm                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="char">char</link> **realm,
                                                         <link linkend="size-t">size_t</link> *realmlen);</programlisting>
<para>
Get realm field in KDC-REQ as zero-terminated string.  The string
is allocate by this function, and it is the responsibility of the
caller to deallocate it.  Note that the output length <parameter>realmlen</parameter>
does not include the terminating zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get client name from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  realm.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>realmlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realmlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>realm</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>realmlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-realm-get" role="function">
<title>shishi_kdcreq_realm_get ()</title>
<indexterm zone="shishi-kdcreq-realm-get"><primary>shishi_kdcreq_realm_get</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_realm_get             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="char">char</link> **realm,
                                                         <link linkend="size-t">size_t</link> *realmlen);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realmlen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-set-realm" role="function">
<title>shishi_kdcreq_set_realm ()</title>
<indexterm zone="shishi-kdcreq-set-realm"><primary>shishi_kdcreq_set_realm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_set_realm             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         const <link linkend="char">char</link> *realm);</programlisting>
<para>
Set the realm field in the KDC-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to set realm field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> input array with name of realm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-set-server" role="function">
<title>shishi_kdcreq_set_server ()</title>
<indexterm zone="shishi-kdcreq-set-server"><primary>shishi_kdcreq_set_server</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_set_server            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> req,
                                                         const <link linkend="char">char</link> *service);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>req</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>service</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-set-realmserver" role="function">
<title>shishi_kdcreq_set_realmserver ()</title>
<indexterm zone="shishi-kdcreq-set-realmserver"><primary>shishi_kdcreq_set_realmserver</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_set_realmserver       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> req,
                                                         <link linkend="char">char</link> *realm,
                                                         <link linkend="char">char</link> *service);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>req</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>service</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-till" role="function">
<title>shishi_kdcreq_till ()</title>
<indexterm zone="shishi-kdcreq-till"><primary>shishi_kdcreq_till</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_till                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="char">char</link> **till,
                                                         <link linkend="size-t">size_t</link> *tilllen);</programlisting>
<para>
Get "till" field (i.e. "endtime") in KDC-REQ, as zero-terminated
string.  The string is typically 15 characters long.  The string is
allocated by this function, and it is the responsibility of the
caller to deallocate it.  Note that the output length <parameter>realmlen</parameter>
does not include the terminating zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get client name from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>till</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  "till" field with generalized time.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only
  populate <parameter>realmlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tilllen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>till</parameter> on output, excluding
  terminating zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>tilllen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-tillc" role="function">
<title>shishi_kdcreq_tillc ()</title>
<indexterm zone="shishi-kdcreq-tillc"><primary>shishi_kdcreq_tillc</primary></indexterm><programlisting><link linkend="time-t">time_t</link>              shishi_kdcreq_tillc                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Extract C time corresponding to the "till" field.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get till field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns C time interpretation of the "till" field in
KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-etype" role="function">
<title>shishi_kdcreq_etype ()</title>
<indexterm zone="shishi-kdcreq-etype"><primary>shishi_kdcreq_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_etype                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="int32-t">int32_t</link> *etype,
                                                         <link linkend="int">int</link> netype);</programlisting>
<para>
Return the netype:th encryption type from KDC-REQ.  The first etype
is number 1.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get etype field from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> output encryption type.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>netype</parameter>&nbsp;:</term>
<listitem><simpara> element number to return.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff etype successful set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-set-etype" role="function">
<title>shishi_kdcreq_set_etype ()</title>
<indexterm zone="shishi-kdcreq-set-etype"><primary>shishi_kdcreq_set_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_set_etype             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="int32-t">int32_t</link> *etype,
                                                         <link linkend="int">int</link> netype);</programlisting>
<para>
Set the list of supported or wanted encryption types in the
request.  The list should be sorted in priority order.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to set etype field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> input array with encryption types.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>netype</parameter>&nbsp;:</term>
<listitem><simpara> number of elements in input array with encryption types.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-options" role="function">
<title>shishi_kdcreq_options ()</title>
<indexterm zone="shishi-kdcreq-options"><primary>shishi_kdcreq_options</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_options               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="uint32-t">uint32_t</link> *flags);</programlisting>
<para>
Extract KDC-Options from KDC-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> pointer to output integer with flags.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-forwardable-p" role="function">
<title>shishi_kdcreq_forwardable_p ()</title>
<indexterm zone="shishi-kdcreq-forwardable-p"><primary>shishi_kdcreq_forwardable_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_forwardable_p         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Determine if KDC-Option forwardable flag is set.
</para>
<para>
The FORWARDABLE option indicates that the ticket to be issued is to
have its forwardable flag set. It may only be set on the initial
request, or in a subsequent request if the ticket-granting ticket
on which it is based is also forwardable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff forwardable flag is set in KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-forwarded-p" role="function">
<title>shishi_kdcreq_forwarded_p ()</title>
<indexterm zone="shishi-kdcreq-forwarded-p"><primary>shishi_kdcreq_forwarded_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_forwarded_p           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Determine if KDC-Option forwarded flag is set.
</para>
<para>
The FORWARDED option is only specified in a request to the
ticket-granting server and will only be honored if the
ticket-granting ticket in the request has its FORWARDABLE bit
set. This option indicates that this is a request for
forwarding. The address(es) of the host from which the resulting
ticket is to be valid are included in the addresses field of the
request.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff forwarded flag is set in KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-proxiable-p" role="function">
<title>shishi_kdcreq_proxiable_p ()</title>
<indexterm zone="shishi-kdcreq-proxiable-p"><primary>shishi_kdcreq_proxiable_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_proxiable_p           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Determine if KDC-Option proxiable flag is set.
</para>
<para>
The PROXIABLE option indicates that the ticket to be issued is to
have its proxiable flag set. It may only be set on the initial
request, or in a subsequent request if the ticket-granting ticket
on which it is based is also proxiable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff proxiable flag is set in KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-proxy-p" role="function">
<title>shishi_kdcreq_proxy_p ()</title>
<indexterm zone="shishi-kdcreq-proxy-p"><primary>shishi_kdcreq_proxy_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_proxy_p               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Determine if KDC-Option proxy flag is set.
</para>
<para>
The PROXY option indicates that this is a request for a proxy. This
option will only be honored if the ticket-granting ticket in the
request has its PROXIABLE bit set.  The address(es) of the host
from which the resulting ticket is to be valid are included in the
addresses field of the request.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff proxy flag is set in KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-allow-postdate-p" role="function">
<title>shishi_kdcreq_allow_postdate_p ()</title>
<indexterm zone="shishi-kdcreq-allow-postdate-p"><primary>shishi_kdcreq_allow_postdate_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_allow_postdate_p      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Determine if KDC-Option allow-postdate flag is set.
</para>
<para>
The ALLOW-POSTDATE option indicates that the ticket to be issued is
to have its MAY-POSTDATE flag set. It may only be set on the
initial request, or in a subsequent request if the ticket-granting
ticket on which it is based also has its MAY-POSTDATE flag set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff allow-postdate flag is set in KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-postdated-p" role="function">
<title>shishi_kdcreq_postdated_p ()</title>
<indexterm zone="shishi-kdcreq-postdated-p"><primary>shishi_kdcreq_postdated_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_postdated_p           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Determine if KDC-Option postdated flag is set.
</para>
<para>
The POSTDATED option indicates that this is a request for a
postdated ticket. This option will only be honored if the
ticket-granting ticket on which it is based has its MAY-POSTDATE
flag set. The resulting ticket will also have its INVALID flag set,
and that flag may be reset by a subsequent request to the KDC after
the starttime in the ticket has been reached.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff postdated flag is set in KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-renewable-p" role="function">
<title>shishi_kdcreq_renewable_p ()</title>
<indexterm zone="shishi-kdcreq-renewable-p"><primary>shishi_kdcreq_renewable_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_renewable_p           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Determine if KDC-Option renewable flag is set.
</para>
<para>
The RENEWABLE option indicates that the ticket to be issued is to
have its RENEWABLE flag set. It may only be set on the initial
request, or when the ticket-granting ticket on which the request is
based is also renewable. If this option is requested, then the
rtime field in the request contains the desired absolute expiration
time for the ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff renewable flag is set in KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-disable-transited-check-p" role="function">
<title>shishi_kdcreq_disable_transited_check_p ()</title>
<indexterm zone="shishi-kdcreq-disable-transited-check-p"><primary>shishi_kdcreq_disable_transited_check_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_disable_transited_check_p
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Determine if KDC-Option disable-transited-check flag is set.
</para>
<para>
By default the KDC will check the transited field of a
ticket-granting-ticket against the policy of the local realm before
it will issue derivative tickets based on the ticket-granting
ticket. If this flag is set in the request, checking of the
transited field is disabled. Tickets issued without the performance
of this check will be noted by the reset (0) value of the
TRANSITED-POLICY-CHECKED flag, indicating to the application server
that the tranisted field must be checked locally. KDCs are
encouraged but not required to honor the DISABLE-TRANSITED-CHECK
option.
</para>
<para>
This flag is new since RFC 1510</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff disable-transited-check flag is set
  in KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-renewable-ok-p" role="function">
<title>shishi_kdcreq_renewable_ok_p ()</title>
<indexterm zone="shishi-kdcreq-renewable-ok-p"><primary>shishi_kdcreq_renewable_ok_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_renewable_ok_p        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Determine if KDC-Option renewable-ok flag is set.
</para>
<para>
The RENEWABLE-OK option indicates that a renewable ticket will be
acceptable if a ticket with the requested life cannot otherwise be
provided. If a ticket with the requested life cannot be provided,
then a renewable ticket may be issued with a renew-till equal to
the requested endtime. The value of the renew-till field may still
be limited by local limits, or limits selected by the individual
principal or server.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff renewable-ok flag is set in KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-enc-tkt-in-skey-p" role="function">
<title>shishi_kdcreq_enc_tkt_in_skey_p ()</title>
<indexterm zone="shishi-kdcreq-enc-tkt-in-skey-p"><primary>shishi_kdcreq_enc_tkt_in_skey_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_enc_tkt_in_skey_p     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Determine if KDC-Option enc-tkt-in-skey flag is set.
</para>
<para>
This option is used only by the ticket-granting service. The
ENC-TKT-IN-SKEY option indicates that the ticket for the end server
is to be encrypted in the session key from the additional
ticket-granting ticket provided.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff enc-tkt-in-skey flag is set in KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-renew-p" role="function">
<title>shishi_kdcreq_renew_p ()</title>
<indexterm zone="shishi-kdcreq-renew-p"><primary>shishi_kdcreq_renew_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_renew_p               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Determine if KDC-Option renew flag is set.
</para>
<para>
This option is used only by the ticket-granting service. The RENEW
option indicates that the present request is for a renewal. The
ticket provided is encrypted in the secret key for the server on
which it is valid. This option will only be honored if the ticket
to be renewed has its RENEWABLE flag set and if the time in its
renew-till field has not passed. The ticket to be renewed is passed
in the padata field as part of the authentication header.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff renew flag is set in KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-validate-p" role="function">
<title>shishi_kdcreq_validate_p ()</title>
<indexterm zone="shishi-kdcreq-validate-p"><primary>shishi_kdcreq_validate_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_validate_p            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Determine if KDC-Option validate flag is set.
</para>
<para>
This option is used only by the ticket-granting service. The
VALIDATE option indicates that the request is to validate a
postdated ticket. It will only be honored if the ticket presented
is postdated, presently has its INVALID flag set, and would be
otherwise usable at this time. A ticket cannot be validated before
its starttime. The ticket presented for validation is encrypted in
the key of the server for which it is valid and is passed in the
padata field as part of the authentication header.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to get kdc-options field from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns non-0 iff validate flag is set in KDC-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-options-set" role="function">
<title>shishi_kdcreq_options_set ()</title>
<indexterm zone="shishi-kdcreq-options-set"><primary>shishi_kdcreq_options_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_options_set           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="uint32-t">uint32_t</link> options);</programlisting>
<para>
Set options in KDC-REQ.  Note that this reset any already existing
flags.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to set etype field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> integer with flags to store in KDC-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-options-add" role="function">
<title>shishi_kdcreq_options_add ()</title>
<indexterm zone="shishi-kdcreq-options-add"><primary>shishi_kdcreq_options_add</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_options_add           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="uint32-t">uint32_t</link> option);</programlisting>
<para>
Add KDC-Option to KDC-REQ.  This preserves all existing options.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ variable to set etype field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>option</parameter>&nbsp;:</term>
<listitem><simpara> integer with options to add in KDC-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-clear-padata" role="function">
<title>shishi_kdcreq_clear_padata ()</title>
<indexterm zone="shishi-kdcreq-clear-padata"><primary>shishi_kdcreq_clear_padata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_clear_padata          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>
Remove the padata field from KDC-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ to remove PA-DATA from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-get-padata" role="function">
<title>shishi_kdcreq_get_padata ()</title>
<indexterm zone="shishi-kdcreq-get-padata"><primary>shishi_kdcreq_get_padata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_get_padata            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-padata-type">Shishi_padata_type</link> padatatype,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Get pre authentication data (PA-DATA) from KDC-REQ.  Pre
authentication data is used to pass various information to KDC,
such as in case of a SHISHI_PA_TGS_REQ padatatype the AP-REQ that
authenticates the user to get the ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ to get PA-DATA from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>padatatype</parameter>&nbsp;:</term>
<listitem><simpara> type of PA-DATA, see Shishi_padata_type.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated PA-DATA value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> size of output array with PA-DATA value.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-get-padata-tgs" role="function">
<title>shishi_kdcreq_get_padata_tgs ()</title>
<indexterm zone="shishi-kdcreq-get-padata-tgs"><primary>shishi_kdcreq_get_padata_tgs</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_get_padata_tgs        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *apreq);</programlisting>
<para>
Extract TGS pre-authentication data from KDC-REQ.  The data is an
AP-REQ that authenticates the request.  This function call
<link linkend="shishi-kdcreq-get-padata"><function>shishi_kdcreq_get_padata()</function></link> with a SHISHI_PA_TGS_REQ padatatype and
DER decode the result (if any).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ to get PA-TGS-REQ from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> Output variable with newly allocated AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-add-padata" role="function">
<title>shishi_kdcreq_add_padata ()</title>
<indexterm zone="shishi-kdcreq-add-padata"><primary>shishi_kdcreq_add_padata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_add_padata            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="int">int</link> padatatype,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> datalen);</programlisting>
<para>
Add new pre authentication data (PA-DATA) to KDC-REQ.  This is used
to pass various information to KDC, such as in case of a
SHISHI_PA_TGS_REQ padatatype the AP-REQ that authenticates the user
to get the ticket.  (But also see <link linkend="shishi-kdcreq-add-padata-tgs"><function>shishi_kdcreq_add_padata_tgs()</function></link>
which takes an AP-REQ directly.)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ to add PA-DATA to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>padatatype</parameter>&nbsp;:</term>
<listitem><simpara> type of PA-DATA, see Shishi_padata_type.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> input array with PA-DATA value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>datalen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with PA-DATA value.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-add-padata-tgs" role="function">
<title>shishi_kdcreq_add_padata_tgs ()</title>
<indexterm zone="shishi-kdcreq-add-padata-tgs"><primary>shishi_kdcreq_add_padata_tgs</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_add_padata_tgs        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq);</programlisting>
<para>
Add TGS pre-authentication data to KDC-REQ.  The data is an AP-REQ
that authenticates the request.  This functions simply DER encodes
the AP-REQ and calls <link linkend="shishi-kdcreq-add-padata"><function>shishi_kdcreq_add_padata()</function></link> with a
SHISHI_PA_TGS_REQ padatatype.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ to add PA-DATA to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ to add as PA-DATA.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-add-padata-preauth" role="function">
<title>shishi_kdcreq_add_padata_preauth ()</title>
<indexterm zone="shishi-kdcreq-add-padata-preauth"><primary>shishi_kdcreq_add_padata_preauth</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_add_padata_preauth    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Add pre-authentication data to KDC-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ to add pre-authentication data to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> Key used to encrypt pre-auth data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-build" role="function">
<title>shishi_kdcreq_build ()</title>
<indexterm zone="shishi-kdcreq-build"><primary>shishi_kdcreq_build</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_build                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-derive-salt" role="function">
<title>shishi_as_derive_salt ()</title>
<indexterm zone="shishi-as-derive-salt"><primary>shishi_as_derive_salt</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_derive_salt               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asrep,
                                                         <link linkend="char">char</link> **salt,
                                                         <link linkend="size-t">size_t</link> *saltlen);</programlisting>
<para>
Derive the salt that should be used when deriving a key via
<link linkend="shishi-string-to-key"><function>shishi_string_to_key()</function></link> for an AS exchange.  Currently this searches
for PA-DATA of type SHISHI_PA_PW_SALT in the AS-REP and returns it
if found, otherwise the salt is derived from the client name and
realm in AS-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asreq</parameter>&nbsp;:</term>
<listitem><simpara> input AS-REQ variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asrep</parameter>&nbsp;:</term>
<listitem><simpara> input AS-REP variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>salt</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated output array with salt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>saltlen</parameter>&nbsp;:</term>
<listitem><simpara> holds actual size of output array with salt.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgs-process" role="function">
<title>shishi_tgs_process ()</title>
<indexterm zone="shishi-tgs-process"><primary>shishi_tgs_process</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_tgs_process                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> tgsreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> tgsrep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> oldenckdcreppart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *enckdcreppart);</programlisting>
<para>
Process a TGS client exchange and output decrypted EncKDCRepPart
which holds details for the new ticket received.  This function
simply derives the encryption key from the ticket used to construct
the TGS request and calls <link linkend="shishi-kdc-process"><function>shishi_kdc_process()</function></link>, which see.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tgsreq</parameter>&nbsp;:</term>
<listitem><simpara> input variable that holds the sent KDC-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tgsrep</parameter>&nbsp;:</term>
<listitem><simpara> input variable that holds the received KDC-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> input variable with Authenticator from AP-REQ in KDC-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>oldenckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> input variable with EncKDCRepPart used in request.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> output variable that holds new EncKDCRepPart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff the TGS client exchange was
successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-process" role="function">
<title>shishi_as_process ()</title>
<indexterm zone="shishi-as-process"><primary>shishi_as_process</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_process                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asrep,
                                                         const <link linkend="char">char</link> *string,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *enckdcreppart);</programlisting>
<para>
Process an AS client exchange and output decrypted EncKDCRepPart
which holds details for the new ticket received.  This function
simply derives the encryption key from the password and calls
<link linkend="shishi-kdc-process"><function>shishi_kdc_process()</function></link>, which see.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asreq</parameter>&nbsp;:</term>
<listitem><simpara> input variable that holds the sent KDC-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asrep</parameter>&nbsp;:</term>
<listitem><simpara> input variable that holds the received KDC-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>string</parameter>&nbsp;:</term>
<listitem><simpara> input variable with zero terminated password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> output variable that holds new EncKDCRepPart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff the AS client exchange was
successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdc-process" role="function">
<title>shishi_kdc_process ()</title>
<indexterm zone="shishi-kdc-process"><primary>shishi_kdc_process</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdc_process                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *enckdcreppart);</programlisting>
<para>
Process a KDC client exchange and output decrypted EncKDCRepPart
which holds details for the new ticket received.  Use
<link linkend="shishi-kdcrep-get-ticket"><function>shishi_kdcrep_get_ticket()</function></link> to extract the ticket.  This function
verifies the various conditions that must hold if the response is
to be considered valid, specifically it compares nonces
(<link linkend="shishi-check-nonces"><function>shishi_check_nonces()</function></link>) and if the exchange was a AS exchange, it
also compares cname and crealm (<link linkend="shishi-check-cname"><function>shishi_check_cname()</function></link> and
<link linkend="shishi-check-crealm"><function>shishi_check_crealm()</function></link>).
</para>
<para>
Usually the <link linkend="shishi-as-process"><function>shishi_as_process()</function></link> and <link linkend="shishi-tgs-process"><function>shishi_tgs_process()</function></link> functions
should be used instead, since they simplify the decryption key
computation.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> input variable that holds the sent KDC-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> input variable that holds the received KDC-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> input array with key to decrypt encrypted part of KDC-REP with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> kereros key usage value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> output variable that holds new EncKDCRepPart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff the KDC client exchange was
successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-sendrecv" role="function">
<title>shishi_kdcreq_sendrecv ()</title>
<indexterm zone="shishi-kdcreq-sendrecv"><primary>shishi_kdcreq_sendrecv</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_sendrecv              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcrep);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcreq-sendrecv-hint" role="function">
<title>shishi_kdcreq_sendrecv_hint ()</title>
<indexterm zone="shishi-kdcreq-sendrecv-hint"><primary>shishi_kdcreq_sendrecv_hint</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcreq_sendrecv_hint         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcrep,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hint</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdc-copy-crealm" role="function">
<title>shishi_kdc_copy_crealm ()</title>
<indexterm zone="shishi-kdc-copy-crealm"><primary>shishi_kdc_copy_crealm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdc_copy_crealm              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);</programlisting>
<para>
Set crealm in KDC-REP to value in EncTicketPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REP to read crealm from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> EncTicketPart to set crealm in.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-check-crealm" role="function">
<title>shishi_as_check_crealm ()</title>
<indexterm zone="shishi-as-check-crealm"><primary>shishi_as_check_crealm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_check_crealm              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asrep);</programlisting>
<para>
Verify that AS-REQ.req-body.realm and AS-REP.crealm fields matches.
This is one of the steps that has to be performed when processing a
AS-REQ and AS-REP exchange, see <link linkend="shishi-kdc-process"><function>shishi_kdc_process()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asreq</parameter>&nbsp;:</term>
<listitem><simpara> AS-REQ to compare realm field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asrep</parameter>&nbsp;:</term>
<listitem><simpara> AS-REP to compare realm field in.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful,
SHISHI_REALM_MISMATCH if the values differ, or an error code.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdc-copy-cname" role="function">
<title>shishi_kdc_copy_cname ()</title>
<indexterm zone="shishi-kdc-copy-cname"><primary>shishi_kdc_copy_cname</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdc_copy_cname               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);</programlisting>
<para>
Set cname in KDC-REP to value in EncTicketPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ to read cname from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> EncTicketPart to set cname in.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-as-check-cname" role="function">
<title>shishi_as_check_cname ()</title>
<indexterm zone="shishi-as-check-cname"><primary>shishi_as_check_cname</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_as_check_cname               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asrep);</programlisting>
<para>
Verify that AS-REQ.req-body.realm and AS-REP.crealm fields matches.
This is one of the steps that has to be performed when processing a
AS-REQ and AS-REP exchange, see <link linkend="shishi-kdc-process"><function>shishi_kdc_process()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asreq</parameter>&nbsp;:</term>
<listitem><simpara> AS-REQ to compare client name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asrep</parameter>&nbsp;:</term>
<listitem><simpara> AS-REP to compare client name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful,
SHISHI_CNAME_MISMATCH if the values differ, or an error code.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdc-copy-nonce" role="function">
<title>shishi_kdc_copy_nonce ()</title>
<indexterm zone="shishi-kdc-copy-nonce"><primary>shishi_kdc_copy_nonce</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdc_copy_nonce               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart);</programlisting>
<para>
Set nonce in EncKDCRepPart to value in KDC-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ to read nonce from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncKDCRepPart to set nonce in.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdc-check-nonce" role="function">
<title>shishi_kdc_check_nonce ()</title>
<indexterm zone="shishi-kdc-check-nonce"><primary>shishi_kdc_check_nonce</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdc_check_nonce              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart);</programlisting>
<para>
Verify that KDC-REQ.req-body.nonce and EncKDCRepPart.nonce fields
matches.  This is one of the steps that has to be performed when
processing a KDC-REQ and KDC-REP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcreq</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REQ to compare nonce field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> Encrypted KDC-REP part to compare nonce field in.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful,
SHISHI_NONCE_LENGTH_MISMATCH if the nonces have different lengths
(usually indicates that buggy server truncated nonce to 4 bytes),
SHISHI_NONCE_MISMATCH if the values differ, or an error code.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asrep" role="function">
<title>shishi_asrep ()</title>
<indexterm zone="shishi-asrep"><primary>shishi_asrep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asrep                        (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
This function creates a new AS-REP, populated with some default
values.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the AS-REP or NULL on failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-tgsrep" role="function">
<title>shishi_tgsrep ()</title>
<indexterm zone="shishi-tgsrep"><primary>shishi_tgsrep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_tgsrep                       (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
This function creates a new TGS-REP, populated with some default
values.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the TGS-REP or NULL on failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-save" role="function">
<title>shishi_kdcrep_save ()</title>
<indexterm zone="shishi-kdcrep-save"><primary>shishi_kdcrep_save</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_save                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep);</programlisting>
<para>
Print  DER encoding of KDC-REP to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REP to save.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-print" role="function">
<title>shishi_kdcrep_print ()</title>
<indexterm zone="shishi-kdcrep-print"><primary>shishi_kdcrep_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_print                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep);</programlisting>
<para>
Print ASCII armored DER encoding of KDC-REP to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REP to print.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-to-file" role="function">
<title>shishi_kdcrep_to_file ()</title>
<indexterm zone="shishi-kdcrep-to-file"><primary>shishi_kdcrep_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_to_file               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Write KDC-REP to file in specified TYPE.  The file will be truncated
if it exists.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REP to save.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be written,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to write to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-parse" role="function">
<title>shishi_kdcrep_parse ()</title>
<indexterm zone="shishi-kdcrep-parse"><primary>shishi_kdcrep_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_parse                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcrep);</programlisting>
<para>
Read ASCII armored DER encoded KDC-REP from file and populate given
variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated KDC-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-read" role="function">
<title>shishi_kdcrep_read ()</title>
<indexterm zone="shishi-kdcrep-read"><primary>shishi_kdcrep_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_read                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcrep);</programlisting>
<para>
Read DER encoded KDC-REP from file and populate given variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated KDC-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-from-file" role="function">
<title>shishi_kdcrep_from_file ()</title>
<indexterm zone="shishi-kdcrep-from-file"><primary>shishi_kdcrep_from_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_from_file             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *kdcrep,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Read KDC-REP from file in specified TYPE.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated KDC-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be read,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to read from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-clear-padata" role="function">
<title>shishi_kdcrep_clear_padata ()</title>
<indexterm zone="shishi-kdcrep-clear-padata"><primary>shishi_kdcrep_clear_padata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_clear_padata          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep);</programlisting>
<para>
Remove the padata field from KDC-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REP to remove PA-DATA from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-get-enc-part-etype" role="function">
<title>shishi_kdcrep_get_enc_part_etype ()</title>
<indexterm zone="shishi-kdcrep-get-enc-part-etype"><primary>shishi_kdcrep_get_enc_part_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_get_enc_part_etype    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="int32-t">int32_t</link> *etype);</programlisting>
<para>
Extract KDC-REP.enc-part.etype.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REP variable to get value from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> output variable that holds the value.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-add-enc-part" role="function">
<title>shishi_kdcrep_add_enc_part ()</title>
<indexterm zone="shishi-kdcrep-add-enc-part"><primary>shishi_kdcrep_add_enc_part</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_add_enc_part          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart);</programlisting>
<para>
Encrypts DER encoded EncKDCRepPart using key and stores it in the
KDC-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REP to add enc-part field to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key used to encrypt enc-part.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> key usage to use, normally SHISHI_KEYUSAGE_ENCASREPPART,
           SHISHI_KEYUSAGE_ENCTGSREPPART_SESSION_KEY or
           SHISHI_KEYUSAGE_ENCTGSREPPART_AUTHENTICATOR_KEY.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncKDCRepPart to add.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-get-ticket" role="function">
<title>shishi_kdcrep_get_ticket ()</title>
<indexterm zone="shishi-kdcrep-get-ticket"><primary>shishi_kdcrep_get_ticket</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_get_ticket            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *ticket);</programlisting>
<para>
Extract ticket from KDC-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REP variable to get ticket from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> output variable to hold extracted ticket.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-set-ticket" role="function">
<title>shishi_kdcrep_set_ticket ()</title>
<indexterm zone="shishi-kdcrep-set-ticket"><primary>shishi_kdcrep_set_ticket</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_set_ticket            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket);</programlisting>
<para>
Copy ticket into KDC-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REP to add ticket field to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> input ticket to copy into KDC-REP ticket field.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-crealm-set" role="function">
<title>shishi_kdcrep_crealm_set ()</title>
<indexterm zone="shishi-kdcrep-crealm-set"><primary>shishi_kdcrep_crealm_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_crealm_set            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         const <link linkend="char">char</link> *crealm);</programlisting>
<para>
Set the client realm field in the KDC-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> Kdcrep variable to set realm field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>crealm</parameter>&nbsp;:</term>
<listitem><simpara> input array with name of realm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-cname-set" role="function">
<title>shishi_kdcrep_cname_set ()</title>
<indexterm zone="shishi-kdcrep-cname-set"><primary>shishi_kdcrep_cname_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_cname_set             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *cname[]);</programlisting>
<para>
Set the server name field in the KDC-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> Kdcrep variable to set server name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name_type</parameter>&nbsp;:</term>
<listitem><simpara> type of principial, see Shishi_name_type, usually
            SHISHI_NT_UNKNOWN.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cname</parameter>&nbsp;:</term>
<listitem><simpara> input array with principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-client-set" role="function">
<title>shishi_kdcrep_client_set ()</title>
<indexterm zone="shishi-kdcrep-client-set"><primary>shishi_kdcrep_client_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_client_set            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         const <link linkend="char">char</link> *client);</programlisting>
<para>
Set the client name field in the KDC-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> Kdcrep variable to set server name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> zero-terminated string with principal name on RFC 1964 form.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-crealmserver-set" role="function">
<title>shishi_kdcrep_crealmserver_set ()</title>
<indexterm zone="shishi-kdcrep-crealmserver-set"><primary>shishi_kdcrep_crealmserver_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_crealmserver_set      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         const <link linkend="char">char</link> *crealm,
                                                         const <link linkend="char">char</link> *client);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>crealm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-set-enc-part" role="function">
<title>shishi_kdcrep_set_enc_part ()</title>
<indexterm zone="shishi-kdcrep-set-enc-part"><primary>shishi_kdcrep_set_enc_part</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_set_enc_part          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         <link linkend="uint32-t">uint32_t</link> kvno,
                                                         const <link linkend="char">char</link> *buf,
                                                         <link linkend="size-t">size_t</link> buflen);</programlisting>
<para>
Set the encrypted enc-part field in the KDC-REP.  The encrypted
data is usually created by calling <link linkend="shishi-encrypt"><function>shishi_encrypt()</function></link> on the DER
encoded enc-part.  To save time, you may want to use
<link linkend="shishi-kdcrep-add-enc-part"><function>shishi_kdcrep_add_enc_part()</function></link> instead, which calculates the
encrypted data and calls this function in one step.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara> KDC-REP to add enc-part field to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> encryption type used to encrypt enc-part.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kvno</parameter>&nbsp;:</term>
<listitem><simpara> key version number.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara> input array with encrypted enc-part.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buflen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with encrypted enc-part.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdcrep-decrypt" role="function">
<title>shishi_kdcrep_decrypt ()</title>
<indexterm zone="shishi-kdcrep-decrypt"><primary>shishi_kdcrep_decrypt</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdcrep_decrypt               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> kdcrep,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *enckdcreppart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kdcrep</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart" role="function">
<title>shishi_enckdcreppart ()</title>
<indexterm zone="shishi-enckdcreppart"><primary>shishi_enckdcreppart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_enckdcreppart                (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encasreppart" role="function">
<title>shishi_encasreppart ()</title>
<indexterm zone="shishi-encasreppart"><primary>shishi_encasreppart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_encasreppart                 (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-get-key" role="function">
<title>shishi_enckdcreppart_get_key ()</title>
<indexterm zone="shishi-enckdcreppart-get-key"><primary>shishi_enckdcreppart_get_key</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_get_key        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);</programlisting>
<para>
Extract the key to use with the ticket sent in the KDC-REP
associated with the EncKDCRepPart input variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> input EncKDCRepPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated encryption key handle.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-key-set" role="function">
<title>shishi_enckdcreppart_key_set ()</title>
<indexterm zone="shishi-enckdcreppart-key-set"><primary>shishi_enckdcreppart_key_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_key_set        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Set the EncKDCRepPart.key field to key type and value of supplied
key.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> input EncKDCRepPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key handle with information to store in enckdcreppart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-nonce-set" role="function">
<title>shishi_enckdcreppart_nonce_set ()</title>
<indexterm zone="shishi-enckdcreppart-nonce-set"><primary>shishi_enckdcreppart_nonce_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_nonce_set      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="uint32-t">uint32_t</link> nonce);</programlisting>
<para>
Set the EncKDCRepPart.nonce field.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> input EncKDCRepPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>nonce</parameter>&nbsp;:</term>
<listitem><simpara> nonce to set in EncKDCRepPart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-flags-set" role="function">
<title>shishi_enckdcreppart_flags_set ()</title>
<indexterm zone="shishi-enckdcreppart-flags-set"><primary>shishi_enckdcreppart_flags_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_flags_set      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="int">int</link> flags);</programlisting>
<para>
Set the EncKDCRepPart.flags field.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> input EncKDCRepPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> flags to set in EncKDCRepPart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-authtime-set" role="function">
<title>shishi_enckdcreppart_authtime_set ()</title>
<indexterm zone="shishi-enckdcreppart-authtime-set"><primary>shishi_enckdcreppart_authtime_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_authtime_set   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *authtime);</programlisting>
<para>
Set the EncTicketPart.authtime to supplied value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> input EncKDCRepPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authtime</parameter>&nbsp;:</term>
<listitem><simpara> character buffer containing a generalized time string.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-starttime-set" role="function">
<title>shishi_enckdcreppart_starttime_set ()</title>
<indexterm zone="shishi-enckdcreppart-starttime-set"><primary>shishi_enckdcreppart_starttime_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_starttime_set  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *starttime);</programlisting>
<para>
Set the EncTicketPart.starttime to supplied value.  Use a NULL
value for <parameter>starttime</parameter> to remove the field.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> input EncKDCRepPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>starttime</parameter>&nbsp;:</term>
<listitem><simpara> character buffer containing a generalized time string.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-endtime-set" role="function">
<title>shishi_enckdcreppart_endtime_set ()</title>
<indexterm zone="shishi-enckdcreppart-endtime-set"><primary>shishi_enckdcreppart_endtime_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_endtime_set    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *endtime);</programlisting>
<para>
Set the EncTicketPart.endtime to supplied value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> input EncKDCRepPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>endtime</parameter>&nbsp;:</term>
<listitem><simpara> character buffer containing a generalized time string.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-renew-till-set" role="function">
<title>shishi_enckdcreppart_renew_till_set ()</title>
<indexterm zone="shishi-enckdcreppart-renew-till-set"><primary>shishi_enckdcreppart_renew_till_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_renew_till_set (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *renew_till);</programlisting>
<para>
Set the EncTicketPart.renew-till to supplied value.  Use a NULL
value for <parameter>renew_till</parameter> to remove the field.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> input EncKDCRepPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>renew_till</parameter>&nbsp;:</term>
<listitem><simpara> character buffer containing a generalized time string.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-srealm-set" role="function">
<title>shishi_enckdcreppart_srealm_set ()</title>
<indexterm zone="shishi-enckdcreppart-srealm-set"><primary>shishi_enckdcreppart_srealm_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_srealm_set     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *srealm);</programlisting>
<para>
Set the server realm field in the EncKDCRepPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncKDCRepPart variable to set realm field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>srealm</parameter>&nbsp;:</term>
<listitem><simpara> input array with name of realm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-sname-set" role="function">
<title>shishi_enckdcreppart_sname_set ()</title>
<indexterm zone="shishi-enckdcreppart-sname-set"><primary>shishi_enckdcreppart_sname_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_sname_set      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         <link linkend="char">char</link> *sname[]);</programlisting>
<para>
Set the server name field in the EncKDCRepPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncKDCRepPart variable to set server name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name_type</parameter>&nbsp;:</term>
<listitem><simpara> type of principial, see Shishi_name_type, usually
            SHISHI_NT_UNKNOWN.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sname</parameter>&nbsp;:</term>
<listitem><simpara> input array with principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-server-set" role="function">
<title>shishi_enckdcreppart_server_set ()</title>
<indexterm zone="shishi-enckdcreppart-server-set"><primary>shishi_enckdcreppart_server_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_server_set     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-srealmserver-set" role="function">
<title>shishi_enckdcreppart_srealmserver_set ()</title>
<indexterm zone="shishi-enckdcreppart-srealmserver-set"><primary>shishi_enckdcreppart_srealmserver_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_srealmserver_set
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         const <link linkend="char">char</link> *srealm,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>srealm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-enckdcreppart-populate-encticketpart" role="function">
<title>shishi_enckdcreppart_populate_encticketpart ()</title>
<indexterm zone="shishi-enckdcreppart-populate-encticketpart"><primary>shishi_enckdcreppart_populate_encticketpart</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_enckdcreppart_populate_encticketpart
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> enckdcreppart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);</programlisting>
<para>
Set the flags, authtime, starttime, endtime, renew-till and caddr
fields of the EncKDCRepPart to the corresponding values in the
EncTicketPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enckdcreppart</parameter>&nbsp;:</term>
<listitem><simpara> input EncKDCRepPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> input EncTicketPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror" role="function">
<title>shishi_krberror ()</title>
<indexterm zone="shishi-krberror"><primary>shishi_krberror</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_krberror                     (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
This function creates a new KRB-ERROR, populated with some default
values.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the KRB-ERROR or NULL on failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-print" role="function">
<title>shishi_krberror_print ()</title>
<indexterm zone="shishi-krberror-print"><primary>shishi_krberror_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_print               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Print ASCII armored DER encoding of KRB-ERROR to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> KRB-ERROR to print.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-save" role="function">
<title>shishi_krberror_save ()</title>
<indexterm zone="shishi-krberror-save"><primary>shishi_krberror_save</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_save                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Save DER encoding of KRB-ERROR to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> KRB-ERROR to save.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-to-file" role="function">
<title>shishi_krberror_to_file ()</title>
<indexterm zone="shishi-krberror-to-file"><primary>shishi_krberror_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_to_file             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Write KRB-ERROR to file in specified TYPE.  The file will be
truncated if it exists.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> KRB-ERROR to save.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be written,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to write to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-parse" role="function">
<title>shishi_krberror_parse ()</title>
<indexterm zone="shishi-krberror-parse"><primary>shishi_krberror_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_parse               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *krberror);</programlisting>
<para>
Read ASCII armored DER encoded KRB-ERROR from file and populate given
variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated KRB-ERROR.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-read" role="function">
<title>shishi_krberror_read ()</title>
<indexterm zone="shishi-krberror-read"><primary>shishi_krberror_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_read                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *krberror);</programlisting>
<para>
Read DER encoded KRB-ERROR from file and populate given variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated KRB-ERROR.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-from-file" role="function">
<title>shishi_krberror_from_file ()</title>
<indexterm zone="shishi-krberror-from-file"><primary>shishi_krberror_from_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_from_file           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *krberror,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Read KRB-ERROR from file in specified TYPE.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated KRB-ERROR.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be read,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to read from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-build" role="function">
<title>shishi_krberror_build ()</title>
<indexterm zone="shishi-krberror-build"><primary>shishi_krberror_build</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_build               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Finish KRB-ERROR, called before e.g. shishi_krberror_der.  This
function removes empty but OPTIONAL fields (such as cname), and</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-der" role="function">
<title>shishi_krberror_der ()</title>
<indexterm zone="shishi-krberror-der"><primary>shishi_krberror_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_der                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
DER encode KRB-ERROR.  The caller must deallocate the OUT buffer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated DER encoding of KRB-ERROR.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> length of output array with DER encoding of KRB-ERROR.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-crealm" role="function">
<title>shishi_krberror_crealm ()</title>
<indexterm zone="shishi-krberror-crealm"><primary>shishi_krberror_crealm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_crealm              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **realm,
                                                         <link linkend="size-t">size_t</link> *realmlen);</programlisting>
<para>
Extract client realm from KRB-ERROR.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated name of realm in KRB-ERROR.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realmlen</parameter>&nbsp;:</term>
<listitem><simpara> size of output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-remove-crealm" role="function">
<title>shishi_krberror_remove_crealm ()</title>
<indexterm zone="shishi-krberror-remove-crealm"><primary>shishi_krberror_remove_crealm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_remove_crealm       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Remove client realm field in KRB-ERROR.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-set-crealm" role="function">
<title>shishi_krberror_set_crealm ()</title>
<indexterm zone="shishi-krberror-set-crealm"><primary>shishi_krberror_set_crealm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_set_crealm          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *crealm);</programlisting>
<para>
Set realm field in krberror to specified value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>crealm</parameter>&nbsp;:</term>
<listitem><simpara> input array with realm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-client" role="function">
<title>shishi_krberror_client ()</title>
<indexterm zone="shishi-krberror-client"><primary>shishi_krberror_client</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_client              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);</programlisting>
<para>
Return client principal name in KRB-ERROR.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>clientlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>clientlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>client</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>client</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-set-cname" role="function">
<title>shishi_krberror_set_cname ()</title>
<indexterm zone="shishi-krberror-set-cname"><primary>shishi_krberror_set_cname</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_set_cname           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *cname[]);</programlisting>
<para>
Set principal field in krberror to specified value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name_type</parameter>&nbsp;:</term>
<listitem><simpara> type of principial, see Shishi_name_type, usually
            SHISHI_NT_UNKNOWN.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cname</parameter>&nbsp;:</term>
<listitem><simpara> input array with principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-remove-cname" role="function">
<title>shishi_krberror_remove_cname ()</title>
<indexterm zone="shishi-krberror-remove-cname"><primary>shishi_krberror_remove_cname</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_remove_cname        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Remove client realm field in KRB-ERROR.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-client-set" role="function">
<title>shishi_krberror_client_set ()</title>
<indexterm zone="shishi-krberror-client-set"><primary>shishi_krberror_client_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_client_set          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *client);</programlisting>
<para>
Set the client name field in the Krberror.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> Krberror to set client name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> zero-terminated string with principal name on RFC 1964 form.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-realm" role="function">
<title>shishi_krberror_realm ()</title>
<indexterm zone="shishi-krberror-realm"><primary>shishi_krberror_realm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_realm               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **realm,
                                                         <link linkend="size-t">size_t</link> *realmlen);</programlisting>
<para>
Extract (server) realm from KRB-ERROR.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated name of realm in KRB-ERROR.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realmlen</parameter>&nbsp;:</term>
<listitem><simpara> size of output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-set-realm" role="function">
<title>shishi_krberror_set_realm ()</title>
<indexterm zone="shishi-krberror-set-realm"><primary>shishi_krberror_set_realm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_set_realm           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *realm);</programlisting>
<para>
Set (server) realm field in krberror to specified value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> input array with (server) realm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-server" role="function">
<title>shishi_krberror_server ()</title>
<indexterm zone="shishi-krberror-server"><primary>shishi_krberror_server</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_server              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **server,
                                                         <link linkend="size-t">size_t</link> *serverlen);</programlisting>
<para>
Return server principal name in KRB-ERROR.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  server name.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>serverlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>serverlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>server</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>server</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-remove-sname" role="function">
<title>shishi_krberror_remove_sname ()</title>
<indexterm zone="shishi-krberror-remove-sname"><primary>shishi_krberror_remove_sname</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_remove_sname        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Remove server name field in KRB-ERROR.  (Since it is not marked
OPTIONAL in the ASN.1 profile, what is done is to set the name-type
to UNKNOWN and make sure the name-string sequence is empty.)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> Krberror to set server name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-set-sname" role="function">
<title>shishi_krberror_set_sname ()</title>
<indexterm zone="shishi-krberror-set-sname"><primary>shishi_krberror_set_sname</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_set_sname           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *sname[]);</programlisting>
<para>
Set principal field in krberror to specified value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name_type</parameter>&nbsp;:</term>
<listitem><simpara> type of principial, see Shishi_name_type, usually
            SHISHI_NT_UNKNOWN.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>sname</parameter>&nbsp;:</term>
<listitem><simpara> input array with principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-server-set" role="function">
<title>shishi_krberror_server_set ()</title>
<indexterm zone="shishi-krberror-server-set"><primary>shishi_krberror_server_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_server_set          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>
Set the server name field in the Krberror.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> Krberror to set server name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> zero-terminated string with principal name on RFC 1964 form.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-ctime" role="function">
<title>shishi_krberror_ctime ()</title>
<indexterm zone="shishi-krberror-ctime"><primary>shishi_krberror_ctime</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_ctime               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **t);</programlisting>
<para>
Extract client time from KRB-ERROR.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> Krberror to set client name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated zero-terminated output array with client time.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-ctime-set" role="function">
<title>shishi_krberror_ctime_set ()</title>
<indexterm zone="shishi-krberror-ctime-set"><primary>shishi_krberror_ctime_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_ctime_set           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *t);</programlisting>
<para>
Store client time in Krberror.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> Krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> string with generalized time value to store in Krberror.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-remove-ctime" role="function">
<title>shishi_krberror_remove_ctime ()</title>
<indexterm zone="shishi-krberror-remove-ctime"><primary>shishi_krberror_remove_ctime</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_remove_ctime        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Remove client time field in Krberror.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> Krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-cusec" role="function">
<title>shishi_krberror_cusec ()</title>
<indexterm zone="shishi-krberror-cusec"><primary>shishi_krberror_cusec</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_cusec               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="uint32-t">uint32_t</link> *cusec);</programlisting>
<para>
Extract client microseconds field from Krberror.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> Krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cusec</parameter>&nbsp;:</term>
<listitem><simpara> output integer with client microseconds field.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-cusec-set" role="function">
<title>shishi_krberror_cusec_set ()</title>
<indexterm zone="shishi-krberror-cusec-set"><primary>shishi_krberror_cusec_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_cusec_set           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="uint32-t">uint32_t</link> cusec);</programlisting>
<para>
Set the cusec field in the Krberror.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cusec</parameter>&nbsp;:</term>
<listitem><simpara> client microseconds to set in krberror, 0-999999.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-remove-cusec" role="function">
<title>shishi_krberror_remove_cusec ()</title>
<indexterm zone="shishi-krberror-remove-cusec"><primary>shishi_krberror_remove_cusec</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_remove_cusec        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Remove client usec field in Krberror.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> Krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-stime" role="function">
<title>shishi_krberror_stime ()</title>
<indexterm zone="shishi-krberror-stime"><primary>shishi_krberror_stime</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_stime               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **t);</programlisting>
<para>
Extract server time from KRB-ERROR.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> Krberror to set client name field in.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated zero-terminated output array with server time.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-stime-set" role="function">
<title>shishi_krberror_stime_set ()</title>
<indexterm zone="shishi-krberror-stime-set"><primary>shishi_krberror_stime_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_stime_set           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *t);</programlisting>
<para>
Store server time in Krberror.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> Krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> string with generalized time value to store in Krberror.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-susec" role="function">
<title>shishi_krberror_susec ()</title>
<indexterm zone="shishi-krberror-susec"><primary>shishi_krberror_susec</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_susec               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="uint32-t">uint32_t</link> *susec);</programlisting>
<para>
Extract server microseconds field from Krberror.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> Krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>susec</parameter>&nbsp;:</term>
<listitem><simpara> output integer with server microseconds field.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-susec-set" role="function">
<title>shishi_krberror_susec_set ()</title>
<indexterm zone="shishi-krberror-susec-set"><primary>shishi_krberror_susec_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_susec_set           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="uint32-t">uint32_t</link> susec);</programlisting>
<para>
Set the susec field in the Krberror.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>susec</parameter>&nbsp;:</term>
<listitem><simpara> server microseconds to set in krberror, 0-999999.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-errorcode-set" role="function">
<title>shishi_krberror_errorcode_set ()</title>
<indexterm zone="shishi-krberror-errorcode-set"><primary>shishi_krberror_errorcode_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_errorcode_set       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="int">int</link> errorcode);</programlisting>
<para>
Set the error-code field to a new error code.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> KRB-ERROR structure with error code to set.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>errorcode</parameter>&nbsp;:</term>
<listitem><simpara> new error code to set in krberror.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-etext" role="function">
<title>shishi_krberror_etext ()</title>
<indexterm zone="shishi-krberror-etext"><primary>shishi_krberror_etext</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_etext               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **etext,
                                                         <link linkend="size-t">size_t</link> *etextlen);</programlisting>
<para>
Extract additional error text from server (possibly empty).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> KRB-ERROR structure with error code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etext</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated error text.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etextlen</parameter>&nbsp;:</term>
<listitem><simpara> output length of error text.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-set-etext" role="function">
<title>shishi_krberror_set_etext ()</title>
<indexterm zone="shishi-krberror-set-etext"><primary>shishi_krberror_set_etext</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_set_etext           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *etext);</programlisting>
<para>
Set error text (e-text) field in KRB-ERROR to specified value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etext</parameter>&nbsp;:</term>
<listitem><simpara> input array with error text to set.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-remove-etext" role="function">
<title>shishi_krberror_remove_etext ()</title>
<indexterm zone="shishi-krberror-remove-etext"><primary>shishi_krberror_remove_etext</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_remove_etext        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Remove error text (e-text) field in KRB-ERROR.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-edata" role="function">
<title>shishi_krberror_edata ()</title>
<indexterm zone="shishi-krberror-edata"><primary>shishi_krberror_edata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_edata               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="char">char</link> **edata,
                                                         <link linkend="size-t">size_t</link> *edatalen);</programlisting>
<para>
Extract additional error data from server (possibly empty).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> KRB-ERROR structure with error code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edata</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated error data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edatalen</parameter>&nbsp;:</term>
<listitem><simpara> output length of error data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-set-edata" role="function">
<title>shishi_krberror_set_edata ()</title>
<indexterm zone="shishi-krberror-set-edata"><primary>shishi_krberror_set_edata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_set_edata           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         const <link linkend="char">char</link> *edata);</programlisting>
<para>
Set error text (e-data) field in KRB-ERROR to specified value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>edata</parameter>&nbsp;:</term>
<listitem><simpara> input array with error text to set.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-remove-edata" role="function">
<title>shishi_krberror_remove_edata ()</title>
<indexterm zone="shishi-krberror-remove-edata"><primary>shishi_krberror_remove_edata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_remove_edata        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Remove error text (e-data) field in KRB-ERROR.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> krberror as allocated by <link linkend="shishi-krberror"><function>shishi_krberror()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-errorcode" role="function">
<title>shishi_krberror_errorcode ()</title>
<indexterm zone="shishi-krberror-errorcode"><primary>shishi_krberror_errorcode</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_errorcode           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="int">int</link> *errorcode);</programlisting>
<para>
Extract error code from KRB-ERROR.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> KRB-ERROR structure with error code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>errorcode</parameter>&nbsp;:</term>
<listitem><simpara> output integer KRB-ERROR error code.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-errorcode-fast" role="function">
<title>shishi_krberror_errorcode_fast ()</title>
<indexterm zone="shishi-krberror-errorcode-fast"><primary>shishi_krberror_errorcode_fast</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_errorcode_fast      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Get error code from KRB-ERROR, without error checking.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> KRB-ERROR structure with error code.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return error code (see <link linkend="shishi-krberror-errorcode"><function>shishi_krberror_errorcode()</function></link>)
              directly, or -1 on error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-pretty-print" role="function">
<title>shishi_krberror_pretty_print ()</title>
<indexterm zone="shishi-krberror-pretty-print"><primary>shishi_krberror_pretty_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_pretty_print        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Print KRB-ERROR error condition and some explanatory text to file
descriptor.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle opened for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> KRB-ERROR structure with error code.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-errorcode-message" role="function">
<title>shishi_krberror_errorcode_message ()</title>
<indexterm zone="shishi-krberror-errorcode-message"><primary>shishi_krberror_errorcode_message</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_krberror_errorcode_message   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> errorcode);</programlisting>
<para>
Get human readable string describing KRB-ERROR code.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>errorcode</parameter>&nbsp;:</term>
<listitem><simpara> integer KRB-ERROR error code.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return a string describing error code.  This function
              will always return a string even if the error code
              isn't known.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-message" role="function">
<title>shishi_krberror_message ()</title>
<indexterm zone="shishi-krberror-message"><primary>shishi_krberror_message</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_krberror_message             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror);</programlisting>
<para>
Extract error code (see <link linkend="shishi-krberror-errorcode-fast"><function>shishi_krberror_errorcode_fast()</function></link>) and
return error message (see <link linkend="shishi-krberror-errorcode-message"><function>shishi_krberror_errorcode_message()</function></link>).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> KRB-ERROR structure with error code.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return a string describing error code.  This function
              will always return a string even if the error code
              isn't known.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-krberror-methoddata" role="function">
<title>shishi_krberror_methoddata ()</title>
<indexterm zone="shishi-krberror-methoddata"><primary>shishi_krberror_methoddata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_krberror_methoddata          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> krberror,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *methoddata);</programlisting>
<para>
Extract METHOD-DATA ASN.1 object from the e-data field.  The e-data
field will only contain a METHOD-DATA if the krberror error code is
<link linkend="SHISHI-KDC-ERR-PREAUTH-REQUIRED:CAPS"><literal>SHISHI_KDC_ERR_PREAUTH_REQUIRED</literal></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>krberror</parameter>&nbsp;:</term>
<listitem><simpara> KRB-ERROR structure with error code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>methoddata</parameter>&nbsp;:</term>
<listitem><simpara> output ASN.1 METHOD-DATA.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-generalize-time" role="function">
<title>shishi_generalize_time ()</title>
<indexterm zone="shishi-generalize-time"><primary>shishi_generalize_time</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_generalize_time              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="time-t">time_t</link> t);</programlisting>
<para>
Convert C time to KerberosTime.  The string must not be deallocate
by caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> C time to convert.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return a KerberosTime time string corresponding to C time t.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-generalize-now" role="function">
<title>shishi_generalize_now ()</title>
<indexterm zone="shishi-generalize-now"><primary>shishi_generalize_now</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_generalize_now               (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Convert current time to KerberosTime.  The string must not be
deallocate by caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return a KerberosTime time string corresponding to
  current time.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-generalize-ctime" role="function">
<title>shishi_generalize_ctime ()</title>
<indexterm zone="shishi-generalize-ctime"><primary>shishi_generalize_ctime</primary></indexterm><programlisting><link linkend="time-t">time_t</link>              shishi_generalize_ctime             (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *t);</programlisting>
<para>
Convert KerberosTime to C time.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> KerberosTime to convert.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns C time corresponding to KerberosTime t.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-time" role="function">
<title>shishi_time ()</title>
<indexterm zone="shishi-time"><primary>shishi_time</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_time                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="char">char</link> **t);</programlisting>
<para>
Extract time from ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 node to get time from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara> Name of field in ASN.1 node to get time from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated output array with zero terminated time string.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ctime" role="function">
<title>shishi_ctime ()</title>
<indexterm zone="shishi-ctime"><primary>shishi_ctime</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ctime                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="time-t">time_t</link> *t);</programlisting>
<para>
Extract time from ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 variable to read field from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara> name of field in <parameter>node</parameter> to read.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> pointer to time field to set.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful,
  SHISHI_ASN1_NO_ELEMENT if the element do not exist,
  SHISHI_ASN1_NO_VALUE if the field has no value, ot
  SHISHI_ASN1_ERROR otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-randomize" role="function">
<title>shishi_randomize ()</title>
<indexterm zone="shishi-randomize"><primary>shishi_randomize</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_randomize                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> strong,
                                                         <link linkend="void">void</link> *data,
                                                         <link linkend="size-t">size_t</link> datalen);</programlisting>
<para>
Store cryptographically random data of given size in the provided
buffer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>strong</parameter>&nbsp;:</term>
<listitem><simpara> 0 iff operation should not block, non-0 for very strong randomness.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> output array to be filled with random data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>datalen</parameter>&nbsp;:</term>
<listitem><simpara> size of output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-crc" role="function">
<title>shishi_crc ()</title>
<indexterm zone="shishi-crc"><primary>shishi_crc</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_crc                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *out[4]);</programlisting>
<para>
Compute checksum of data using CRC32 modified according to RFC
1510.  The <parameter>out</parameter> buffer must be deallocated by the caller.
</para>
<para>
The modifications compared to standard CRC32 is that no initial and
final XOR is performed, and that the output is returned in
LSB-first order.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input character array of data to checksum.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array of data to checksum.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated character array with checksum of data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-md4" role="function">
<title>shishi_md4 ()</title>
<indexterm zone="shishi-md4"><primary>shishi_md4</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_md4                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *out[16]);</programlisting>
<para>
Compute hash of data using MD4.  The <parameter>out</parameter> buffer must be
deallocated by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input character array of data to hash.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array of data to hash.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated character array with hash of data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-md5" role="function">
<title>shishi_md5 ()</title>
<indexterm zone="shishi-md5"><primary>shishi_md5</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_md5                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *out[16]);</programlisting>
<para>
Compute hash of data using MD5.  The <parameter>out</parameter> buffer must be
deallocated by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input character array of data to hash.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array of data to hash.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated character array with hash of data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-hmac-md5" role="function">
<title>shishi_hmac_md5 ()</title>
<indexterm zone="shishi-hmac-md5"><primary>shishi_hmac_md5</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_hmac_md5                     (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="size-t">size_t</link> keylen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *outhash[16]);</programlisting>
<para>
Compute keyed checksum of data using HMAC-MD5.  The <parameter>outhash</parameter> buffer
must be deallocated by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> input character array with key to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keylen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with key to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input character array of data to hash.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array of data to hash.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outhash</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated character array with keyed hash of data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-hmac-sha1" role="function">
<title>shishi_hmac_sha1 ()</title>
<indexterm zone="shishi-hmac-sha1"><primary>shishi_hmac_sha1</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_hmac_sha1                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="size-t">size_t</link> keylen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *outhash[20]);</programlisting>
<para>
Compute keyed checksum of data using HMAC-SHA1.  The <parameter>outhash</parameter>
buffer must be deallocated by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> input character array with key to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keylen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with key to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input character array of data to hash.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array of data to hash.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outhash</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated character array with keyed hash of data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-des-cbc-mac" role="function">
<title>shishi_des_cbc_mac ()</title>
<indexterm zone="shishi-des-cbc-mac"><primary>shishi_des_cbc_mac</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_des_cbc_mac                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> key[8],
                                                         const <link linkend="char">char</link> iv[8],
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *out[8]);</programlisting>
<para>
Computed keyed checksum of data using DES-CBC-MAC.  The <parameter>out</parameter> buffer
must be deallocated by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> input character array with key to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input character array with initialization vector to use, can be NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input character array of data to hash.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array of data to hash.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated character array with keyed hash of data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-arcfour" role="function">
<title>shishi_arcfour ()</title>
<indexterm zone="shishi-arcfour"><primary>shishi_arcfour</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_arcfour                      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> decryptp,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="size-t">size_t</link> keylen,
                                                         const <link linkend="char">char</link> iv[258],
                                                         <link linkend="char">char</link> *ivout[258],
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out);</programlisting>
<para>
Encrypt or decrypt data (depending on <parameter>decryptp</parameter>) using ARCFOUR.
The <parameter>out</parameter> buffer must be deallocated by the caller.
</para>
<para>
The "initialization vector" used here is the concatenation of the
sbox and i and j, and is thus always of size 256 + 1 + 1.  This is
a slight abuse of terminology, and assumes you know what you are
doing.  Don't use it if you can avoid to.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>decryptp</parameter>&nbsp;:</term>
<listitem><simpara> 0 to indicate encryption, non-0 to indicate decryption.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> input character array with key to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keylen</parameter>&nbsp;:</term>
<listitem><simpara> length of input key array.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input character array with initialization vector to use, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivout</parameter>&nbsp;:</term>
<listitem><simpara> output character array with updated initialization vector, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input character array of data to encrypt/decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array of data to encrypt/decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated character array with encrypted/decrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-des" role="function">
<title>shishi_des ()</title>
<indexterm zone="shishi-des"><primary>shishi_des</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_des                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> decryptp,
                                                         const <link linkend="char">char</link> key[8],
                                                         const <link linkend="char">char</link> iv[8],
                                                         <link linkend="char">char</link> *ivout[8],
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out);</programlisting>
<para>
Encrypt or decrypt data (depending on <parameter>decryptp</parameter>) using DES in CBC
mode.  The <parameter>out</parameter> buffer must be deallocated by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>decryptp</parameter>&nbsp;:</term>
<listitem><simpara> 0 to indicate encryption, non-0 to indicate decryption.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> input character array with key to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input character array with initialization vector to use, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivout</parameter>&nbsp;:</term>
<listitem><simpara> output character array with updated initialization vector, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input character array of data to encrypt/decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array of data to encrypt/decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated character array with encrypted/decrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-3des" role="function">
<title>shishi_3des ()</title>
<indexterm zone="shishi-3des"><primary>shishi_3des</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_3des                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> decryptp,
                                                         const <link linkend="char">char</link> key[24],
                                                         const <link linkend="char">char</link> iv[8],
                                                         <link linkend="char">char</link> *ivout[8],
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out);</programlisting>
<para>
Encrypt or decrypt data (depending on <parameter>decryptp</parameter>) using 3DES in CBC
mode.  The <parameter>out</parameter> buffer must be deallocated by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>decryptp</parameter>&nbsp;:</term>
<listitem><simpara> 0 to indicate encryption, non-0 to indicate decryption.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> input character array with key to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input character array with initialization vector to use, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivout</parameter>&nbsp;:</term>
<listitem><simpara> output character array with updated initialization vector, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input character array of data to encrypt/decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array of data to encrypt/decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated character array with encrypted/decrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aes-cts" role="function">
<title>shishi_aes_cts ()</title>
<indexterm zone="shishi-aes-cts"><primary>shishi_aes_cts</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aes_cts                      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int">int</link> decryptp,
                                                         const <link linkend="char">char</link> *key,
                                                         <link linkend="size-t">size_t</link> keylen,
                                                         const <link linkend="char">char</link> iv[16],
                                                         <link linkend="char">char</link> *ivout[16],
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out);</programlisting>
<para>
Encrypt or decrypt data (depending on <parameter>decryptp</parameter>) using AES in
CBC-CTS mode.  The length of the key, <parameter>keylen</parameter>, decide if AES 128 or
AES 256 should be used.  The <parameter>out</parameter> buffer must be deallocated by the
caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>decryptp</parameter>&nbsp;:</term>
<listitem><simpara> 0 to indicate encryption, non-0 to indicate decryption.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> input character array with key to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keylen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with key to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input character array with initialization vector to use, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivout</parameter>&nbsp;:</term>
<listitem><simpara> output character array with updated initialization vector, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input character array of data to encrypt/decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array of data to encrypt/decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated character array with encrypted/decrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cipher-supported-p" role="function">
<title>shishi_cipher_supported_p ()</title>
<indexterm zone="shishi-cipher-supported-p"><primary>shishi_cipher_supported_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_cipher_supported_p           (<link linkend="int">int</link> type);</programlisting>
<para>
Find out if cipher is supported.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> encryption type, see Shishi_etype.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return 0 iff cipher is unsupported.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cipher-name" role="function">
<title>shishi_cipher_name ()</title>
<indexterm zone="shishi-cipher-name"><primary>shishi_cipher_name</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_cipher_name                  (<link linkend="int">int</link> type);</programlisting>
<para>
Read humanly readable string for cipher.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> encryption type, see Shishi_etype.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return name of encryption type,
e.g. "des3-cbc-sha1-kd", as defined in the standards.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cipher-blocksize" role="function">
<title>shishi_cipher_blocksize ()</title>
<indexterm zone="shishi-cipher-blocksize"><primary>shishi_cipher_blocksize</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_cipher_blocksize             (<link linkend="int">int</link> type);</programlisting>
<para>
Get block size for cipher.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> encryption type, see Shishi_etype.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return block size for encryption type, as defined in
the standards.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cipher-confoundersize" role="function">
<title>shishi_cipher_confoundersize ()</title>
<indexterm zone="shishi-cipher-confoundersize"><primary>shishi_cipher_confoundersize</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_cipher_confoundersize        (<link linkend="int">int</link> type);</programlisting>
<para>
Get length of confounder for cipher.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> encryption type, see Shishi_etype.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the size of the confounder (random data) for
encryption type, as defined in the standards, or (size_t)-1 on
error (e.g., unsupported encryption type).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cipher-keylen" role="function">
<title>shishi_cipher_keylen ()</title>
<indexterm zone="shishi-cipher-keylen"><primary>shishi_cipher_keylen</primary></indexterm><programlisting><link linkend="size-t">size_t</link>              shishi_cipher_keylen                (<link linkend="int">int</link> type);</programlisting>
<para>
Get key length for cipher.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> encryption type, see Shishi_etype.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return length of key used for the encryption type, as
defined in the standards.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cipher-randomlen" role="function">
<title>shishi_cipher_randomlen ()</title>
<indexterm zone="shishi-cipher-randomlen"><primary>shishi_cipher_randomlen</primary></indexterm><programlisting><link linkend="size-t">size_t</link>              shishi_cipher_randomlen             (<link linkend="int">int</link> type);</programlisting>
<para>
Get length of random data for cipher.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> encryption type, see Shishi_etype.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return length of random used for the encryption type,
as defined in the standards, or (size_t)-1 on error (e.g.,
unsupported encryption type).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cipher-defaultcksumtype" role="function">
<title>shishi_cipher_defaultcksumtype ()</title>
<indexterm zone="shishi-cipher-defaultcksumtype"><primary>shishi_cipher_defaultcksumtype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_cipher_defaultcksumtype      (<link linkend="int32-t">int32_t</link> type);</programlisting>
<para>
Get the default checksum associated with cipher.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> encryption type, see Shishi_etype.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return associated checksum mechanism for the
encryption type, as defined in the standards.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-cipher-parse" role="function">
<title>shishi_cipher_parse ()</title>
<indexterm zone="shishi-cipher-parse"><primary>shishi_cipher_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_cipher_parse                 (const <link linkend="char">char</link> *cipher);</programlisting>
<para>
Get cipher number by parsing string.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cipher</parameter>&nbsp;:</term>
<listitem><simpara> name of encryption type, e.g. "des3-cbc-sha1-kd".
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return encryption type corresponding to a string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-checksum-supported-p" role="function">
<title>shishi_checksum_supported_p ()</title>
<indexterm zone="shishi-checksum-supported-p"><primary>shishi_checksum_supported_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_checksum_supported_p         (<link linkend="int32-t">int32_t</link> type);</programlisting>
<para>
Find out whether checksum is supported.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> checksum type, see Shishi_cksumtype.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return 0 iff checksum is unsupported.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-checksum-name" role="function">
<title>shishi_checksum_name ()</title>
<indexterm zone="shishi-checksum-name"><primary>shishi_checksum_name</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_checksum_name                (<link linkend="int32-t">int32_t</link> type);</programlisting>
<para>
Get name of checksum.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> checksum type, see Shishi_cksumtype.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return name of checksum type,
e.g. "hmac-sha1-96-aes256", as defined in the standards.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-checksum-cksumlen" role="function">
<title>shishi_checksum_cksumlen ()</title>
<indexterm zone="shishi-checksum-cksumlen"><primary>shishi_checksum_cksumlen</primary></indexterm><programlisting><link linkend="size-t">size_t</link>              shishi_checksum_cksumlen            (<link linkend="int32-t">int32_t</link> type);</programlisting>
<para>
Get length of checksum output.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> checksum type, see Shishi_cksumtype.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return length of checksum used for the checksum type,
as defined in the standards.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-checksum-parse" role="function">
<title>shishi_checksum_parse ()</title>
<indexterm zone="shishi-checksum-parse"><primary>shishi_checksum_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_checksum_parse               (const <link linkend="char">char</link> *checksum);</programlisting>
<para>
Get checksum number by parsing a string.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>checksum</parameter>&nbsp;:</term>
<listitem><simpara> name of checksum type, e.g. "hmac-sha1-96-aes256".
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return checksum type, see Shishi_cksumtype,
corresponding to a string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-string-to-key" role="function">
<title>shishi_string_to_key ()</title>
<indexterm zone="shishi-string-to-key"><primary>shishi_string_to_key</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_string_to_key                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> keytype,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="size-t">size_t</link> passwordlen,
                                                         const <link linkend="char">char</link> *salt,
                                                         <link linkend="size-t">size_t</link> saltlen,
                                                         const <link linkend="char">char</link> *parameter,
                                                         <link linkend="Shishi-key">Shishi_key</link> *outkey);</programlisting>
<para>
Derive key from a string (password) and salt (commonly
concatenation of realm and principal) for specified key type, and
set the type and value in the given key to the computed values.
The parameter value is specific for each keytype, and can be set if
the parameter information is not available.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keytype</parameter>&nbsp;:</term>
<listitem><simpara> cryptographic encryption type, see Shishi_etype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&nbsp;:</term>
<listitem><simpara> input array with password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>passwordlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>salt</parameter>&nbsp;:</term>
<listitem><simpara> input array with salt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>saltlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with salt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parameter</parameter>&nbsp;:</term>
<listitem><simpara> input array with opaque encryption type specific information.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outkey</parameter>&nbsp;:</term>
<listitem><simpara> allocated key handle that will contain new key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-random-to-key" role="function">
<title>shishi_random_to_key ()</title>
<indexterm zone="shishi-random-to-key"><primary>shishi_random_to_key</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_random_to_key                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> keytype,
                                                         const <link linkend="char">char</link> *rnd,
                                                         <link linkend="size-t">size_t</link> rndlen,
                                                         <link linkend="Shishi-key">Shishi_key</link> *outkey);</programlisting>
<para>
Derive key from random data for specified key type, and set the
type and value in the given key to the computed values.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keytype</parameter>&nbsp;:</term>
<listitem><simpara> cryptographic encryption type, see Shishi_etype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rnd</parameter>&nbsp;:</term>
<listitem><simpara> input array with random data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rndlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with random data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outkey</parameter>&nbsp;:</term>
<listitem><simpara> allocated key handle that will contain new key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encrypt-ivupdate-etype" role="function">
<title>shishi_encrypt_ivupdate_etype ()</title>
<indexterm zone="shishi-encrypt-ivupdate-etype"><primary>shishi_encrypt_ivupdate_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encrypt_ivupdate_etype       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         <link linkend="char">char</link> **ivout,
                                                         <link linkend="size-t">size_t</link> *ivoutlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Encrypts data as per encryption method using specified
initialization vector and key.  The key actually used is derived
using the key usage.  If key usage is 0, no key derivation is used.
The OUT buffer must be deallocated by the caller.  If IVOUT or
IVOUTLEN is NULL, the updated IV is not saved anywhere.
</para>
<para>
Note that DECRYPT(ENCRYPT(data)) does not necessarily yield data
exactly.  Some encryption types add pad to make the data fit into
the block size of the encryption algorithm.  Furthermore, the pad
is not guaranteed to look in any special way, although existing
implementations often pad with the zero byte.  This means that you
may have to "frame" data, so it is possible to infer the original
length after decryption.  Compare ASN.1 DER which contains such
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to encrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is encrypting.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what cipher to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input array with initialization vector
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivout</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated updated initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivoutlen</parameter>&nbsp;:</term>
<listitem><simpara> size of output array with updated initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated encrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encrypt-iv-etype" role="function">
<title>shishi_encrypt_iv_etype ()</title>
<indexterm zone="shishi-encrypt-iv-etype"><primary>shishi_encrypt_iv_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encrypt_iv_etype             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Encrypts data as per encryption method using specified
initialization vector and key.  The key actually used is derived
using the key usage.  If key usage is 0, no key derivation is used.
The OUT buffer must be deallocated by the caller.  The next IV is
lost, see shishi_encrypt_ivupdate_etype if you need it.
</para>
<para>
Note that DECRYPT(ENCRYPT(data)) does not necessarily yield data
exactly.  Some encryption types add pad to make the data fit into
the block size of the encryption algorithm.  Furthermore, the pad
is not guaranteed to look in any special way, although existing
implementations often pad with the zero byte.  This means that you
may have to "frame" data, so it is possible to infer the original
length after decryption.  Compare ASN.1 DER which contains such
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to encrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is encrypting.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what cipher to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input array with initialization vector
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated encrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encrypt-etype" role="function">
<title>shishi_encrypt_etype ()</title>
<indexterm zone="shishi-encrypt-etype"><primary>shishi_encrypt_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encrypt_etype                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Encrypts data as per encryption method using specified
initialization vector and key.  The key actually used is derived
using the key usage.  If key usage is 0, no key derivation is used.
The OUT buffer must be deallocated by the caller.  The default IV
is used, see shishi_encrypt_iv_etype if you need to alter it. The
next IV is lost, see shishi_encrypt_ivupdate_etype if you need it.
</para>
<para>
Note that DECRYPT(ENCRYPT(data)) does not necessarily yield data
exactly.  Some encryption types add pad to make the data fit into
the block size of the encryption algorithm.  Furthermore, the pad
is not guaranteed to look in any special way, although existing
implementations often pad with the zero byte.  This means that you
may have to "frame" data, so it is possible to infer the original
length after decryption.  Compare ASN.1 DER which contains such
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to encrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is encrypting.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what cipher to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated encrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encrypt-ivupdate" role="function">
<title>shishi_encrypt_ivupdate ()</title>
<indexterm zone="shishi-encrypt-ivupdate"><primary>shishi_encrypt_ivupdate</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encrypt_ivupdate             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         <link linkend="char">char</link> **ivout,
                                                         <link linkend="size-t">size_t</link> *ivoutlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Encrypts data using specified initialization vector and key.  The
key actually used is derived using the key usage.  If key usage is
0, no key derivation is used.  The OUT buffer must be deallocated
by the caller.  If IVOUT or IVOUTLEN is NULL, the updated IV is not
saved anywhere.
</para>
<para>
Note that DECRYPT(ENCRYPT(data)) does not necessarily yield data
exactly.  Some encryption types add pad to make the data fit into
the block size of the encryption algorithm.  Furthermore, the pad
is not guaranteed to look in any special way, although existing
implementations often pad with the zero byte.  This means that you
may have to "frame" data, so it is possible to infer the original
length after decryption.  Compare ASN.1 DER which contains such
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to encrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is encrypting.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input array with initialization vector
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivout</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated updated initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivoutlen</parameter>&nbsp;:</term>
<listitem><simpara> size of output array with updated initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated encrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encrypt-iv" role="function">
<title>shishi_encrypt_iv ()</title>
<indexterm zone="shishi-encrypt-iv"><primary>shishi_encrypt_iv</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encrypt_iv                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Encrypts data using specified initialization vector and key.  The
key actually used is derived using the key usage.  If key usage is
0, no key derivation is used.  The OUT buffer must be deallocated
by the caller.  The next IV is lost, see shishi_encrypt_ivupdate if
you need it.
</para>
<para>
Note that DECRYPT(ENCRYPT(data)) does not necessarily yield data
exactly.  Some encryption types add pad to make the data fit into
the block size of the encryption algorithm.  Furthermore, the pad
is not guaranteed to look in any special way, although existing
implementations often pad with the zero byte.  This means that you
may have to "frame" data, so it is possible to infer the original
length after decryption.  Compare ASN.1 DER which contains such
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to encrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is encrypting.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input array with initialization vector
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated encrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encrypt" role="function">
<title>shishi_encrypt ()</title>
<indexterm zone="shishi-encrypt"><primary>shishi_encrypt</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encrypt                      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Encrypts data using specified key.  The key actually used is
derived using the key usage.  If key usage is 0, no key derivation
is used.  The OUT buffer must be deallocated by the caller.  The
default IV is used, see shishi_encrypt_iv if you need to alter it.
The next IV is lost, see shishi_encrypt_ivupdate if you need it.
</para>
<para>
Note that DECRYPT(ENCRYPT(data)) does not necessarily yield data
exactly.  Some encryption types add pad to make the data fit into
the block size of the encryption algorithm.  Furthermore, the pad
is not guaranteed to look in any special way, although existing
implementations often pad with the zero byte.  This means that you
may have to "frame" data, so it is possible to infer the original
length after decryption.  Compare ASN.1 DER which contains such
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to encrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is encrypting.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated encrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-decrypt-ivupdate-etype" role="function">
<title>shishi_decrypt_ivupdate_etype ()</title>
<indexterm zone="shishi-decrypt-ivupdate-etype"><primary>shishi_decrypt_ivupdate_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_decrypt_ivupdate_etype       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         <link linkend="char">char</link> **ivout,
                                                         <link linkend="size-t">size_t</link> *ivoutlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Decrypts data as per encryption method using specified
initialization vector and key.  The key actually used is derived
using the key usage.  If key usage is 0, no key derivation is used.
The OUT buffer must be deallocated by the caller.  If IVOUT or
IVOUTLEN is NULL, the updated IV is not saved anywhere.
</para>
<para>
Note that DECRYPT(ENCRYPT(data)) does not necessarily yield data
exactly.  Some encryption types add pad to make the data fit into
the block size of the encryption algorithm.  Furthermore, the pad
is not guaranteed to look in any special way, although existing
implementations often pad with the zero byte.  This means that you
may have to "frame" data, so it is possible to infer the original
length after decryption.  Compare ASN.1 DER which contains such
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to decrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is decrypting.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what cipher to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input array with initialization vector
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivout</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated updated initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivoutlen</parameter>&nbsp;:</term>
<listitem><simpara> size of output array with updated initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated decrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-decrypt-iv-etype" role="function">
<title>shishi_decrypt_iv_etype ()</title>
<indexterm zone="shishi-decrypt-iv-etype"><primary>shishi_decrypt_iv_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_decrypt_iv_etype             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Decrypts data as per encryption method using specified
initialization vector and key.  The key actually used is derived
using the key usage.  If key usage is 0, no key derivation is used.
The OUT buffer must be deallocated by the caller.  The next IV is
lost, see shishi_decrypt_ivupdate_etype if you need it.
</para>
<para>
Note that DECRYPT(ENCRYPT(data)) does not necessarily yield data
exactly.  Some encryption types add pad to make the data fit into
the block size of the encryption algorithm.  Furthermore, the pad
is not guaranteed to look in any special way, although existing
implementations often pad with the zero byte.  This means that you
may have to "frame" data, so it is possible to infer the original
length after decryption.  Compare ASN.1 DER which contains such
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to decrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is decrypting.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what cipher to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input array with initialization vector
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated decrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-decrypt-etype" role="function">
<title>shishi_decrypt_etype ()</title>
<indexterm zone="shishi-decrypt-etype"><primary>shishi_decrypt_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_decrypt_etype                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Decrypts data as per encryption method using specified key.  The
key actually used is derived using the key usage.  If key usage is
0, no key derivation is used.  The OUT buffer must be deallocated
by the caller.  The default IV is used, see shishi_decrypt_iv_etype
if you need to alter it.  The next IV is lost, see
shishi_decrypt_ivupdate_etype if you need it.
</para>
<para>
Note that DECRYPT(ENCRYPT(data)) does not necessarily yield data
exactly.  Some encryption types add pad to make the data fit into
the block size of the encryption algorithm.  Furthermore, the pad
is not guaranteed to look in any special way, although existing
implementations often pad with the zero byte.  This means that you
may have to "frame" data, so it is possible to infer the original
length after decryption.  Compare ASN.1 DER which contains such
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to decrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is decrypting.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what cipher to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated decrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-decrypt-ivupdate" role="function">
<title>shishi_decrypt_ivupdate ()</title>
<indexterm zone="shishi-decrypt-ivupdate"><primary>shishi_decrypt_ivupdate</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_decrypt_ivupdate             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         <link linkend="char">char</link> **ivout,
                                                         <link linkend="size-t">size_t</link> *ivoutlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Decrypts data using specified initialization vector and key.  The
key actually used is derived using the key usage.  If key usage is
0, no key derivation is used.  The OUT buffer must be deallocated
by the caller.  If IVOUT or IVOUTLEN is NULL, the updated IV is not
saved anywhere.
</para>
<para>
Note that DECRYPT(ENCRYPT(data)) does not necessarily yield data
exactly.  Some encryption types add pad to make the data fit into
the block size of the encryption algorithm.  Furthermore, the pad
is not guaranteed to look in any special way, although existing
implementations often pad with the zero byte.  This means that you
may have to "frame" data, so it is possible to infer the original
length after decryption.  Compare ASN.1 DER which contains such
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to decrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is decrypting.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input array with initialization vector
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivout</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated updated initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivoutlen</parameter>&nbsp;:</term>
<listitem><simpara> size of output array with updated initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated decrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-decrypt-iv" role="function">
<title>shishi_decrypt_iv ()</title>
<indexterm zone="shishi-decrypt-iv"><primary>shishi_decrypt_iv</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_decrypt_iv                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Decrypts data using specified initialization vector and key.  The
key actually used is derived using the key usage.  If key usage is
0, no key derivation is used.  The OUT buffer must be deallocated
by the caller.  The next IV is lost, see
shishi_decrypt_ivupdate_etype if you need it.
</para>
<para>
Note that DECRYPT(ENCRYPT(data)) does not necessarily yield data
exactly.  Some encryption types add pad to make the data fit into
the block size of the encryption algorithm.  Furthermore, the pad
is not guaranteed to look in any special way, although existing
implementations often pad with the zero byte.  This means that you
may have to "frame" data, so it is possible to infer the original
length after decryption.  Compare ASN.1 DER which contains such
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to decrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is decrypting.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input array with initialization vector
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated decrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-decrypt" role="function">
<title>shishi_decrypt ()</title>
<indexterm zone="shishi-decrypt"><primary>shishi_decrypt</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_decrypt                      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Decrypts data specified key.  The key actually used is derived
using the key usage.  If key usage is 0, no key derivation is used.
The OUT buffer must be deallocated by the caller.  The default IV
is used, see shishi_decrypt_iv if you need to alter it.  The next
IV is lost, see shishi_decrypt_ivupdate if you need it.
</para>
<para>
Note that DECRYPT(ENCRYPT(data)) does not necessarily yield data
exactly.  Some encryption types add pad to make the data fit into
the block size of the encryption algorithm.  Furthermore, the pad
is not guaranteed to look in any special way, although existing
implementations often pad with the zero byte.  This means that you
may have to "frame" data, so it is possible to infer the original
length after decryption.  Compare ASN.1 DER which contains such
information.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to decrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is decrypting.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated decrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-checksum" role="function">
<title>shishi_checksum ()</title>
<indexterm zone="shishi-checksum"><primary>shishi_checksum</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_checksum                     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> cksumtype,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Integrity protect data using key, possibly altered by supplied key
usage.  If key usage is 0, no key derivation is used.  The OUT
buffer must be deallocated by the caller.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to compute checksum with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is used for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumtype</parameter>&nbsp;:</term>
<listitem><simpara> the checksum algorithm to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to integrity protect.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to integrity protect.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated integrity protected data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with length of output array with checksum.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-verify" role="function">
<title>shishi_verify ()</title>
<indexterm zone="shishi-verify"><primary>shishi_verify</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_verify                       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int">int</link> cksumtype,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         const <link linkend="char">char</link> *cksum,
                                                         <link linkend="size-t">size_t</link> cksumlen);</programlisting>
<para>
Verify checksum of data using key, possibly altered by supplied key
usage.  If key usage is 0, no key derivation is used.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to verify checksum with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key is used for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumtype</parameter>&nbsp;:</term>
<listitem><simpara> the checksum algorithm to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data that was integrity protected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data that was integrity protected.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksum</parameter>&nbsp;:</term>
<listitem><simpara> input array with alleged checksum of data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with alleged checksum of data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-dk" role="function">
<title>shishi_dk ()</title>
<indexterm zone="shishi-dk"><primary>shishi_dk</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_dk                           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         const <link linkend="char">char</link> *prfconstant,
                                                         <link linkend="size-t">size_t</link> prfconstantlen,
                                                         <link linkend="Shishi-key">Shishi_key</link> *derivedkey);</programlisting>
<para>
Derive a key from a key and a constant thusly:
DK(KEY, PRFCONSTANT) = SHISHI_RANDOM-TO-KEY(SHISHI_DR(KEY, PRFCONSTANT)).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> input cryptographic key to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prfconstant</parameter>&nbsp;:</term>
<listitem><simpara> input array with the constant string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prfconstantlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with the constant string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derivedkey</parameter>&nbsp;:</term>
<listitem><simpara> pointer to derived key (allocated by caller).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-dr" role="function">
<title>shishi_dr ()</title>
<indexterm zone="shishi-dr"><primary>shishi_dr</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_dr                           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         const <link linkend="char">char</link> *prfconstant,
                                                         <link linkend="size-t">size_t</link> prfconstantlen,
                                                         <link linkend="char">char</link> *derivedrandom,
                                                         <link linkend="size-t">size_t</link> derivedrandomlen);</programlisting>
<para>
Derive "random" data from a key and a constant thusly:
DR(KEY, PRFCONSTANT) = TRUNCATE(DERIVEDRANDOMLEN,
                                SHISHI_ENCRYPT(KEY, PRFCONSTANT)).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> input array with cryptographic key to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prfconstant</parameter>&nbsp;:</term>
<listitem><simpara> input array with the constant string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prfconstantlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with the constant string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derivedrandom</parameter>&nbsp;:</term>
<listitem><simpara> output array with derived random data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derivedrandomlen</parameter>&nbsp;:</term>
<listitem><simpara> size of output array with derived random data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-n-fold" role="function">
<title>shishi_n_fold ()</title>
<indexterm zone="shishi-n-fold"><primary>shishi_n_fold</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_n_fold                       (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> *out,
                                                         <link linkend="size-t">size_t</link> outlen);</programlisting>
<para>
Fold data into a fixed length output array, with the intent to give
each input bit approximately equal weight in determining the value
of each output bit.
</para>
<para>
The algorithm is from "A Better Key Schedule For DES-like Ciphers"
by Uri Blumenthal and Steven M. Bellovin,
http://www.research.att.com/~smb/papers/ides.pdf, although the
sample vectors provided by the paper are incorrect.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to decrypt ("M").
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with decrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> size of output array ("N").
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-pbkdf2-sha1" role="function">
<title>shishi_pbkdf2_sha1 ()</title>
<indexterm zone="shishi-pbkdf2-sha1"><primary>shishi_pbkdf2_sha1</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_pbkdf2_sha1                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *P,
                                                         <link linkend="size-t">size_t</link> Plen,
                                                         const <link linkend="char">char</link> *S,
                                                         <link linkend="size-t">size_t</link> Slen,
                                                         unsigned <link linkend="int">int</link> c,
                                                         unsigned <link linkend="int">int</link> dkLen,
                                                         <link linkend="char">char</link> *DK);</programlisting>
<para>
Derive key using the PBKDF2 defined in PKCS5.  PBKDF2 applies a
pseudorandom function to derive keys. The length of the derived key
is essentially unbounded. (However, the maximum effective search
space for the derived key may be limited by the structure of the
underlying pseudorandom function, which is this function is always
SHA1.)</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>P</parameter>&nbsp;:</term>
<listitem><simpara> input password, an octet string
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Plen</parameter>&nbsp;:</term>
<listitem><simpara> length of password, an octet string
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>S</parameter>&nbsp;:</term>
<listitem><simpara> input salt, an octet string
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>Slen</parameter>&nbsp;:</term>
<listitem><simpara> length of salt, an octet string
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>c</parameter>&nbsp;:</term>
<listitem><simpara> iteration count, a positive integer
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dkLen</parameter>&nbsp;:</term>
<listitem><simpara> intended length in octets of the derived key, a positive integer,
  at most (2^32 - 1) * hLen.  The DK array must have room for this many
  characters.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>DK</parameter>&nbsp;:</term>
<listitem><simpara> output derived key, a dkLen-octet string
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-crypto" role="function">
<title>shishi_crypto ()</title>
<indexterm zone="shishi-crypto"><primary>shishi_crypto</primary></indexterm><programlisting><link linkend="Shishi-crypto">Shishi_crypto</link>*      shishi_crypto                       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *iv,
                                                         <link linkend="size-t">size_t</link> ivlen);</programlisting>
<para>
Initialize a crypto context.  This store a key, keyusage,
encryption type and initialization vector in a "context", and the
caller can then use this context to perform encryption via
<link linkend="shishi-crypto-encrypt"><function>shishi_crypto_encrypt()</function></link> and decryption via <link linkend="shishi-crypto-encrypt"><function>shishi_crypto_encrypt()</function></link>
without supplying all those details again.  The functions also
takes care of propagating the IV between calls.
</para>
<para>
When the application no longer need to use the context, it should
deallocate resources associated with it by calling
<link linkend="shishi-crypto-done"><function>shishi_crypto_done()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to encrypt with.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what this key will encrypt/decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> integer specifying what cipher to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iv</parameter>&nbsp;:</term>
<listitem><simpara> input array with initialization vector
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ivlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with initialization vector.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return a newly allocated crypto context.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-crypto-close" role="function">
<title>shishi_crypto_close ()</title>
<indexterm zone="shishi-crypto-close"><primary>shishi_crypto_close</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_crypto_close                 (<link linkend="Shishi-crypto">Shishi_crypto</link> *ctx);</programlisting>
<para>
Deallocate resources associated with the crypto context.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara> crypto context as returned by <link linkend="shishi-crypto"><function>shishi_crypto()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-crypto-encrypt" role="function">
<title>shishi_crypto_encrypt ()</title>
<indexterm zone="shishi-crypto-encrypt"><primary>shishi_crypto_encrypt</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_crypto_encrypt               (<link linkend="Shishi-crypto">Shishi_crypto</link> *ctx,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Encrypt data, using information (e.g., key and initialization
vector) from context.  The IV is updated inside the context after
this call.
</para>
<para>
When the application no longer need to use the context, it should
deallocate resources associated with it by calling
<link linkend="shishi-crypto-done"><function>shishi_crypto_done()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara> crypto context as returned by <link linkend="shishi-crypto"><function>shishi_crypto()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to encrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated encrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-crypto-decrypt" role="function">
<title>shishi_crypto_decrypt ()</title>
<indexterm zone="shishi-crypto-decrypt"><primary>shishi_crypto_decrypt</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_crypto_decrypt               (<link linkend="Shishi-crypto">Shishi_crypto</link> *ctx,
                                                         const <link linkend="char">char</link> *in,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Decrypt data, using information (e.g., key and initialization
vector) from context.  The IV is updated inside the context after
this call.
</para>
<para>
When the application no longer need to use the context, it should
deallocate resources associated with it by calling
<link linkend="shishi-crypto-done"><function>shishi_crypto_done()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara> crypto context as returned by <link linkend="shishi-crypto"><function>shishi_crypto()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>in</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with data to decrypt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated decrypted data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> output variable with size of newly allocated output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-check-version" role="function">
<title>shishi_check_version ()</title>
<indexterm zone="shishi-check-version"><primary>shishi_check_version</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_check_version                (const <link linkend="char">char</link> *req_version);</programlisting>
<para>
Check that the the version of the library is at minimum the one
given as a string in <parameter>req_version</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>req_version</parameter>&nbsp;:</term>
<listitem><simpara> version string to compare with, or NULL
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the actual version string of the library; NULL if the
  condition is not met.  If <link linkend="NULL:CAPS"><literal>NULL</literal></link> is passed to this function no
  check is done and only the version string is returned.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-prompt-password-func" role="function">
<title>shishi_prompt_password_func ()</title>
<indexterm zone="shishi-prompt-password-func"><primary>shishi_prompt_password_func</primary></indexterm><programlisting><link linkend="int">int</link>                 (*shishi_prompt_password_func)      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> **s,
                                                         const <link linkend="char">char</link> *format,
                                                         <link linkend="va-list">va_list</link> ap);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-prompt-password-callback-set" role="function">
<title>shishi_prompt_password_callback_set ()</title>
<indexterm zone="shishi-prompt-password-callback-set"><primary>shishi_prompt_password_callback_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_prompt_password_callback_set (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="shishi-prompt-password-func">shishi_prompt_password_func</link> cb);</programlisting>
<para>
Set a callback function that will be used by
<link linkend="shishi-prompt-password"><function>shishi_prompt_password()</function></link> to query the user for a password.  The
function pointer can be retrieved using
<link linkend="shishi-prompt-password-callback-get"><function>shishi_prompt_password_callback_get()</function></link>.
</para>
<para>
The <parameter>cb</parameter> function should follow the <link linkend="shishi-prompt-password-func"><literal>shishi_prompt_password_func</literal></link> prototype:
</para>
<para>
int prompt_password (Shishi * <parameter>handle</parameter>, char **<parameter>s</parameter>,
const char *<parameter>format</parameter>, va_list <parameter>ap</parameter>);
</para>
<para>
If the function returns 0, the <parameter>s</parameter> variable should contain a newly
allocated string with the password read from the user.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cb</parameter>&nbsp;:</term>
<listitem><simpara> function pointer to application password callback, a
  <link linkend="shishi-prompt-password-func"><type>shishi_prompt_password_func</type></link> type.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-prompt-password-callback-get" role="function">
<title>shishi_prompt_password_callback_get ()</title>
<indexterm zone="shishi-prompt-password-callback-get"><primary>shishi_prompt_password_callback_get</primary></indexterm><programlisting><link linkend="shishi-prompt-password-func">shishi_prompt_password_func</link> shishi_prompt_password_callback_get
                                                        (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Get the application password prompt function callback as set by
<link linkend="shishi-prompt-password-callback-set"><function>shishi_prompt_password_callback_set()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the callback, a <link linkend="shishi-prompt-password-func"><type>shishi_prompt_password_func</type></link> type,
  or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-prompt-password" role="function">
<title>shishi_prompt_password ()</title>
<indexterm zone="shishi-prompt-password"><primary>shishi_prompt_password</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_prompt_password              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> **s,
                                                         const <link linkend="char">char</link> *format,
                                                         ...);</programlisting>
<para>
Format and print a prompt, and read a password from user.  The
password is possibly converted (e.g., converted from Latin-1 to
UTF-8, or processed using Stringprep profile) following any
"stringprocess" keywords in configuration files.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>s</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated output string with read password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara> printf(3) style format string.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara> printf(3) style arguments.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-number-of-elements" role="function">
<title>shishi_asn1_number_of_elements ()</title>
<indexterm zone="shishi-asn1-number-of-elements"><primary>shishi_asn1_number_of_elements</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_number_of_elements      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="size-t">size_t</link> *n);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-empty-p" role="function">
<title>shishi_asn1_empty_p ()</title>
<indexterm zone="shishi-asn1-empty-p"><primary>shishi_asn1_empty_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_empty_p                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-read" role="function">
<title>shishi_asn1_read ()</title>
<indexterm zone="shishi-asn1-read"><primary>shishi_asn1_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_read                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="char">char</link> **data,
                                                         <link linkend="size-t">size_t</link> *datalen);</programlisting>
<para>
Extract data stored in a ASN.1 field into a newly allocated buffer.
The buffer will always be zero terminated, even though <parameter>datalen</parameter>
will not include the added zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 variable to read field from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara> name of field in <parameter>node</parameter> to read.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated output buffer that will hold ASN.1 field data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>datalen</parameter>&nbsp;:</term>
<listitem><simpara> actual size of output buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful,
  SHISHI_ASN1_NO_ELEMENT if the element do not exist,
  SHISHI_ASN1_NO_VALUE if the field has no value, ot
  SHISHI_ASN1_ERROR otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-read-inline" role="function">
<title>shishi_asn1_read_inline ()</title>
<indexterm zone="shishi-asn1-read-inline"><primary>shishi_asn1_read_inline</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_read_inline             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> *datalen);</programlisting>
<para>
Extract data stored in a ASN.1 field into a fixed size buffer
allocated by caller.
</para>
<para>
Note that since it is difficult to predict the length of the field,
it is often better to use <link linkend="shishi-asn1-read"><function>shishi_asn1_read()</function></link> instead.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 variable to read field from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara> name of field in <parameter>node</parameter> to read.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> pre-allocated output buffer that will hold ASN.1 field data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>datalen</parameter>&nbsp;:</term>
<listitem><simpara> on input, maximum size of output buffer,
            on output, actual size of output buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful,
  SHISHI_ASN1_NO_ELEMENT if the element do not exist,
  SHISHI_ASN1_NO_VALUE if the field has no value, ot
  SHISHI_ASN1_ERROR otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-read-integer" role="function">
<title>shishi_asn1_read_integer ()</title>
<indexterm zone="shishi-asn1-read-integer"><primary>shishi_asn1_read_integer</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_read_integer            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="int">int</link> *i);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-read-int32" role="function">
<title>shishi_asn1_read_int32 ()</title>
<indexterm zone="shishi-asn1-read-int32"><primary>shishi_asn1_read_int32</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_read_int32              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="int32-t">int32_t</link> *i);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-read-uint32" role="function">
<title>shishi_asn1_read_uint32 ()</title>
<indexterm zone="shishi-asn1-read-uint32"><primary>shishi_asn1_read_uint32</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_read_uint32             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="uint32-t">uint32_t</link> *i);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>i</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-read-bitstring" role="function">
<title>shishi_asn1_read_bitstring ()</title>
<indexterm zone="shishi-asn1-read-bitstring"><primary>shishi_asn1_read_bitstring</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_read_bitstring          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="uint32-t">uint32_t</link> *flags);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-read-optional" role="function">
<title>shishi_asn1_read_optional ()</title>
<indexterm zone="shishi-asn1-read-optional"><primary>shishi_asn1_read_optional</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_read_optional           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="char">char</link> **data,
                                                         <link linkend="size-t">size_t</link> *datalen);</programlisting>
<para>
Extract data stored in a ASN.1 field into a newly allocated buffer.
If the field does not exist (i.e., SHISHI_ASN1_NO_ELEMENT), this
function set datalen to 0 and succeeds.  Can be useful to read
ASN.1 fields which are marked OPTIONAL in the grammar, if you want
to avoid special error handling in your code.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 variable to read field from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara> name of field in <parameter>node</parameter> to read.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated output buffer that will hold ASN.1 field data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>datalen</parameter>&nbsp;:</term>
<listitem><simpara> actual size of output buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful,
  SHISHI_ASN1_NO_VALUE if the field has no value, ot
  SHISHI_ASN1_ERROR otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-write" role="function">
<title>shishi_asn1_write ()</title>
<indexterm zone="shishi-asn1-write"><primary>shishi_asn1_write</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_write                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> datalen);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>datalen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-write-integer" role="function">
<title>shishi_asn1_write_integer ()</title>
<indexterm zone="shishi-asn1-write-integer"><primary>shishi_asn1_write_integer</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_write_integer           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="int">int</link> n);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-write-int32" role="function">
<title>shishi_asn1_write_int32 ()</title>
<indexterm zone="shishi-asn1-write-int32"><primary>shishi_asn1_write_int32</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_write_int32             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="int32-t">int32_t</link> n);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-write-uint32" role="function">
<title>shishi_asn1_write_uint32 ()</title>
<indexterm zone="shishi-asn1-write-uint32"><primary>shishi_asn1_write_uint32</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_write_uint32            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="uint32-t">uint32_t</link> n);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-write-bitstring" role="function">
<title>shishi_asn1_write_bitstring ()</title>
<indexterm zone="shishi-asn1-write-bitstring"><primary>shishi_asn1_write_bitstring</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_write_bitstring         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="uint32-t">uint32_t</link> flags);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-done" role="function">
<title>shishi_asn1_done ()</title>
<indexterm zone="shishi-asn1-done"><primary>shishi_asn1_done</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_asn1_done                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node);</programlisting>
<para>
Deallocate resources associated with ASN.1 structure.  Note that
the node must not be used after this call.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 node to dellocate.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-pa-enc-ts-enc" role="function">
<title>shishi_asn1_pa_enc_ts_enc ()</title>
<indexterm zone="shishi-asn1-pa-enc-ts-enc"><primary>shishi_asn1_pa_enc_ts_enc</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_pa_enc_ts_enc           (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for PA-ENC-TS-ENC.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-encrypteddata" role="function">
<title>shishi_asn1_encrypteddata ()</title>
<indexterm zone="shishi-asn1-encrypteddata"><primary>shishi_asn1_encrypteddata</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_encrypteddata           (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for EncryptedData</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-padata" role="function">
<title>shishi_asn1_padata ()</title>
<indexterm zone="shishi-asn1-padata"><primary>shishi_asn1_padata</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_padata                  (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for PA-DATA.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-methoddata" role="function">
<title>shishi_asn1_methoddata ()</title>
<indexterm zone="shishi-asn1-methoddata"><primary>shishi_asn1_methoddata</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_methoddata              (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for METHOD-DATA.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-etype-info" role="function">
<title>shishi_asn1_etype_info ()</title>
<indexterm zone="shishi-asn1-etype-info"><primary>shishi_asn1_etype_info</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_etype_info              (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for ETYPE-INFO.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-etype-info2" role="function">
<title>shishi_asn1_etype_info2 ()</title>
<indexterm zone="shishi-asn1-etype-info2"><primary>shishi_asn1_etype_info2</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_etype_info2             (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for ETYPE-INFO2.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-asreq" role="function">
<title>shishi_asn1_asreq ()</title>
<indexterm zone="shishi-asn1-asreq"><primary>shishi_asn1_asreq</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_asreq                   (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for AS-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-asrep" role="function">
<title>shishi_asn1_asrep ()</title>
<indexterm zone="shishi-asn1-asrep"><primary>shishi_asn1_asrep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_asrep                   (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for AS-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-tgsreq" role="function">
<title>shishi_asn1_tgsreq ()</title>
<indexterm zone="shishi-asn1-tgsreq"><primary>shishi_asn1_tgsreq</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_tgsreq                  (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for TGS-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-tgsrep" role="function">
<title>shishi_asn1_tgsrep ()</title>
<indexterm zone="shishi-asn1-tgsrep"><primary>shishi_asn1_tgsrep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_tgsrep                  (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for TGS-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-apreq" role="function">
<title>shishi_asn1_apreq ()</title>
<indexterm zone="shishi-asn1-apreq"><primary>shishi_asn1_apreq</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_apreq                   (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for AP-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-aprep" role="function">
<title>shishi_asn1_aprep ()</title>
<indexterm zone="shishi-asn1-aprep"><primary>shishi_asn1_aprep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_aprep                   (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for AP-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-ticket" role="function">
<title>shishi_asn1_ticket ()</title>
<indexterm zone="shishi-asn1-ticket"><primary>shishi_asn1_ticket</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_ticket                  (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for Ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-encapreppart" role="function">
<title>shishi_asn1_encapreppart ()</title>
<indexterm zone="shishi-asn1-encapreppart"><primary>shishi_asn1_encapreppart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_encapreppart            (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for AP-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-encticketpart" role="function">
<title>shishi_asn1_encticketpart ()</title>
<indexterm zone="shishi-asn1-encticketpart"><primary>shishi_asn1_encticketpart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_encticketpart           (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for EncTicketPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-authenticator" role="function">
<title>shishi_asn1_authenticator ()</title>
<indexterm zone="shishi-asn1-authenticator"><primary>shishi_asn1_authenticator</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_authenticator           (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-enckdcreppart" role="function">
<title>shishi_asn1_enckdcreppart ()</title>
<indexterm zone="shishi-asn1-enckdcreppart"><primary>shishi_asn1_enckdcreppart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_enckdcreppart           (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for EncKDCRepPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-encasreppart" role="function">
<title>shishi_asn1_encasreppart ()</title>
<indexterm zone="shishi-asn1-encasreppart"><primary>shishi_asn1_encasreppart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_encasreppart            (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for EncASRepPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-krberror" role="function">
<title>shishi_asn1_krberror ()</title>
<indexterm zone="shishi-asn1-krberror"><primary>shishi_asn1_krberror</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_krberror                (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for KRB-ERROR.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-krbsafe" role="function">
<title>shishi_asn1_krbsafe ()</title>
<indexterm zone="shishi-asn1-krbsafe"><primary>shishi_asn1_krbsafe</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_krbsafe                 (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for KRB-SAFE.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-priv" role="function">
<title>shishi_asn1_priv ()</title>
<indexterm zone="shishi-asn1-priv"><primary>shishi_asn1_priv</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_priv                    (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for KRB-PRIV.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-encprivpart" role="function">
<title>shishi_asn1_encprivpart ()</title>
<indexterm zone="shishi-asn1-encprivpart"><primary>shishi_asn1_encprivpart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_asn1_encprivpart             (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Create new ASN.1 structure for EncKrbPrivPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-to-der" role="function">
<title>shishi_asn1_to_der ()</title>
<indexterm zone="shishi-asn1-to-der"><primary>shishi_asn1_to_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_to_der                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         <link linkend="char">char</link> **der,
                                                         <link linkend="size-t">size_t</link> *len);</programlisting>
<para>
Extract newly allocated DER representation of specified ASN.1 data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 data to convert to DER.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> output array that holds DER encoding of <parameter>node</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> output variable with length of <parameter>der</parameter> output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful, or SHISHI_ASN1_ERROR
  if DER encoding fails (common reasons for this is that the ASN.1
  is missing required values).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-to-der-field" role="function">
<title>shishi_asn1_to_der_field ()</title>
<indexterm zone="shishi-asn1-to-der-field"><primary>shishi_asn1_to_der_field</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_asn1_to_der_field            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="char">char</link> **der,
                                                         <link linkend="size-t">size_t</link> *len);</programlisting>
<para>
Extract newly allocated DER representation of specified ASN.1 field.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 data that have field to extract.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara> name of field in <parameter>node</parameter> to extract.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> output array that holds DER encoding of <parameter>field</parameter> in <parameter>node</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> output variable with length of <parameter>der</parameter> output array.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful, or SHISHI_ASN1_ERROR
  if DER encoding fails (common reasons for this is that the ASN.1
  is missing required values).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-msgtype" role="function">
<title>shishi_asn1_msgtype ()</title>
<indexterm zone="shishi-asn1-msgtype"><primary>shishi_asn1_msgtype</primary></indexterm><programlisting><link linkend="Shishi-msgtype">Shishi_msgtype</link>      shishi_asn1_msgtype                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node);</programlisting>
<para>
Determine msg-type of ASN.1 type of a packet. Currently this uses
the msg-type field instead of the APPLICATION tag, but this may be
changed in the future.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 type to get msg type for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns msg-type of ASN.1 type, 0 on failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der-msgtype" role="function">
<title>shishi_der_msgtype ()</title>
<indexterm zone="shishi-der-msgtype"><primary>shishi_der_msgtype</primary></indexterm><programlisting><link linkend="Shishi-msgtype">Shishi_msgtype</link>      shishi_der_msgtype                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Determine msg-type of DER coded data of a packet.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns msg-type of DER data, 0 on failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-asn1-print" role="function">
<title>shishi_asn1_print ()</title>
<indexterm zone="shishi-asn1-print"><primary>shishi_asn1_print</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_asn1_print                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);</programlisting>
<para>
Print ASN.1 structure in human readable form, typically for
debugging purposes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> ASN.1 data that have field to extract.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file descriptor to print to, e.g. stdout.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1" role="function">
<title>shishi_der2asn1 ()</title>
<indexterm zone="shishi-der2asn1"><primary>shishi_der2asn1</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1                     (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Convert arbitrary DER data of a packet to a ASN.1 type.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns newly allocate ASN.1 corresponding to DER
  data, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> on failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-padata" role="function">
<title>shishi_der2asn1_padata ()</title>
<indexterm zone="shishi-der2asn1-padata"><primary>shishi_der2asn1_padata</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_padata              (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of PA-DATA and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-methoddata" role="function">
<title>shishi_der2asn1_methoddata ()</title>
<indexterm zone="shishi-der2asn1-methoddata"><primary>shishi_der2asn1_methoddata</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_methoddata          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of METHOD-DATA and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-etype-info" role="function">
<title>shishi_der2asn1_etype_info ()</title>
<indexterm zone="shishi-der2asn1-etype-info"><primary>shishi_der2asn1_etype_info</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_etype_info          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of ETYPE-INFO and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-etype-info2" role="function">
<title>shishi_der2asn1_etype_info2 ()</title>
<indexterm zone="shishi-der2asn1-etype-info2"><primary>shishi_der2asn1_etype_info2</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_etype_info2         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of ETYPE-INFO2 and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-ticket" role="function">
<title>shishi_der2asn1_ticket ()</title>
<indexterm zone="shishi-der2asn1-ticket"><primary>shishi_der2asn1_ticket</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_ticket              (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of Ticket and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-encticketpart" role="function">
<title>shishi_der2asn1_encticketpart ()</title>
<indexterm zone="shishi-der2asn1-encticketpart"><primary>shishi_der2asn1_encticketpart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_encticketpart       (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of EncTicketPart and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-asreq" role="function">
<title>shishi_der2asn1_asreq ()</title>
<indexterm zone="shishi-der2asn1-asreq"><primary>shishi_der2asn1_asreq</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_asreq               (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of AS-REQ and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-tgsreq" role="function">
<title>shishi_der2asn1_tgsreq ()</title>
<indexterm zone="shishi-der2asn1-tgsreq"><primary>shishi_der2asn1_tgsreq</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_tgsreq              (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of TGS-REQ and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-asrep" role="function">
<title>shishi_der2asn1_asrep ()</title>
<indexterm zone="shishi-der2asn1-asrep"><primary>shishi_der2asn1_asrep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_asrep               (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of AS-REP and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-tgsrep" role="function">
<title>shishi_der2asn1_tgsrep ()</title>
<indexterm zone="shishi-der2asn1-tgsrep"><primary>shishi_der2asn1_tgsrep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_tgsrep              (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of TGS-REP and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-kdcrep" role="function">
<title>shishi_der2asn1_kdcrep ()</title>
<indexterm zone="shishi-der2asn1-kdcrep"><primary>shishi_der2asn1_kdcrep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_kdcrep              (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of KDC-REP and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-kdcreq" role="function">
<title>shishi_der2asn1_kdcreq ()</title>
<indexterm zone="shishi-der2asn1-kdcreq"><primary>shishi_der2asn1_kdcreq</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_kdcreq              (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of AS-REQ, TGS-REQ or KDC-REQ and create a
ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-apreq" role="function">
<title>shishi_der2asn1_apreq ()</title>
<indexterm zone="shishi-der2asn1-apreq"><primary>shishi_der2asn1_apreq</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_apreq               (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of AP-REQ and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-aprep" role="function">
<title>shishi_der2asn1_aprep ()</title>
<indexterm zone="shishi-der2asn1-aprep"><primary>shishi_der2asn1_aprep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_aprep               (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of AP-REP and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-authenticator" role="function">
<title>shishi_der2asn1_authenticator ()</title>
<indexterm zone="shishi-der2asn1-authenticator"><primary>shishi_der2asn1_authenticator</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_authenticator       (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of Authenticator and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-krberror" role="function">
<title>shishi_der2asn1_krberror ()</title>
<indexterm zone="shishi-der2asn1-krberror"><primary>shishi_der2asn1_krberror</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_krberror            (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of KRB-ERROR and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-krbsafe" role="function">
<title>shishi_der2asn1_krbsafe ()</title>
<indexterm zone="shishi-der2asn1-krbsafe"><primary>shishi_der2asn1_krbsafe</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_krbsafe             (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of KRB-SAFE and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-priv" role="function">
<title>shishi_der2asn1_priv ()</title>
<indexterm zone="shishi-der2asn1-priv"><primary>shishi_der2asn1_priv</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_priv                (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of KRB-PRIV and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-encasreppart" role="function">
<title>shishi_der2asn1_encasreppart ()</title>
<indexterm zone="shishi-der2asn1-encasreppart"><primary>shishi_der2asn1_encasreppart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_encasreppart        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of EncASRepPart and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-enctgsreppart" role="function">
<title>shishi_der2asn1_enctgsreppart ()</title>
<indexterm zone="shishi-der2asn1-enctgsreppart"><primary>shishi_der2asn1_enctgsreppart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_enctgsreppart       (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of EncTGSRepPart and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-enckdcreppart" role="function">
<title>shishi_der2asn1_enckdcreppart ()</title>
<indexterm zone="shishi-der2asn1-enckdcreppart"><primary>shishi_der2asn1_enckdcreppart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_enckdcreppart       (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of EncKDCRepPart and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-encapreppart" role="function">
<title>shishi_der2asn1_encapreppart ()</title>
<indexterm zone="shishi-der2asn1-encapreppart"><primary>shishi_der2asn1_encapreppart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_encapreppart        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of EncAPRepPart and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-der2asn1-encprivpart" role="function">
<title>shishi_der2asn1_encprivpart ()</title>
<indexterm zone="shishi-der2asn1-encprivpart"><primary>shishi_der2asn1_encprivpart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_der2asn1_encprivpart         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
Decode DER encoding of EncKrbPrivPart and create a ASN.1 structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input character array with DER encoding.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns ASN.1 structure corresponding to DER data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap" role="function">
<title>shishi_ap ()</title>
<indexterm zone="shishi-ap"><primary>shishi_ap</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap                           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap);</programlisting>
<para>
Create a new AP exchange with a random subkey of the default
encryption type from configuration.  Note that there is no
guarantee that the receiver will understand that key type, you
should probably use <link linkend="shishi-ap-etype"><function>shishi_ap_etype()</function></link> or <link linkend="shishi-ap-nosubkey"><function>shishi_ap_nosubkey()</function></link>
instead.  In the future, this function will likely behave as
<link linkend="shishi-ap-nosubkey"><function>shishi_ap_nosubkey()</function></link> and <link linkend="shishi-ap-nosubkey"><function>shishi_ap_nosubkey()</function></link> will be removed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> pointer to new structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-etype" role="function">
<title>shishi_ap_etype ()</title>
<indexterm zone="shishi-ap-etype"><primary>shishi_ap_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_etype                     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap,
                                                         <link linkend="int">int</link> etype);</programlisting>
<para>
Create a new AP exchange with a random subkey of indicated
encryption type.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> pointer to new structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> encryption type of newly generated random subkey.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-nosubkey" role="function">
<title>shishi_ap_nosubkey ()</title>
<indexterm zone="shishi-ap-nosubkey"><primary>shishi_ap_nosubkey</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_nosubkey                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap);</programlisting>
<para>
Create a new AP exchange without subkey in authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> pointer to new structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-done" role="function">
<title>shishi_ap_done ()</title>
<indexterm zone="shishi-ap-done"><primary>shishi_ap_done</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_ap_done                      (<link linkend="Shishi-ap">Shishi_ap</link> *ap);</programlisting>
<para>
Deallocate resources associated with AP exchange.  This should be
called by the application when it no longer need to utilize the AP
exchange handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-set-tktoptions" role="function">
<title>shishi_ap_set_tktoptions ()</title>
<indexterm zone="shishi-ap-set-tktoptions"><primary>shishi_ap_set_tktoptions</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_set_tktoptions            (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options);</programlisting>
<para>
Set the ticket (see <link linkend="shishi-ap-tkt-set"><function>shishi_ap_tkt_set()</function></link>) and set the AP-REQ
apoptions (see <link linkend="shishi-apreq-options-set"><function>shishi_apreq_options_set()</function></link>).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to set in AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ options to set in AP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-tktoptions" role="function">
<title>shishi_ap_tktoptions ()</title>
<indexterm zone="shishi-ap-tktoptions"><primary>shishi_ap_tktoptions</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_tktoptions                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options);</programlisting>
<para>
Create a new AP exchange using <link linkend="shishi-ap"><function>shishi_ap()</function></link>, and set the ticket and
AP-REQ apoptions using <link linkend="shishi-ap-set-tktoption"><function>shishi_ap_set_tktoption()</function></link>.  A random session
key is added to the authenticator, using the same keytype as the
ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> pointer to new structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to set in newly created AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ options to set in newly created AP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-etype-tktoptionsdata" role="function">
<title>shishi_ap_etype_tktoptionsdata ()</title>
<indexterm zone="shishi-ap-etype-tktoptionsdata"><primary>shishi_ap_etype_tktoptionsdata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_etype_tktoptionsdata      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len);</programlisting>
<para>
Create a new AP exchange using <link linkend="shishi-ap"><function>shishi_ap()</function></link>, and set the ticket,
AP-REQ apoptions and the Authenticator checksum data using
<link linkend="shishi-ap-set-tktoptionsdata"><function>shishi_ap_set_tktoptionsdata()</function></link>. A random session key is added to
the authenticator, using the same keytype as the ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> pointer to new structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> encryption type of newly generated random subkey.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to set in newly created AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ options to set in newly created AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to checksum in Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with data to checksum in Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-set-tktoptionsdata" role="function">
<title>shishi_ap_set_tktoptionsdata ()</title>
<indexterm zone="shishi-ap-set-tktoptionsdata"><primary>shishi_ap_set_tktoptionsdata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_set_tktoptionsdata        (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len);</programlisting>
<para>
Set the ticket (see <link linkend="shishi-ap-tkt-set"><function>shishi_ap_tkt_set()</function></link>) and set the AP-REQ
apoptions (see <link linkend="shishi-apreq-options-set"><function>shishi_apreq_options_set()</function></link>) and set the
Authenticator checksum data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to set in AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ options to set in AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to checksum in Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with data to checksum in Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-tktoptionsdata" role="function">
<title>shishi_ap_tktoptionsdata ()</title>
<indexterm zone="shishi-ap-tktoptionsdata"><primary>shishi_ap_tktoptionsdata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_tktoptionsdata            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len);</programlisting>
<para>
Create a new AP exchange using <link linkend="shishi-ap"><function>shishi_ap()</function></link>, and set the ticket,
AP-REQ apoptions and the Authenticator checksum data using
<link linkend="shishi-ap-set-tktoptionsdata"><function>shishi_ap_set_tktoptionsdata()</function></link>. A random session key is added to
the authenticator, using the same keytype as the ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> pointer to new structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to set in newly created AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ options to set in newly created AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to checksum in Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with data to checksum in Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-set-tktoptionsraw" role="function">
<title>shishi_ap_set_tktoptionsraw ()</title>
<indexterm zone="shishi-ap-set-tktoptionsraw"><primary>shishi_ap_set_tktoptionsraw</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_set_tktoptionsraw         (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         <link linkend="int32-t">int32_t</link> cksumtype,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len);</programlisting>
<para>
Set the ticket (see <link linkend="shishi-ap-tkt-set"><function>shishi_ap_tkt_set()</function></link>) and set the AP-REQ
apoptions (see <link linkend="shishi-apreq-options-set"><function>shishi_apreq_options_set()</function></link>) and set the raw
Authenticator checksum data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to set in AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ options to set in AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumtype</parameter>&nbsp;:</term>
<listitem><simpara> authenticator checksum type to set in AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to store in checksum field in Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with data to store in checksum field in
  Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-tktoptionsraw" role="function">
<title>shishi_ap_tktoptionsraw ()</title>
<indexterm zone="shishi-ap-tktoptionsraw"><primary>shishi_ap_tktoptionsraw</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_tktoptionsraw             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         <link linkend="int32-t">int32_t</link> cksumtype,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len);</programlisting>
<para>
Create a new AP exchange using <link linkend="shishi-ap"><function>shishi_ap()</function></link>, and set the ticket,
AP-REQ apoptions and the raw Authenticator checksum data field
using <link linkend="shishi-ap-set-tktoptionsraw"><function>shishi_ap_set_tktoptionsraw()</function></link>.  A random session key is added
to the authenticator, using the same keytype as the ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> pointer to new structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to set in newly created AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ options to set in newly created AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumtype</parameter>&nbsp;:</term>
<listitem><simpara> authenticator checksum type to set in AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to store in checksum field in Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with data to store in checksum field in
  Authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-set-tktoptionsasn1usage" role="function">
<title>shishi_ap_set_tktoptionsasn1usage ()</title>
<indexterm zone="shishi-ap-set-tktoptionsasn1usage"><primary>shishi_ap_set_tktoptionsasn1usage</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_set_tktoptionsasn1usage   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="int">int</link> authenticatorcksumkeyusage,
                                                         <link linkend="int">int</link> authenticatorkeyusage);</programlisting>
<para>
Set ticket, options and authenticator checksum data using
<link linkend="shishi-ap-set-tktoptionsdata"><function>shishi_ap_set_tktoptionsdata()</function></link>.  The authenticator checksum data is
the DER encoding of the ASN.1 field provided.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to set in AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ options to set in AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> input ASN.1 structure to store as authenticator checksum data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara> field in ASN.1 structure to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticatorcksumkeyusage</parameter>&nbsp;:</term>
<listitem><simpara> key usage for checksum in authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticatorkeyusage</parameter>&nbsp;:</term>
<listitem><simpara> key usage for authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-tktoptionsasn1usage" role="function">
<title>shishi_ap_tktoptionsasn1usage ()</title>
<indexterm zone="shishi-ap-tktoptionsasn1usage"><primary>shishi_ap_tktoptionsasn1usage</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_tktoptionsasn1usage       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-ap">Shishi_ap</link> **ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         <link linkend="int">int</link> options,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> node,
                                                         const <link linkend="char">char</link> *field,
                                                         <link linkend="int">int</link> authenticatorcksumkeyusage,
                                                         <link linkend="int">int</link> authenticatorkeyusage);</programlisting>
<para>
Create a new AP exchange using <link linkend="shishi-ap"><function>shishi_ap()</function></link>, and set ticket, options
and authenticator checksum data from the DER encoding of the ASN.1
field using <link linkend="shishi-ap-set-tktoptionsasn1usage"><function>shishi_ap_set_tktoptionsasn1usage()</function></link>.  A random session
key is added to the authenticator, using the same keytype as the
ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> pointer to new structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to set in newly created AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ options to set in newly created AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara> input ASN.1 structure to store as authenticator checksum data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>field</parameter>&nbsp;:</term>
<listitem><simpara> field in ASN.1 structure to use.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticatorcksumkeyusage</parameter>&nbsp;:</term>
<listitem><simpara> key usage for checksum in authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticatorkeyusage</parameter>&nbsp;:</term>
<listitem><simpara> key usage for authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-tkt" role="function">
<title>shishi_ap_tkt ()</title>
<indexterm zone="shishi-ap-tkt"><primary>shishi_ap_tkt</primary></indexterm><programlisting><link linkend="Shishi-tkt">Shishi_tkt</link>*         shishi_ap_tkt                       (<link linkend="Shishi-ap">Shishi_ap</link> *ap);</programlisting>
<para>
Get Ticket from AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the ticket from the AP exchange, or NULL if
              not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-tkt-set" role="function">
<title>shishi_ap_tkt_set ()</title>
<indexterm zone="shishi-ap-tkt-set"><primary>shishi_ap_tkt_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_ap_tkt_set                   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt);</programlisting>
<para>
Set the Ticket in the AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> ticket to store in AP.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-authenticator-cksumdata" role="function">
<title>shishi_ap_authenticator_cksumdata ()</title>
<indexterm zone="shishi-ap-authenticator-cksumdata"><primary>shishi_ap_authenticator_cksumdata</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_authenticator_cksumdata   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="char">char</link> *out,
                                                         <link linkend="size-t">size_t</link> *len);</programlisting>
<para>
Get checksum data from Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array that holds authenticator checksum data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> on input, maximum length of output array that holds
      authenticator checksum data, on output actual length of
      output array that holds authenticator checksum data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK if successful, or
SHISHI_TOO_SMALL_BUFFER if buffer provided was too small.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-authenticator-cksumdata-set" role="function">
<title>shishi_ap_authenticator_cksumdata_set ()</title>
<indexterm zone="shishi-ap-authenticator-cksumdata-set"><primary>shishi_ap_authenticator_cksumdata_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_ap_authenticator_cksumdata_set
                                                        (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         const <link linkend="char">char</link> *authenticatorcksumdata,
                                                         <link linkend="size-t">size_t</link> authenticatorcksumdatalen);</programlisting>
<para>
Set the Authenticator Checksum Data in the AP exchange.  This is
the data that will be checksumed, and the checksum placed in the
checksum field.  It is not the actual checksum field.  See also
shishi_ap_authenticator_cksumraw_set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticatorcksumdata</parameter>&nbsp;:</term>
<listitem><simpara> input array with data to compute checksum
  on and store in Authenticator in AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticatorcksumdatalen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with data to
  compute checksum on and store in Authenticator in AP-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-authenticator-cksumraw-set" role="function">
<title>shishi_ap_authenticator_cksumraw_set ()</title>
<indexterm zone="shishi-ap-authenticator-cksumraw-set"><primary>shishi_ap_authenticator_cksumraw_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_ap_authenticator_cksumraw_set
                                                        (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="int32-t">int32_t</link> authenticatorcksumtype,
                                                         const <link linkend="char">char</link> *authenticatorcksumraw,
                                                         <link linkend="size-t">size_t</link> authenticatorcksumrawlen);</programlisting>
<para>
Set the Authenticator Checksum Data in the AP exchange.  This is
the actual checksum field, not data to compute checksum on and then
store in the checksum field.  See also
shishi_ap_authenticator_cksumdata_set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticatorcksumtype</parameter>&nbsp;:</term>
<listitem><simpara> authenticator checksum type to set in AP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticatorcksumraw</parameter>&nbsp;:</term>
<listitem><simpara> input array with authenticator checksum
  field value to set in Authenticator in AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticatorcksumrawlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with
  authenticator checksum field value to set in Authenticator in AP-REQ.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-authenticator-cksumtype" role="function">
<title>shishi_ap_authenticator_cksumtype ()</title>
<indexterm zone="shishi-ap-authenticator-cksumtype"><primary>shishi_ap_authenticator_cksumtype</primary></indexterm><programlisting><link linkend="int32-t">int32_t</link>             shishi_ap_authenticator_cksumtype   (<link linkend="Shishi-ap">Shishi_ap</link> *ap);</programlisting>
<para>
Get the Authenticator Checksum Type in the AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return the authenticator checksum type.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-authenticator-cksumtype-set" role="function">
<title>shishi_ap_authenticator_cksumtype_set ()</title>
<indexterm zone="shishi-ap-authenticator-cksumtype-set"><primary>shishi_ap_authenticator_cksumtype_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_ap_authenticator_cksumtype_set
                                                        (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="int32-t">int32_t</link> cksumtype);</programlisting>
<para>
Set the Authenticator Checksum Type in the AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumtype</parameter>&nbsp;:</term>
<listitem><simpara> authenticator checksum type to set in AP.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-authenticator" role="function">
<title>shishi_ap_authenticator ()</title>
<indexterm zone="shishi-ap-authenticator"><primary>shishi_ap_authenticator</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_ap_authenticator             (<link linkend="Shishi-ap">Shishi_ap</link> *ap);</programlisting>
<para>
Get ASN.1 Authenticator structure from AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the Authenticator from the AP exchange, or
              NULL if not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-authenticator-set" role="function">
<title>shishi_ap_authenticator_set ()</title>
<indexterm zone="shishi-ap-authenticator-set"><primary>shishi_ap_authenticator_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_ap_authenticator_set         (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);</programlisting>
<para>
Set the Authenticator in the AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator to store in AP.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-req" role="function">
<title>shishi_ap_req ()</title>
<indexterm zone="shishi-ap-req"><primary>shishi_ap_req</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_ap_req                       (<link linkend="Shishi-ap">Shishi_ap</link> *ap);</programlisting>
<para>
Get ASN.1 AP-REQ structure from AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the AP-REQ from the AP exchange, or NULL if
              not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-req-set" role="function">
<title>shishi_ap_req_set ()</title>
<indexterm zone="shishi-ap-req-set"><primary>shishi_ap_req_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_ap_req_set                   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq);</programlisting>
<para>
Set the AP-REQ in the AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> apreq to store in AP.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-req-der" role="function">
<title>shishi_ap_req_der ()</title>
<indexterm zone="shishi-ap-req-der"><primary>shishi_ap_req_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_req_der                   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Build AP-REQ using <link linkend="shishi-ap-req-build"><function>shishi_ap_req_build()</function></link> and DER encode it.  <parameter>out</parameter>
is allocated by this function, and it is the responsibility of
caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> pointer to output array with der encoding of AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of output array with der encoding of AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-req-der-set" role="function">
<title>shishi_ap_req_der_set ()</title>
<indexterm zone="shishi-ap-req-der-set"><primary>shishi_ap_req_der_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_req_der_set               (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
DER decode AP-REQ and set it AP exchange.  If decoding fails, the
AP-REQ in the AP exchange is lost.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input array with DER encoded AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with DER encoded AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-req-build" role="function">
<title>shishi_ap_req_build ()</title>
<indexterm zone="shishi-ap-req-build"><primary>shishi_ap_req_build</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_req_build                 (<link linkend="Shishi-ap">Shishi_ap</link> *ap);</programlisting>
<para>
Checksum data in authenticator and add ticket and authenticator to
AP-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-req-asn1" role="function">
<title>shishi_ap_req_asn1 ()</title>
<indexterm zone="shishi-ap-req-asn1"><primary>shishi_ap_req_asn1</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_req_asn1                  (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *apreq);</programlisting>
<para>
Build AP-REQ using <link linkend="shishi-ap-req-build"><function>shishi_ap_req_build()</function></link> and return it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> output AP-REQ variable.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-key" role="function">
<title>shishi_ap_key ()</title>
<indexterm zone="shishi-ap-key"><primary>shishi_ap_key</primary></indexterm><programlisting><link linkend="Shishi-key">Shishi_key</link>*         shishi_ap_key                       (<link linkend="Shishi-ap">Shishi_ap</link> *ap);</programlisting>
<para>
Extract the application key from AP.  If subkeys are used, it is
taken from the Authenticator, otherwise the session key is used.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return application key from AP.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-req-decode" role="function">
<title>shishi_ap_req_decode ()</title>
<indexterm zone="shishi-ap-req-decode"><primary>shishi_ap_req_decode</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_req_decode                (<link linkend="Shishi-ap">Shishi_ap</link> *ap);</programlisting>
<para>
Decode ticket in AP-REQ and set the Ticket fields in the AP
exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-req-process" role="function">
<title>shishi_ap_req_process ()</title>
<indexterm zone="shishi-ap-req-process"><primary>shishi_ap_req_process</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_req_process               (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Decrypt ticket in AP-REQ using supplied key and decrypt
Authenticator in AP-REQ using key in decrypted ticket, and on
success set the Ticket and Authenticator fields in the AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> cryptographic key used to decrypt ticket in AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-req-process-keyusage" role="function">
<title>shishi_ap_req_process_keyusage ()</title>
<indexterm zone="shishi-ap-req-process-keyusage"><primary>shishi_ap_req_process_keyusage</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_req_process_keyusage      (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int32-t">int32_t</link> keyusage);</programlisting>
<para>
Decrypt ticket in AP-REQ using supplied key and decrypt
Authenticator in AP-REQ using key in decrypted ticket, and on
success set the Ticket and Authenticator fields in the AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> cryptographic key used to decrypt ticket in AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> key usage to use during decryption, for normal
  AP-REQ's this is normally SHISHI_KEYUSAGE_APREQ_AUTHENTICATOR,
  for AP-REQ's part of TGS-REQ's, this is normally
  SHISHI_KEYUSAGE_TGSREQ_APREQ_AUTHENTICATOR.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-rep" role="function">
<title>shishi_ap_rep ()</title>
<indexterm zone="shishi-ap-rep"><primary>shishi_ap_rep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_ap_rep                       (<link linkend="Shishi-ap">Shishi_ap</link> *ap);</programlisting>
<para>
Get ASN.1 AP-REP structure from AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the AP-REP from the AP exchange, or NULL if
              not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-rep-set" role="function">
<title>shishi_ap_rep_set ()</title>
<indexterm zone="shishi-ap-rep-set"><primary>shishi_ap_rep_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_ap_rep_set                   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep);</programlisting>
<para>
Set the AP-REP in the AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara> aprep to store in AP.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-rep-der" role="function">
<title>shishi_ap_rep_der ()</title>
<indexterm zone="shishi-ap-rep-der"><primary>shishi_ap_rep_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_rep_der                   (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
Build AP-REP using <link linkend="shishi-ap-rep-build"><function>shishi_ap_rep_build()</function></link> and DER encode it.  <parameter>out</parameter>
is allocated by this function, and it is the responsibility of
caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated DER encoding of AP-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> length of output array with DER encoding of AP-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-rep-der-set" role="function">
<title>shishi_ap_rep_der_set ()</title>
<indexterm zone="shishi-ap-rep-der-set"><primary>shishi_ap_rep_der_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_rep_der_set               (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
DER decode AP-REP and set it AP exchange.  If decoding fails, the
AP-REP in the AP exchange remains.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input array with DER encoded AP-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with DER encoded AP-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-rep-verify" role="function">
<title>shishi_ap_rep_verify ()</title>
<indexterm zone="shishi-ap-rep-verify"><primary>shishi_ap_rep_verify</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_rep_verify                (<link linkend="Shishi-ap">Shishi_ap</link> *ap);</programlisting>
<para>
Verify AP-REP compared to Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK, SHISHI_APREP_VERIFY_FAILED or an
error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-rep-verify-der" role="function">
<title>shishi_ap_rep_verify_der ()</title>
<indexterm zone="shishi-ap-rep-verify-der"><primary>shishi_ap_rep_verify_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_rep_verify_der            (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
DER decode AP-REP and set it in AP exchange using
<link linkend="shishi-ap-rep-der-set"><function>shishi_ap_rep_der_set()</function></link> and verify it using <link linkend="shishi-ap-rep-verify"><function>shishi_ap_rep_verify()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input array with DER encoded AP-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with DER encoded AP-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK, SHISHI_APREP_VERIFY_FAILED or an
error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-rep-verify-asn1" role="function">
<title>shishi_ap_rep_verify_asn1 ()</title>
<indexterm zone="shishi-ap-rep-verify-asn1"><primary>shishi_ap_rep_verify_asn1</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_rep_verify_asn1           (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep);</programlisting>
<para>
Set the AP-REP in the AP exchange using <link linkend="shishi-ap-rep-set"><function>shishi_ap_rep_set()</function></link> and
verify it using <link linkend="shishi-ap-rep-verify"><function>shishi_ap_rep_verify()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara> input AP-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK, SHISHI_APREP_VERIFY_FAILED or an
error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-rep-asn1" role="function">
<title>shishi_ap_rep_asn1 ()</title>
<indexterm zone="shishi-ap-rep-asn1"><primary>shishi_ap_rep_asn1</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_rep_asn1                  (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *aprep);</programlisting>
<para>
Build AP-REP using <link linkend="shishi-ap-rep-build"><function>shishi_ap_rep_build()</function></link> and return it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara> output AP-REP variable.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-rep-build" role="function">
<title>shishi_ap_rep_build ()</title>
<indexterm zone="shishi-ap-rep-build"><primary>shishi_ap_rep_build</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_ap_rep_build                 (<link linkend="Shishi-ap">Shishi_ap</link> *ap);</programlisting>
<para>
Checksum data in authenticator and add ticket and authenticator to
AP-REP.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-encapreppart" role="function">
<title>shishi_ap_encapreppart ()</title>
<indexterm zone="shishi-ap-encapreppart"><primary>shishi_ap_encapreppart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_ap_encapreppart              (<link linkend="Shishi-ap">Shishi_ap</link> *ap);</programlisting>
<para>
Get ASN.1 EncAPRepPart structure from AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the EncAPREPPart from the AP exchange, or
              NULL if not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-encapreppart-set" role="function">
<title>shishi_ap_encapreppart_set ()</title>
<indexterm zone="shishi-ap-encapreppart-set"><primary>shishi_ap_encapreppart_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_ap_encapreppart_set          (<link linkend="Shishi-ap">Shishi_ap</link> *ap,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart);</programlisting>
<para>
Set the EncAPRepPart in the AP exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ap</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about AP exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncAPRepPart to store in AP.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-option2string" role="function">
<title>shishi_ap_option2string ()</title>
<indexterm zone="shishi-ap-option2string"><primary>shishi_ap_option2string</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_ap_option2string             (<link linkend="Shishi-apoptions">Shishi_apoptions</link> option);</programlisting>
<para>
Convert AP-Option type to AP-Option name string.  Note that <parameter>option</parameter>
must be just one of the AP-Option types, it cannot be an binary
ORed indicating several AP-Options.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>option</parameter>&nbsp;:</term>
<listitem><simpara> enumerated AP-Option type, see Shishi_apoptions.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns static string with name of AP-Option that
  must not be deallocated, or "unknown" if AP-Option was not understood.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-ap-string2option" role="function">
<title>shishi_ap_string2option ()</title>
<indexterm zone="shishi-ap-string2option"><primary>shishi_ap_string2option</primary></indexterm><programlisting><link linkend="Shishi-apoptions">Shishi_apoptions</link>    shishi_ap_string2option             (const <link linkend="char">char</link> *str);</programlisting>
<para>
Convert AP-Option name to AP-Option type.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>str</parameter>&nbsp;:</term>
<listitem><simpara> zero terminated character array with name of AP-Option,
  e.g. "use-session-key".
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns enumerated type member corresponding to AP-Option,
  or 0 if string was not understood.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-principal" role="function">
<title>shishi_key_principal ()</title>
<indexterm zone="shishi-key-principal"><primary>shishi_key_principal</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_key_principal                (const <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Get the principal part of the key owner principal name, i.e.,
except the realm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the principal owning the key.  (Not a copy of
it, so don't modify or deallocate it.)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-principal-set" role="function">
<title>shishi_key_principal_set ()</title>
<indexterm zone="shishi-key-principal-set"><primary>shishi_key_principal_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_key_principal_set            (<link linkend="Shishi-key">Shishi_key</link> *key,
                                                         const <link linkend="char">char</link> *principal);</programlisting>
<para>
Set the principal owning the key. The string is copied into the
key, so you can dispose of the variable immediately after calling
this function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds key information
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>principal</parameter>&nbsp;:</term>
<listitem><simpara> string with new principal name.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-realm" role="function">
<title>shishi_key_realm ()</title>
<indexterm zone="shishi-key-realm"><primary>shishi_key_realm</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_key_realm                    (const <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Get the realm part of the key owner principal name.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the realm for the principal owning the key.
(Not a copy of it, so don't modify or deallocate it.)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-realm-set" role="function">
<title>shishi_key_realm_set ()</title>
<indexterm zone="shishi-key-realm-set"><primary>shishi_key_realm_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_key_realm_set                (<link linkend="Shishi-key">Shishi_key</link> *key,
                                                         const <link linkend="char">char</link> *realm);</programlisting>
<para>
Set the realm for the principal owning the key. The string is
copied into the key, so you can dispose of the variable immediately
after calling this function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds key information
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> string with new realm name.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-type" role="function">
<title>shishi_key_type ()</title>
<indexterm zone="shishi-key-type"><primary>shishi_key_type</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_key_type                     (const <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Get key type.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the type of key as an integer as described in
the standard.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-type-set" role="function">
<title>shishi_key_type_set ()</title>
<indexterm zone="shishi-key-type-set"><primary>shishi_key_type_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_key_type_set                 (<link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int32-t">int32_t</link> type);</programlisting>
<para>
Set the type of key in key structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds key information
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> type to set in key.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-value" role="function">
<title>shishi_key_value ()</title>
<indexterm zone="shishi-key-value"><primary>shishi_key_value</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_key_value                    (const <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Get the raw key bytes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the key value as a pointer which is valid
throughout the lifetime of the key structure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-value-set" role="function">
<title>shishi_key_value_set ()</title>
<indexterm zone="shishi-key-value-set"><primary>shishi_key_value_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_key_value_set                (<link linkend="Shishi-key">Shishi_key</link> *key,
                                                         const <link linkend="char">char</link> *value);</programlisting>
<para>
Set the key value and length in key structure.  The value is copied
into the key (in other words, you can deallocate <parameter>value</parameter> right after
calling this function without modifying the value inside the key).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds key information
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> input array with key data.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-name" role="function">
<title>shishi_key_name ()</title>
<indexterm zone="shishi-key-name"><primary>shishi_key_name</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_key_name                     (<link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Calls shishi_cipher_name for key type.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return name of key.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-length" role="function">
<title>shishi_key_length ()</title>
<indexterm zone="shishi-key-length"><primary>shishi_key_length</primary></indexterm><programlisting><link linkend="size-t">size_t</link>              shishi_key_length                   (const <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Calls shishi_cipher_keylen for key type.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the length of the key value.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-version" role="function">
<title>shishi_key_version ()</title>
<indexterm zone="shishi-key-version"><primary>shishi_key_version</primary></indexterm><programlisting><link linkend="uint32-t">uint32_t</link>            shishi_key_version                  (const <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Get the "kvno" (key version) of key.  It will be UINT32_MAX if the
key is not long-lived.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the version of key ("kvno").
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-version-set" role="function">
<title>shishi_key_version_set ()</title>
<indexterm zone="shishi-key-version-set"><primary>shishi_key_version_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_key_version_set              (<link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="uint32-t">uint32_t</link> kvno);</programlisting>
<para>
Set the version of key ("kvno") in key structure.  Use UINT32_MAX
for non-ptermanent keys.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds key information
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kvno</parameter>&nbsp;:</term>
<listitem><simpara> new version integer.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key" role="function">
<title>shishi_key ()</title>
<indexterm zone="shishi-key"><primary>shishi_key</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_key                          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);</programlisting>
<para>
Create a new Key information structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> pointer to structure that will hold newly created key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-done" role="function">
<title>shishi_key_done ()</title>
<indexterm zone="shishi-key-done"><primary>shishi_key_done</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_key_done                     (<link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Deallocates key information structure.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> pointer to structure that holds key information.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-copy" role="function">
<title>shishi_key_copy ()</title>
<indexterm zone="shishi-key-copy"><primary>shishi_key_copy</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_key_copy                     (<link linkend="Shishi-key">Shishi_key</link> *dstkey,
                                                         <link linkend="Shishi-key">Shishi_key</link> *srckey);</programlisting>
<para>
Copies source key into existing allocated destination key.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dstkey</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds destination key information
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>srckey</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds source key information
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-print" role="function">
<title>shishi_key_print ()</title>
<indexterm zone="shishi-key-print"><primary>shishi_key_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_key_print                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         const <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Print an ASCII representation of a key structure to file
descriptor.  Example output:
</para>
<para>
-----BEGIN SHISHI KEY-----
Keytype: 18 (aes256-cts-hmac-sha1-96)
Principal: host/latte.josefsson.org
Realm: JOSEFSSON.ORG
Key-Version-Number: 1
</para>
<para>
P1QdeW/oSiag/bTyVEBAY2msiGSTmgLXlopuCKoppDs=
-----END SHISHI KEY-----</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle opened for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to print.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-to-file" role="function">
<title>shishi_key_to_file ()</title>
<indexterm zone="shishi-key-to-file"><primary>shishi_key_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_key_to_file                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Print an ASCII representation of a key structure to a file.  The
file is appended to if it exists.  See <link linkend="shishi-key-print"><function>shishi_key_print()</function></link> for
format of output.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> filename to append key to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to print.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-parse" role="function">
<title>shishi_key_parse ()</title>
<indexterm zone="shishi-key-parse"><primary>shishi_key_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_key_parse                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-random" role="function">
<title>shishi_key_random ()</title>
<indexterm zone="shishi-key-random"><primary>shishi_key_random</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_key_random                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> type,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);</programlisting>
<para>
Create a new Key information structure for the key type and some
random data.  KEY contains a newly allocated structure only if this
function is successful.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> type of key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> pointer to structure that will hold newly created key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-from-value" role="function">
<title>shishi_key_from_value ()</title>
<indexterm zone="shishi-key-from-value"><primary>shishi_key_from_value</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_key_from_value               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> type,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);</programlisting>
<para>
Create a new Key information structure, and set the key type and
key value. KEY contains a newly allocated structure only if this
function is successful.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> type of key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> input array with key value, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> pointer to structure that will hold newly created key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-from-base64" role="function">
<title>shishi_key_from_base64 ()</title>
<indexterm zone="shishi-key-from-base64"><primary>shishi_key_from_base64</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_key_from_base64              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> type,
                                                         const <link linkend="char">char</link> *value,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);</programlisting>
<para>
Create a new Key information structure, and set the key type and
key value. KEY contains a newly allocated structure only if this
function is successful.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> type of key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&nbsp;:</term>
<listitem><simpara> input string with base64 encoded key value, or NULL.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> pointer to structure that will hold newly created key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_INVALID_KEY if the base64 encoded key
              length doesn't match the key type, and SHISHI_OK on
              success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-from-random" role="function">
<title>shishi_key_from_random ()</title>
<indexterm zone="shishi-key-from-random"><primary>shishi_key_from_random</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_key_from_random              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> type,
                                                         const <link linkend="char">char</link> *rnd,
                                                         <link linkend="size-t">size_t</link> rndlen,
                                                         <link linkend="Shishi-key">Shishi_key</link> **outkey);</programlisting>
<para>
Create a new Key information structure, and set the key type and
key value using <link linkend="shishi-random-to-key"><function>shishi_random_to_key()</function></link>.  KEY contains a newly
allocated structure only if this function is successful.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> type of key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rnd</parameter>&nbsp;:</term>
<listitem><simpara> random data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rndlen</parameter>&nbsp;:</term>
<listitem><simpara> length of random data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outkey</parameter>&nbsp;:</term>
<listitem><simpara> pointer to structure that will hold newly created key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-from-string" role="function">
<title>shishi_key_from_string ()</title>
<indexterm zone="shishi-key-from-string"><primary>shishi_key_from_string</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_key_from_string              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> type,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="size-t">size_t</link> passwordlen,
                                                         const <link linkend="char">char</link> *salt,
                                                         <link linkend="size-t">size_t</link> saltlen,
                                                         const <link linkend="char">char</link> *parameter,
                                                         <link linkend="Shishi-key">Shishi_key</link> **outkey);</programlisting>
<para>
Create a new Key information structure, and set the key type and
key value using <link linkend="shishi-string-to-key"><function>shishi_string_to_key()</function></link>.  KEY contains a newly
allocated structure only if this function is successful.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> type of key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&nbsp;:</term>
<listitem><simpara> input array containing password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>passwordlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array containing password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>salt</parameter>&nbsp;:</term>
<listitem><simpara> input array containing salt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>saltlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array containing salt.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parameter</parameter>&nbsp;:</term>
<listitem><simpara> input array with opaque encryption type specific information.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outkey</parameter>&nbsp;:</term>
<listitem><simpara> pointer to structure that will hold newly created key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-key-from-name" role="function">
<title>shishi_key_from_name ()</title>
<indexterm zone="shishi-key-from-name"><primary>shishi_key_from_name</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_key_from_name                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="int32-t">int32_t</link> type,
                                                         const <link linkend="char">char</link> *name,
                                                         const <link linkend="char">char</link> *password,
                                                         <link linkend="size-t">size_t</link> passwordlen,
                                                         const <link linkend="char">char</link> *parameter,
                                                         <link linkend="Shishi-key">Shishi_key</link> **outkey);</programlisting>
<para>
Create a new Key information structure, and derive the key from
principal name and password using <link linkend="shishi-key-from-name"><function>shishi_key_from_name()</function></link>.  The salt
is derived from the principal name by concatenating the decoded
realm and principal.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> type of key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> principal name of user.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>password</parameter>&nbsp;:</term>
<listitem><simpara> input array containing password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>passwordlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array containing password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parameter</parameter>&nbsp;:</term>
<listitem><simpara> input array with opaque encryption type specific information.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outkey</parameter>&nbsp;:</term>
<listitem><simpara> pointer to structure that will hold newly created key information
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys" role="function">
<title>shishi_keys ()</title>
<indexterm zone="shishi-keys"><primary>shishi_keys</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_keys                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-keys">Shishi_keys</link> **keys);</programlisting>
<para>
Get a new key set handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keys</parameter>&nbsp;:</term>
<listitem><simpara> output pointer to newly allocated keys handle.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-done" role="function">
<title>shishi_keys_done ()</title>
<indexterm zone="shishi-keys-done"><primary>shishi_keys_done</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_keys_done                    (<link linkend="Shishi-keys">Shishi_keys</link> **keys);</programlisting>
<para>
Deallocates all resources associated with key set.  The key set
handle must not be used in calls to other shishi_keys_*() functions
after this.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>keys</parameter>&nbsp;:</term>
<listitem><simpara> key set handle as allocated by <link linkend="shishi-keys"><function>shishi_keys()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-size" role="function">
<title>shishi_keys_size ()</title>
<indexterm zone="shishi-keys-size"><primary>shishi_keys_size</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_keys_size                    (<link linkend="Shishi-keys">Shishi_keys</link> *keys);</programlisting>
<para>
Get size of key set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>keys</parameter>&nbsp;:</term>
<listitem><simpara> key set handle as allocated by <link linkend="shishi-keys"><function>shishi_keys()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns number of keys stored in key set.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-nth" role="function">
<title>shishi_keys_nth ()</title>
<indexterm zone="shishi-keys-nth"><primary>shishi_keys_nth</primary></indexterm><programlisting>const <link linkend="Shishi-key">Shishi_key</link>*   shishi_keys_nth                     (<link linkend="Shishi-keys">Shishi_keys</link> *keys,
                                                         <link linkend="int">int</link> keyno);</programlisting>
<para>
Get the n:th ticket in key set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>keys</parameter>&nbsp;:</term>
<listitem><simpara> key set handle as allocated by <link linkend="shishi-keys"><function>shishi_keys()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyno</parameter>&nbsp;:</term>
<listitem><simpara> integer indicating requested key in key set.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns a key handle to the keyno:th key in the key
  set, or NULL if <parameter>keys</parameter> is invalid or <parameter>keyno</parameter> is out of bounds.  The
  first key is <parameter>keyno</parameter> 0, the second key <parameter>keyno</parameter> 1, and so on.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-remove" role="function">
<title>shishi_keys_remove ()</title>
<indexterm zone="shishi-keys-remove"><primary>shishi_keys_remove</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_keys_remove                  (<link linkend="Shishi-keys">Shishi_keys</link> *keys,
                                                         <link linkend="int">int</link> keyno);</programlisting>
<para>
Remove a key, indexed by <parameter>keyno</parameter>, in given key set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>keys</parameter>&nbsp;:</term>
<listitem><simpara> key set handle as allocated by <link linkend="shishi-keys"><function>shishi_keys()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyno</parameter>&nbsp;:</term>
<listitem><simpara> key number of key in the set to remove.  The first
  key is key number 0.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-add" role="function">
<title>shishi_keys_add ()</title>
<indexterm zone="shishi-keys-add"><primary>shishi_keys_add</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_keys_add                     (<link linkend="Shishi-keys">Shishi_keys</link> *keys,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Add a key to the key set.  A deep copy of the key is stored, so
changing <parameter>key</parameter>, or deallocating it, will not modify the value stored
in the key set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>keys</parameter>&nbsp;:</term>
<listitem><simpara> key set handle as allocated by <link linkend="shishi-keys"><function>shishi_keys()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to be added to key set.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-add-keytab-mem" role="function">
<title>shishi_keys_add_keytab_mem ()</title>
<indexterm zone="shishi-keys-add-keytab-mem"><primary>shishi_keys_add_keytab_mem</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_keys_add_keytab_mem          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len,
                                                         <link linkend="Shishi-keys">Shishi_keys</link> *keys);</programlisting>
<para>
Read keys from a MIT keytab data structure, and add them to the key
set.
</para>
<para>
The format of keytab's is proprietary, and this function support
the 0x0501 and 0x0502 formats.  See the section The MIT Kerberos
Keytab Binary File Format in the Shishi manual for a description of
the reverse-engineered format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> constant memory buffer with keytab of <parameter>len</parameter> size.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> size of memory buffer with keytab data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keys</parameter>&nbsp;:</term>
<listitem><simpara> allocated key set to store keys in.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-KEYTAB-ERROR:CAPS"><literal>SHISHI_KEYTAB_ERROR</literal></link> if the data does not
  represent a valid keytab structure, and <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-add-keytab-file" role="function">
<title>shishi_keys_add_keytab_file ()</title>
<indexterm zone="shishi-keys-add-keytab-file"><primary>shishi_keys_add_keytab_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_keys_add_keytab_file         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="Shishi-keys">Shishi_keys</link> *keys);</programlisting>
<para>
Read keys from a MIT keytab data structure from a file, and add the
keys to the key set.
</para>
<para>
The format of keytab's is proprietary, and this function support
the 0x0501 and 0x0502 formats.  See the section The MIT Kerberos
Keytab Binary File Format in the Shishi manual for a description of
the reverse-engineered format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> name of file to read.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keys</parameter>&nbsp;:</term>
<listitem><simpara> allocated key set to store keys in.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-IO-ERROR:CAPS"><literal>SHISHI_IO_ERROR</literal></link> if the file cannot be read,
  <link linkend="SHISHI-KEYTAB-ERROR:CAPS"><literal>SHISHI_KEYTAB_ERROR</literal></link> if the data cannot be parsed as a valid keytab
  structure, and <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-from-keytab-mem" role="function">
<title>shishi_keys_from_keytab_mem ()</title>
<indexterm zone="shishi-keys-from-keytab-mem"><primary>shishi_keys_from_keytab_mem</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_keys_from_keytab_mem         (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *data,
                                                         <link linkend="size-t">size_t</link> len,
                                                         <link linkend="Shishi-keys">Shishi_keys</link> **outkeys);</programlisting>
<para>
Create a new key set populated with keys from a MIT keytab data
structure read from a memory block.
</para>
<para>
The format of keytab's is proprietary, and this function support
the 0x0501 and 0x0502 formats.  See the section The MIT Kerberos
Keytab Binary File Format in the Shishi manual for a description of
the reverse-engineered format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> constant memory buffer with keytab of <parameter>len</parameter> size.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara> size of memory buffer with keytab data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outkeys</parameter>&nbsp;:</term>
<listitem><simpara> pointer to key set that will be allocated and populated,
  must be deallocated by caller on succes.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-KEYTAB-ERROR:CAPS"><literal>SHISHI_KEYTAB_ERROR</literal></link> if the data does not
  represent a valid keytab structure, and <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-from-keytab-file" role="function">
<title>shishi_keys_from_keytab_file ()</title>
<indexterm zone="shishi-keys-from-keytab-file"><primary>shishi_keys_from_keytab_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_keys_from_keytab_file        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="Shishi-keys">Shishi_keys</link> **outkeys);</programlisting>
<para>
Create a new key set populated with keys from a MIT keytab data
structure read from a file.
</para>
<para>
The format of keytab's is proprietary, and this function support
the 0x0501 and 0x0502 formats.  See the section The MIT Kerberos
Keytab Binary File Format in the Shishi manual for a description of
the reverse-engineered format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> name of file to read.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outkeys</parameter>&nbsp;:</term>
<listitem><simpara> pointer to key set that will be allocated and populated,
  must be deallocated by caller on succes.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-IO-ERROR:CAPS"><literal>SHISHI_IO_ERROR</literal></link> if the file cannot be read,
  <link linkend="SHISHI-KEYTAB-ERROR:CAPS"><literal>SHISHI_KEYTAB_ERROR</literal></link> if the data cannot be parsed as a valid keytab
  structure, and <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-print" role="function">
<title>shishi_keys_print ()</title>
<indexterm zone="shishi-keys-print"><primary>shishi_keys_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_keys_print                   (<link linkend="Shishi-keys">Shishi_keys</link> *keys,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh);</programlisting>
<para>
Print all keys in set using shishi_key_print.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>keys</parameter>&nbsp;:</term>
<listitem><simpara> key set to print.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle, open for writing, to print keys to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-to-file" role="function">
<title>shishi_keys_to_file ()</title>
<indexterm zone="shishi-keys-to-file"><primary>shishi_keys_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_keys_to_file                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         <link linkend="Shishi-keys">Shishi_keys</link> *keys);</programlisting>
<para>
Print an ASCII representation of a key structure to a file, for
each key in the key set.  The file is appended to if it exists.
See <link linkend="shishi-key-print"><function>shishi_key_print()</function></link> for the format of the output.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> filename to append key to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keys</parameter>&nbsp;:</term>
<listitem><simpara> set of keys to print.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-for-serverrealm-in-file" role="function">
<title>shishi_keys_for_serverrealm_in_file ()</title>
<indexterm zone="shishi-keys-for-serverrealm-in-file"><primary>shishi_keys_for_serverrealm_in_file</primary></indexterm><programlisting><link linkend="Shishi-key">Shishi_key</link>*         shishi_keys_for_serverrealm_in_file (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         const <link linkend="char">char</link> *server,
                                                         const <link linkend="char">char</link> *realm);</programlisting>
<para>
Get keys that match specified <parameter>server</parameter> and <parameter>realm</parameter> from the key set
file <parameter>filename</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> file to read keys from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> server name to get key for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> realm of server to get key for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the key for specific server and realm, read
  from the indicated file, or NULL if no key could be found or an
  error encountered.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-for-server-in-file" role="function">
<title>shishi_keys_for_server_in_file ()</title>
<indexterm zone="shishi-keys-for-server-in-file"><primary>shishi_keys_for_server_in_file</primary></indexterm><programlisting><link linkend="Shishi-key">Shishi_key</link>*         shishi_keys_for_server_in_file      (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>
Get key for specified <parameter>server</parameter> from <parameter>filename</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> file to read keys from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> server name to get key for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the key for specific server, read from the
  indicated file, or NULL if no key could be found or an error
  encountered.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-keys-for-localservicerealm-in-file" role="function">
<title>shishi_keys_for_localservicerealm_in_file ()</title>
<indexterm zone="shishi-keys-for-localservicerealm-in-file"><primary>shishi_keys_for_localservicerealm_in_file</primary></indexterm><programlisting><link linkend="Shishi-key">Shishi_key</link>*         shishi_keys_for_localservicerealm_in_file
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *filename,
                                                         const <link linkend="char">char</link> *service,
                                                         const <link linkend="char">char</link> *realm);</programlisting>
<para>
Get key for specified <parameter>service</parameter> and <parameter>realm</parameter> from <parameter>filename</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> file to read keys from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>service</parameter>&nbsp;:</term>
<listitem><simpara> service to get key for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> realm of server to get key for, or NULL for default realm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the key for the server
"SERVICE/HOSTNAME<parameter>REALM</parameter>" (where HOSTNAME is the current system's
hostname), read from the default host keys file (see
<link linkend="shishi-hostkeys-default-file"><function>shishi_hostkeys_default_file()</function></link>), or NULL if no key could be found
or an error encountered.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-hostkeys-default-file" role="function">
<title>shishi_hostkeys_default_file ()</title>
<indexterm zone="shishi-hostkeys-default-file"><primary>shishi_hostkeys_default_file</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_hostkeys_default_file        (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Get file name of default host key file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the default host key filename used in the
library.  (Not a copy of it, so don't modify or deallocate it.)
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-hostkeys-default-file-set" role="function">
<title>shishi_hostkeys_default_file_set ()</title>
<indexterm zone="shishi-hostkeys-default-file-set"><primary>shishi_hostkeys_default_file_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_hostkeys_default_file_set    (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *hostkeysfile);</programlisting>
<para>
Set the default host key filename used in the library.  The
string is copied into the library, so you can dispose of the
variable immediately after calling this function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hostkeysfile</parameter>&nbsp;:</term>
<listitem><simpara> string with new default hostkeys file name, or
               NULL to reset to default.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-hostkeys-for-server" role="function">
<title>shishi_hostkeys_for_server ()</title>
<indexterm zone="shishi-hostkeys-for-server"><primary>shishi_hostkeys_for_server</primary></indexterm><programlisting><link linkend="Shishi-key">Shishi_key</link>*         shishi_hostkeys_for_server          (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *server);</programlisting>
<para>
Get host key for <parameter>server</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> server name to get key for
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the key for specific server, read from the
default host keys file (see <link linkend="shishi-hostkeys-default-file"><function>shishi_hostkeys_default_file()</function></link>), or
NULL if no key could be found or an error encountered.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-hostkeys-for-serverrealm" role="function">
<title>shishi_hostkeys_for_serverrealm ()</title>
<indexterm zone="shishi-hostkeys-for-serverrealm"><primary>shishi_hostkeys_for_serverrealm</primary></indexterm><programlisting><link linkend="Shishi-key">Shishi_key</link>*         shishi_hostkeys_for_serverrealm     (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *server,
                                                         const <link linkend="char">char</link> *realm);</programlisting>
<para>
Get host key for <parameter>server</parameter> in <parameter>realm</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>server</parameter>&nbsp;:</term>
<listitem><simpara> server name to get key for
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> realm of server to get key for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the key for specific server and realm, read
from the default host keys file (see
<link linkend="shishi-hostkeys-default-file"><function>shishi_hostkeys_default_file()</function></link>), or NULL if no key could be found
or an error encountered.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-hostkeys-for-localservicerealm" role="function">
<title>shishi_hostkeys_for_localservicerealm ()</title>
<indexterm zone="shishi-hostkeys-for-localservicerealm"><primary>shishi_hostkeys_for_localservicerealm</primary></indexterm><programlisting><link linkend="Shishi-key">Shishi_key</link>*         shishi_hostkeys_for_localservicerealm
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *service,
                                                         const <link linkend="char">char</link> *realm);</programlisting>
<para>
Get host key for <parameter>service</parameter> on current host in <parameter>realm</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>service</parameter>&nbsp;:</term>
<listitem><simpara> service to get key for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> realm of server to get key for, or NULL for default realm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the key for the server
"SERVICE/HOSTNAME<parameter>REALM</parameter>" (where HOSTNAME is the current system's
hostname), read from the default host keys file (see
<link linkend="shishi-hostkeys-default-file"><function>shishi_hostkeys_default_file()</function></link>), or NULL if no key could be found
or an error encountered.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-hostkeys-for-localservice" role="function">
<title>shishi_hostkeys_for_localservice ()</title>
<indexterm zone="shishi-hostkeys-for-localservice"><primary>shishi_hostkeys_for_localservice</primary></indexterm><programlisting><link linkend="Shishi-key">Shishi_key</link>*         shishi_hostkeys_for_localservice    (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *service);</programlisting>
<para>
Get host key for <parameter>service</parameter> on current host in default realm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>service</parameter>&nbsp;:</term>
<listitem><simpara> service to get key for.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the key for the server "SERVICE/HOSTNAME"
(where HOSTNAME is the current system's hostname), read from the
default host keys file (see <link linkend="shishi-hostkeys-default-file"><function>shishi_hostkeys_default_file()</function></link>), or
NULL if no key could be found or an error encountered.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart" role="function">
<title>shishi_encapreppart ()</title>
<indexterm zone="shishi-encapreppart"><primary>shishi_encapreppart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_encapreppart                 (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
This function creates a new EncAPRepPart, populated with some
default values.  It uses the current time as returned by the system
for the ctime and cusec fields.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the encapreppart or NULL on failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-time-copy" role="function">
<title>shishi_encapreppart_time_copy ()</title>
<indexterm zone="shishi-encapreppart-time-copy"><primary>shishi_encapreppart_time_copy</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_time_copy       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);</programlisting>
<para>
Copy time fields from Authenticator into EncAPRepPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncAPRepPart as allocated by <link linkend="shishi-encapreppart"><function>shishi_encapreppart()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> Authenticator to copy time fields from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-ctime" role="function">
<title>shishi_encapreppart_ctime ()</title>
<indexterm zone="shishi-encapreppart-ctime"><primary>shishi_encapreppart_ctime</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_ctime           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="char">char</link> **t);</programlisting>
<para>
Extract client time from EncAPRepPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncAPRepPart as allocated by <link linkend="shishi-encapreppart"><function>shishi_encapreppart()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated zero-terminated character array with client time.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-ctime-set" role="function">
<title>shishi_encapreppart_ctime_set ()</title>
<indexterm zone="shishi-encapreppart-ctime-set"><primary>shishi_encapreppart_ctime_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_ctime_set       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         const <link linkend="char">char</link> *t);</programlisting>
<para>
Store client time in EncAPRepPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncAPRepPart as allocated by <link linkend="shishi-encapreppart"><function>shishi_encapreppart()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>t</parameter>&nbsp;:</term>
<listitem><simpara> string with generalized time value to store in EncAPRepPart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-cusec-get" role="function">
<title>shishi_encapreppart_cusec_get ()</title>
<indexterm zone="shishi-encapreppart-cusec-get"><primary>shishi_encapreppart_cusec_get</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_cusec_get       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="uint32-t">uint32_t</link> *cusec);</programlisting>
<para>
Extract client microseconds field from EncAPRepPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncAPRepPart as allocated by <link linkend="shishi-encapreppart"><function>shishi_encapreppart()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cusec</parameter>&nbsp;:</term>
<listitem><simpara> output integer with client microseconds field.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-cusec-set" role="function">
<title>shishi_encapreppart_cusec_set ()</title>
<indexterm zone="shishi-encapreppart-cusec-set"><primary>shishi_encapreppart_cusec_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_cusec_set       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="uint32-t">uint32_t</link> cusec);</programlisting>
<para>
Set the cusec field in the Authenticator.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncAPRepPart as allocated by <link linkend="shishi-encapreppart"><function>shishi_encapreppart()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cusec</parameter>&nbsp;:</term>
<listitem><simpara> client microseconds to set in authenticator, 0-999999.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-print" role="function">
<title>shishi_encapreppart_print ()</title>
<indexterm zone="shishi-encapreppart-print"><primary>shishi_encapreppart_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_print           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart);</programlisting>
<para>
Print ASCII armored DER encoding of EncAPRepPart to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncAPRepPart to print.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-save" role="function">
<title>shishi_encapreppart_save ()</title>
<indexterm zone="shishi-encapreppart-save"><primary>shishi_encapreppart_save</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_save            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart);</programlisting>
<para>
Save DER encoding of EncAPRepPart to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncAPRepPart to save.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-to-file" role="function">
<title>shishi_encapreppart_to_file ()</title>
<indexterm zone="shishi-encapreppart-to-file"><primary>shishi_encapreppart_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_to_file         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Write EncAPRepPart to file in specified TYPE.  The file will be
truncated if it exists.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncAPRepPart to save.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be written,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to write to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-read" role="function">
<title>shishi_encapreppart_read ()</title>
<indexterm zone="shishi-encapreppart-read"><primary>shishi_encapreppart_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_read            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *encapreppart);</programlisting>
<para>
Read DER encoded EncAPRepPart from file and populate given variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated EncAPRepPart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-parse" role="function">
<title>shishi_encapreppart_parse ()</title>
<indexterm zone="shishi-encapreppart-parse"><primary>shishi_encapreppart_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_parse           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *encapreppart);</programlisting>
<para>
Read ASCII armored DER encoded EncAPRepPart from file and populate given
variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated EncAPRepPart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-from-file" role="function">
<title>shishi_encapreppart_from_file ()</title>
<indexterm zone="shishi-encapreppart-from-file"><primary>shishi_encapreppart_from_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_from_file       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *encapreppart,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Read EncAPRepPart from file in specified TYPE.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated EncAPRepPart.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be read,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to read from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-get-key" role="function">
<title>shishi_encapreppart_get_key ()</title>
<indexterm zone="shishi-encapreppart-get-key"><primary>shishi_encapreppart_get_key</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_get_key         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);</programlisting>
<para>
Extract the subkey from the encrypted AP-REP part.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> input EncAPRepPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-seqnumber-get" role="function">
<title>shishi_encapreppart_seqnumber_get ()</title>
<indexterm zone="shishi-encapreppart-seqnumber-get"><primary>shishi_encapreppart_seqnumber_get</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_seqnumber_get   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="uint32-t">uint32_t</link> *seqnumber);</programlisting>
<para>
Extract sequence number field from EncAPRepPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> EncAPRepPart as allocated by <link linkend="shishi-encapreppart"><function>shishi_encapreppart()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>seqnumber</parameter>&nbsp;:</term>
<listitem><simpara> output integer with sequence number field.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-seqnumber-remove" role="function">
<title>shishi_encapreppart_seqnumber_remove ()</title>
<indexterm zone="shishi-encapreppart-seqnumber-remove"><primary>shishi_encapreppart_seqnumber_remove</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_seqnumber_remove
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart);</programlisting>
<para>
Remove sequence number field in EncAPRepPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> encapreppart as allocated by <link linkend="shishi-encapreppart"><function>shishi_encapreppart()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encapreppart-seqnumber-set" role="function">
<title>shishi_encapreppart_seqnumber_set ()</title>
<indexterm zone="shishi-encapreppart-seqnumber-set"><primary>shishi_encapreppart_seqnumber_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encapreppart_seqnumber_set   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="uint32-t">uint32_t</link> seqnumber);</programlisting>
<para>
Store sequence number field in EncAPRepPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara> encapreppart as allocated by <link linkend="shishi-encapreppart"><function>shishi_encapreppart()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>seqnumber</parameter>&nbsp;:</term>
<listitem><simpara> integer with sequence number field to store in encapreppart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns <link linkend="SHISHI-OK:CAPS"><literal>SHISHI_OK</literal></link> iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq" role="function">
<title>shishi_apreq ()</title>
<indexterm zone="shishi-apreq"><primary>shishi_apreq</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_apreq                        (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
This function creates a new AP-REQ, populated with some default
values.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the AP-REQ or NULL on failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-parse" role="function">
<title>shishi_apreq_parse ()</title>
<indexterm zone="shishi-apreq-parse"><primary>shishi_apreq_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_parse                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *apreq);</programlisting>
<para>
Read ASCII armored DER encoded AP-REQ from file and populate given
variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-from-file" role="function">
<title>shishi_apreq_from_file ()</title>
<indexterm zone="shishi-apreq-from-file"><primary>shishi_apreq_from_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_from_file              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *apreq,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Read AP-REQ from file in specified TYPE.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be read,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to read from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-print" role="function">
<title>shishi_apreq_print ()</title>
<indexterm zone="shishi-apreq-print"><primary>shishi_apreq_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_print                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq);</programlisting>
<para>
Print ASCII armored DER encoding of AP-REQ to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ to print.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-to-file" role="function">
<title>shishi_apreq_to_file ()</title>
<indexterm zone="shishi-apreq-to-file"><primary>shishi_apreq_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_to_file                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Write AP-REQ to file in specified TYPE.  The file will be
truncated if it exists.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ to save.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be written,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to write to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-read" role="function">
<title>shishi_apreq_read ()</title>
<indexterm zone="shishi-apreq-read"><primary>shishi_apreq_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_read                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *apreq);</programlisting>
<para>
Read DER encoded AP-REQ from file and populate given variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-save" role="function">
<title>shishi_apreq_save ()</title>
<indexterm zone="shishi-apreq-save"><primary>shishi_apreq_save</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_save                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq);</programlisting>
<para>
Save DER encoding of AP-REQ to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ to save.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-set-ticket" role="function">
<title>shishi_apreq_set_ticket ()</title>
<indexterm zone="shishi-apreq-set-ticket"><primary>shishi_apreq_set_ticket</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_set_ticket             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> ticket);</programlisting>
<para>
Copy ticket into AP-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ to add ticket field to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> input ticket to copy into AP-REQ ticket field.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-set-authenticator" role="function">
<title>shishi_apreq_set_authenticator ()</title>
<indexterm zone="shishi-apreq-set-authenticator"><primary>shishi_apreq_set_authenticator</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_set_authenticator      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         <link linkend="uint32-t">uint32_t</link> kvno,
                                                         const <link linkend="char">char</link> *buf,
                                                         <link linkend="size-t">size_t</link> buflen);</programlisting>
<para>
Set the encrypted authenticator field in the AP-REP.  The encrypted
data is usually created by calling <link linkend="shishi-encrypt"><function>shishi_encrypt()</function></link> on the DER
encoded authenticator.  To save time, you may want to use
<link linkend="shishi-apreq-add-authenticator"><function>shishi_apreq_add_authenticator()</function></link> instead, which calculates the
encrypted data and calls this function in one step.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ to add authenticator field to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> encryption type used to encrypt authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>kvno</parameter>&nbsp;:</term>
<listitem><simpara> version of the key used to encrypt authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara> input array with encrypted authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buflen</parameter>&nbsp;:</term>
<listitem><simpara> size of input array with encrypted authenticator.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK on success.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-add-authenticator" role="function">
<title>shishi_apreq_add_authenticator ()</title>
<indexterm zone="shishi-apreq-add-authenticator"><primary>shishi_apreq_add_authenticator</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_add_authenticator      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator);</programlisting>
<para>
Encrypts DER encoded authenticator using key and store it in the
AP-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ to add authenticator field to.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to to use for encryption.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara> cryptographic key usage value to use in encryption.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara> authenticator as allocated by <link linkend="shishi-authenticator"><function>shishi_authenticator()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-options" role="function">
<title>shishi_apreq_options ()</title>
<indexterm zone="shishi-apreq-options"><primary>shishi_apreq_options</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_options                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="uint32-t">uint32_t</link> *flags);</programlisting>
<para>
Extract the AP-Options from AP-REQ into output integer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ to get options from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> Output integer containing options from AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-use-session-key-p" role="function">
<title>shishi_apreq_use_session_key_p ()</title>
<indexterm zone="shishi-apreq-use-session-key-p"><primary>shishi_apreq_use_session_key_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_use_session_key_p      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq);</programlisting>
<para>
Return non-0 iff the "Use session key" option is set in the AP-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ as allocated by <link linkend="shishi-apreq"><function>shishi_apreq()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-mutual-required-p" role="function">
<title>shishi_apreq_mutual_required_p ()</title>
<indexterm zone="shishi-apreq-mutual-required-p"><primary>shishi_apreq_mutual_required_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_mutual_required_p      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq);</programlisting>
<para>
Return non-0 iff the "Mutual required" option is set in the AP-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ as allocated by <link linkend="shishi-apreq"><function>shishi_apreq()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-options-set" role="function">
<title>shishi_apreq_options_set ()</title>
<indexterm zone="shishi-apreq-options-set"><primary>shishi_apreq_options_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_options_set            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="uint32-t">uint32_t</link> options);</programlisting>
<para>
Set the AP-Options in AP-REQ to indicate integer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ as allocated by <link linkend="shishi-apreq"><function>shishi_apreq()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>options</parameter>&nbsp;:</term>
<listitem><simpara> Options to set in AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-options-add" role="function">
<title>shishi_apreq_options_add ()</title>
<indexterm zone="shishi-apreq-options-add"><primary>shishi_apreq_options_add</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_options_add            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="uint32-t">uint32_t</link> option);</programlisting>
<para>
Add the AP-Options in AP-REQ.  Options not set in input parameter
<parameter>option</parameter> are preserved in the AP-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ as allocated by <link linkend="shishi-apreq"><function>shishi_apreq()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>option</parameter>&nbsp;:</term>
<listitem><simpara> Options to add in AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-options-remove" role="function">
<title>shishi_apreq_options_remove ()</title>
<indexterm zone="shishi-apreq-options-remove"><primary>shishi_apreq_options_remove</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_options_remove         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="uint32-t">uint32_t</link> option);</programlisting>
<para>
Remove the AP-Options from AP-REQ.  Options not set in input
parameter <parameter>option</parameter> are preserved in the AP-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ as allocated by <link linkend="shishi-apreq"><function>shishi_apreq()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>option</parameter>&nbsp;:</term>
<listitem><simpara> Options to remove from AP-REQ.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-get-ticket" role="function">
<title>shishi_apreq_get_ticket ()</title>
<indexterm zone="shishi-apreq-get-ticket"><primary>shishi_apreq_get_ticket</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_get_ticket             (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *ticket);</programlisting>
<para>
Extract ticket from AP-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ variable to get ticket from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ticket</parameter>&nbsp;:</term>
<listitem><simpara> output variable to hold extracted ticket.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-get-authenticator-etype" role="function">
<title>shishi_apreq_get_authenticator_etype ()</title>
<indexterm zone="shishi-apreq-get-authenticator-etype"><primary>shishi_apreq_get_authenticator_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_get_authenticator_etype
                                                        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="int32-t">int32_t</link> *etype);</programlisting>
<para>
Extract AP-REQ.authenticator.etype.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara> AP-REQ variable to get value from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> output variable that holds the value.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-apreq-decrypt" role="function">
<title>shishi_apreq_decrypt ()</title>
<indexterm zone="shishi-apreq-decrypt"><primary>shishi_apreq_decrypt</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_apreq_decrypt                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> apreq,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *authenticator);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>apreq</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep" role="function">
<title>shishi_aprep ()</title>
<indexterm zone="shishi-aprep"><primary>shishi_aprep</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_aprep                        (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
This function creates a new AP-REP, populated with some default
values.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the authenticator or NULL on
failure.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep-print" role="function">
<title>shishi_aprep_print ()</title>
<indexterm zone="shishi-aprep-print"><primary>shishi_aprep_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aprep_print                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep);</programlisting>
<para>
Print ASCII armored DER encoding of AP-REP to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara> AP-REP to print.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep-save" role="function">
<title>shishi_aprep_save ()</title>
<indexterm zone="shishi-aprep-save"><primary>shishi_aprep_save</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aprep_save                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep);</programlisting>
<para>
Save DER encoding of AP-REP to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara> AP-REP to save.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep-to-file" role="function">
<title>shishi_aprep_to_file ()</title>
<indexterm zone="shishi-aprep-to-file"><primary>shishi_aprep_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aprep_to_file                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Write AP-REP to file in specified TYPE.  The file will be
truncated if it exists.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara> AP-REP to save.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be written,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to write to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep-read" role="function">
<title>shishi_aprep_read ()</title>
<indexterm zone="shishi-aprep-read"><primary>shishi_aprep_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aprep_read                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *aprep);</programlisting>
<para>
Read DER encoded AP-REP from file and populate given variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated AP-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep-parse" role="function">
<title>shishi_aprep_parse ()</title>
<indexterm zone="shishi-aprep-parse"><primary>shishi_aprep_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aprep_parse                  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *aprep);</programlisting>
<para>
Read ASCII armored DER encoded AP-REP from file and populate given
variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated AP-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep-from-file" role="function">
<title>shishi_aprep_from_file ()</title>
<indexterm zone="shishi-aprep-from-file"><primary>shishi_aprep_from_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aprep_from_file              (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *aprep,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Read AP-REP from file in specified TYPE.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated AP-REP.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be read,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to read from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep-decrypt" role="function">
<title>shishi_aprep_decrypt ()</title>
<indexterm zone="shishi-aprep-decrypt"><primary>shishi_aprep_decrypt</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aprep_decrypt                (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key,
                                                         <link linkend="int">int</link> keyusage,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *encapreppart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyusage</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep-verify" role="function">
<title>shishi_aprep_verify ()</title>
<indexterm zone="shishi-aprep-verify"><primary>shishi_aprep_verify</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aprep_verify                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep-enc-part-set" role="function">
<title>shishi_aprep_enc_part_set ()</title>
<indexterm zone="shishi-aprep-enc-part-set"><primary>shishi_aprep_enc_part_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aprep_enc_part_set           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep,
                                                         <link linkend="int">int</link> etype,
                                                         const <link linkend="char">char</link> *buf,
                                                         <link linkend="size-t">size_t</link> buflen);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buflen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep-enc-part-add" role="function">
<title>shishi_aprep_enc_part_add ()</title>
<indexterm zone="shishi-aprep-enc-part-add"><primary>shishi_aprep_enc_part_add</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aprep_enc_part_add           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep-enc-part-make" role="function">
<title>shishi_aprep_enc_part_make ()</title>
<indexterm zone="shishi-aprep-enc-part-make"><primary>shishi_aprep_enc_part_make</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aprep_enc_part_make          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encapreppart,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> authenticator,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encapreppart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authenticator</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-aprep-get-enc-part-etype" role="function">
<title>shishi_aprep_get_enc_part_etype ()</title>
<indexterm zone="shishi-aprep-get-enc-part-etype"><primary>shishi_aprep_get_enc_part_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_aprep_get_enc_part_etype     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> aprep,
                                                         <link linkend="int32-t">int32_t</link> *etype);</programlisting>
<para>
Extract AP-REP.enc-part.etype.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>aprep</parameter>&nbsp;:</term>
<listitem><simpara> AP-REP variable to get value from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> output variable that holds the value.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdc-sendrecv" role="function">
<title>shishi_kdc_sendrecv ()</title>
<indexterm zone="shishi-kdc-sendrecv"><primary>shishi_kdc_sendrecv</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdc_sendrecv                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *realm,
                                                         const <link linkend="char">char</link> *indata,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **outdata,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>indata</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outdata</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-kdc-sendrecv-hint" role="function">
<title>shishi_kdc_sendrecv_hint ()</title>
<indexterm zone="shishi-kdc-sendrecv-hint"><primary>shishi_kdc_sendrecv_hint</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_kdc_sendrecv_hint            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="char">char</link> *realm,
                                                         const <link linkend="char">char</link> *indata,
                                                         <link linkend="size-t">size_t</link> inlen,
                                                         <link linkend="char">char</link> **outdata,
                                                         <link linkend="size-t">size_t</link> *outlen,
                                                         <link linkend="Shishi-tkts-hint">Shishi_tkts_hint</link> *hint);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>indata</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>inlen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outdata</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hint</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart" role="function">
<title>shishi_encticketpart ()</title>
<indexterm zone="shishi-encticketpart"><primary>shishi_encticketpart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_encticketpart                (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-key-set" role="function">
<title>shishi_encticketpart_key_set ()</title>
<indexterm zone="shishi-encticketpart-key-set"><primary>shishi_encticketpart_key_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_key_set        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Set the EncTicketPart.key field to key type and value of supplied
key.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> input EncTicketPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key handle with information to store in encticketpart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-get-key" role="function">
<title>shishi_encticketpart_get_key ()</title>
<indexterm zone="shishi-encticketpart-get-key"><primary>shishi_encticketpart_get_key</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_get_key        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="Shishi-key">Shishi_key</link> **key);</programlisting>
<para>
Extract the session key in the Ticket.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> input EncTicketPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> newly allocated key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-crealm" role="function">
<title>shishi_encticketpart_crealm ()</title>
<indexterm zone="shishi-encticketpart-crealm"><primary>shishi_encticketpart_crealm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_crealm         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="char">char</link> **crealm,
                                                         <link linkend="size-t">size_t</link> *crealmlen);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>crealm</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>crealmlen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-crealm-set" role="function">
<title>shishi_encticketpart_crealm_set ()</title>
<indexterm zone="shishi-encticketpart-crealm-set"><primary>shishi_encticketpart_crealm_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_crealm_set     (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         const <link linkend="char">char</link> *realm);</programlisting>
<para>
Set the realm field in the KDC-REQ.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> input EncTicketPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>realm</parameter>&nbsp;:</term>
<listitem><simpara> input array with name of realm.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-client" role="function">
<title>shishi_encticketpart_client ()</title>
<indexterm zone="shishi-encticketpart-client"><primary>shishi_encticketpart_client</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_client         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);</programlisting>
<para>
Represent client principal name in EncTicketPart as zero-terminated
string.  The string is allocate by this function, and it is the
responsibility of the caller to deallocate it.  Note that the
output length <parameter>clientlen</parameter> does not include the terminating zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> EncTicketPart variable to get client name from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>clientlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>clientlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>client</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>client</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-clientrealm" role="function">
<title>shishi_encticketpart_clientrealm ()</title>
<indexterm zone="shishi-encticketpart-clientrealm"><primary>shishi_encticketpart_clientrealm</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_clientrealm    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="char">char</link> **client,
                                                         <link linkend="size-t">size_t</link> *clientlen);</programlisting>
<para>
Convert cname and realm fields from EncTicketPart to printable
principal name format.  The string is allocate by this function,
and it is the responsibility of the caller to deallocate it.  Note
that the output length <parameter>clientlen</parameter> does not include the terminating
zero.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> EncTicketPart variable to get client name and realm from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>client</parameter>&nbsp;:</term>
<listitem><simpara> pointer to newly allocated zero terminated string containing
  principal name and realm.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>clientlen</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>clientlen</parameter>&nbsp;:</term>
<listitem><simpara> pointer to length of <parameter>client</parameter> on output, excluding terminating
  zero.  May be <link linkend="NULL:CAPS"><literal>NULL</literal></link> (to only populate <parameter>client</parameter>).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-cname-set" role="function">
<title>shishi_encticketpart_cname_set ()</title>
<indexterm zone="shishi-encticketpart-cname-set"><primary>shishi_encticketpart_cname_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_cname_set      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="Shishi-name-type">Shishi_name_type</link> name_type,
                                                         const <link linkend="char">char</link> *principal);</programlisting>
<para>
Set the client name field in the EncTicketPart.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> input EncTicketPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name_type</parameter>&nbsp;:</term>
<listitem><simpara> type of principial, see Shishi_name_type, usually
            SHISHI_NT_UNKNOWN.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>principal</parameter>&nbsp;:</term>
<listitem><simpara> input array with principal name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-print" role="function">
<title>shishi_encticketpart_print ()</title>
<indexterm zone="shishi-encticketpart-print"><primary>shishi_encticketpart_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_print          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-flags-set" role="function">
<title>shishi_encticketpart_flags_set ()</title>
<indexterm zone="shishi-encticketpart-flags-set"><primary>shishi_encticketpart_flags_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_flags_set      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="int">int</link> flags);</programlisting>
<para>
Set the EncTicketPart.flags to supplied value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> input EncTicketPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&nbsp;:</term>
<listitem><simpara> flags to set in encticketpart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-transited-set" role="function">
<title>shishi_encticketpart_transited_set ()</title>
<indexterm zone="shishi-encticketpart-transited-set"><primary>shishi_encticketpart_transited_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_transited_set  (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="int32-t">int32_t</link> trtype,
                                                         const <link linkend="char">char</link> *trdata,
                                                         <link linkend="size-t">size_t</link> trdatalen);</programlisting>
<para>
Set the EncTicketPart.transited field to supplied value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> input EncTicketPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>trtype</parameter>&nbsp;:</term>
<listitem><simpara> transitedencoding type, e.g. SHISHI_TR_DOMAIN_X500_COMPRESS.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>trdata</parameter>&nbsp;:</term>
<listitem><simpara> actual transited realm data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>trdatalen</parameter>&nbsp;:</term>
<listitem><simpara> length of actual transited realm data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-authtime-set" role="function">
<title>shishi_encticketpart_authtime_set ()</title>
<indexterm zone="shishi-encticketpart-authtime-set"><primary>shishi_encticketpart_authtime_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_authtime_set   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         const <link linkend="char">char</link> *authtime);</programlisting>
<para>
Set the EncTicketPart.authtime to supplied value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> input EncTicketPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authtime</parameter>&nbsp;:</term>
<listitem><simpara> character buffer containing a generalized time string.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-endtime-set" role="function">
<title>shishi_encticketpart_endtime_set ()</title>
<indexterm zone="shishi-encticketpart-endtime-set"><primary>shishi_encticketpart_endtime_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_endtime_set    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         const <link linkend="char">char</link> *endtime);</programlisting>
<para>
Set the EncTicketPart.endtime to supplied value.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara> input EncTicketPart variable.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>endtime</parameter>&nbsp;:</term>
<listitem><simpara> character buffer containing a generalized time string.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff succesful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-authtime" role="function">
<title>shishi_encticketpart_authtime ()</title>
<indexterm zone="shishi-encticketpart-authtime"><primary>shishi_encticketpart_authtime</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encticketpart_authtime       (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart,
                                                         <link linkend="char">char</link> *authtime,
                                                         <link linkend="size-t">size_t</link> *authtimelen);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authtime</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authtimelen</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encticketpart-authctime" role="function">
<title>shishi_encticketpart_authctime ()</title>
<indexterm zone="shishi-encticketpart-authctime"><primary>shishi_encticketpart_authctime</primary></indexterm><programlisting><link linkend="time-t">time_t</link>              shishi_encticketpart_authctime      (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encticketpart);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encticketpart</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe" role="function">
<title>shishi_safe ()</title>
<indexterm zone="shishi-safe"><primary>shishi_safe</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-safe">Shishi_safe</link> **safe);</programlisting>
<para>
Create a new SAFE exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> pointer to new structure that holds information about SAFE exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-done" role="function">
<title>shishi_safe_done ()</title>
<indexterm zone="shishi-safe-done"><primary>shishi_safe_done</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_safe_done                    (<link linkend="Shishi-safe">Shishi_safe</link> *safe);</programlisting>
<para>
Deallocate resources associated with SAFE exchange.  This should be
called by the application when it no longer need to utilize the
SAFE exchange handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about SAFE exchange
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-key" role="function">
<title>shishi_safe_key ()</title>
<indexterm zone="shishi-safe-key"><primary>shishi_safe_key</primary></indexterm><programlisting><link linkend="Shishi-key">Shishi_key</link>*         shishi_safe_key                     (<link linkend="Shishi-safe">Shishi_safe</link> *safe);</programlisting>
<para>
Get key structured from SAFE exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about SAFE exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the key used in the SAFE exchange, or NULL if
              not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-key-set" role="function">
<title>shishi_safe_key_set ()</title>
<indexterm zone="shishi-safe-key-set"><primary>shishi_safe_key_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_safe_key_set                 (<link linkend="Shishi-safe">Shishi_safe</link> *safe,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Set the Key in the SAFE exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about SAFE exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to store in SAFE.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-safe" role="function">
<title>shishi_safe_safe ()</title>
<indexterm zone="shishi-safe-safe"><primary>shishi_safe_safe</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_safe_safe                    (<link linkend="Shishi-safe">Shishi_safe</link> *safe);</programlisting>
<para>
Get ASN.1 SAFE structured from SAFE exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about SAFE exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the ASN.1 safe in the SAFE exchange, or NULL if
              not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-safe-set" role="function">
<title>shishi_safe_safe_set ()</title>
<indexterm zone="shishi-safe-safe-set"><primary>shishi_safe_safe_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_safe_safe_set                (<link linkend="Shishi-safe">Shishi_safe</link> *safe,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asn1safe);</programlisting>
<para>
Set the KRB-SAFE in the SAFE exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about SAFE exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asn1safe</parameter>&nbsp;:</term>
<listitem><simpara> KRB-SAFE to store in SAFE exchange.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-safe-der" role="function">
<title>shishi_safe_safe_der ()</title>
<indexterm zone="shishi-safe-safe-der"><primary>shishi_safe_safe_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_safe_der                (<link linkend="Shishi-safe">Shishi_safe</link> *safe,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
DER encode SAFE structure.  Typically <link linkend="shishi-safe-build"><function>shishi_safe_build()</function></link> is used
to build the SAFE structure first.  <parameter>out</parameter> is allocated by this
function, and it is the responsibility of caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> safe as allocated by <link linkend="shishi-safe"><function>shishi_safe()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated DER encoding of SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> length of output array with DER encoding of SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-safe-der-set" role="function">
<title>shishi_safe_safe_der_set ()</title>
<indexterm zone="shishi-safe-safe-der-set"><primary>shishi_safe_safe_der_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_safe_der_set            (<link linkend="Shishi-safe">Shishi_safe</link> *safe,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
DER decode KRB-SAFE and set it SAFE exchange.  If decoding fails, the
KRB-SAFE in the SAFE exchange remains.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> safe as allocated by <link linkend="shishi-safe"><function>shishi_safe()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input array with DER encoded KRB-SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with DER encoded KRB-SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-print" role="function">
<title>shishi_safe_print ()</title>
<indexterm zone="shishi-safe-print"><primary>shishi_safe_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_print                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe);</programlisting>
<para>
Print ASCII armored DER encoding of SAFE to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> SAFE to print.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-save" role="function">
<title>shishi_safe_save ()</title>
<indexterm zone="shishi-safe-save"><primary>shishi_safe_save</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_save                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe);</programlisting>
<para>
Save DER encoding of SAFE to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> SAFE to save.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-to-file" role="function">
<title>shishi_safe_to_file ()</title>
<indexterm zone="shishi-safe-to-file"><primary>shishi_safe_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_to_file                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Write SAFE to file in specified TYPE.  The file will be
truncated if it exists.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> SAFE to save.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be written,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to write to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-parse" role="function">
<title>shishi_safe_parse ()</title>
<indexterm zone="shishi-safe-parse"><primary>shishi_safe_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_parse                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *safe);</programlisting>
<para>
Read ASCII armored DER encoded SAFE from file and populate given
variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-read" role="function">
<title>shishi_safe_read ()</title>
<indexterm zone="shishi-safe-read"><primary>shishi_safe_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_read                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *safe);</programlisting>
<para>
Read DER encoded SAFE from file and populate given variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-from-file" role="function">
<title>shishi_safe_from_file ()</title>
<indexterm zone="shishi-safe-from-file"><primary>shishi_safe_from_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_from_file               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *safe,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Read SAFE from file in specified TYPE.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be read,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to read from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-cksum" role="function">
<title>shishi_safe_cksum ()</title>
<indexterm zone="shishi-safe-cksum"><primary>shishi_safe_cksum</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_cksum                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe,
                                                         <link linkend="int32-t">int32_t</link> *cksumtype,
                                                         <link linkend="char">char</link> **cksum,
                                                         <link linkend="size-t">size_t</link> *cksumlen);</programlisting>
<para>
Read checksum value from KRB-SAFE.  <parameter>cksum</parameter> is allocated by this
function, and it is the responsibility of caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> safe as allocated by <link linkend="shishi-safe"><function>shishi_safe()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumtype</parameter>&nbsp;:</term>
<listitem><simpara> output checksum type.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksum</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated checksum data from SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumlen</parameter>&nbsp;:</term>
<listitem><simpara> output size of output checksum data buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-set-cksum" role="function">
<title>shishi_safe_set_cksum ()</title>
<indexterm zone="shishi-safe-set-cksum"><primary>shishi_safe_set_cksum</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_set_cksum               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe,
                                                         <link linkend="int32-t">int32_t</link> cksumtype,
                                                         const <link linkend="char">char</link> *cksum,
                                                         <link linkend="size-t">size_t</link> cksumlen);</programlisting>
<para>
Store checksum value in SAFE.  A checksum is usually created by
calling <link linkend="shishi-checksum"><function>shishi_checksum()</function></link> on some application specific data using
the key from the ticket that is being used.  To save time, you may
want to use <link linkend="shishi-safe-build"><function>shishi_safe_build()</function></link> instead, which calculates the
checksum and calls this function in one step.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> safe as allocated by <link linkend="shishi-safe"><function>shishi_safe()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumtype</parameter>&nbsp;:</term>
<listitem><simpara> input checksum type to store in SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksum</parameter>&nbsp;:</term>
<listitem><simpara> input checksum data to store in SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cksumlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input checksum data to store in SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-user-data" role="function">
<title>shishi_safe_user_data ()</title>
<indexterm zone="shishi-safe-user-data"><primary>shishi_safe_user_data</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_user_data               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe,
                                                         <link linkend="char">char</link> **userdata,
                                                         <link linkend="size-t">size_t</link> *userdatalen);</programlisting>
<para>
Read user data value from KRB-SAFE.  <parameter>userdata</parameter> is allocated by this
function, and it is the responsibility of caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> safe as allocated by <link linkend="shishi-safe"><function>shishi_safe()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdata</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated user data from KRB-SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdatalen</parameter>&nbsp;:</term>
<listitem><simpara> output size of output user data buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-set-user-data" role="function">
<title>shishi_safe_set_user_data ()</title>
<indexterm zone="shishi-safe-set-user-data"><primary>shishi_safe_set_user_data</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_set_user_data           (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> safe,
                                                         const <link linkend="char">char</link> *userdata,
                                                         <link linkend="size-t">size_t</link> userdatalen);</programlisting>
<para>
Set the application data in SAFE.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> safe as allocated by <link linkend="shishi-safe"><function>shishi_safe()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdata</parameter>&nbsp;:</term>
<listitem><simpara> input user application to store in SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdatalen</parameter>&nbsp;:</term>
<listitem><simpara> size of input user application to store in SAFE.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-build" role="function">
<title>shishi_safe_build ()</title>
<indexterm zone="shishi-safe-build"><primary>shishi_safe_build</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_build                   (<link linkend="Shishi-safe">Shishi_safe</link> *safe,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Build checksum and set it in KRB-SAFE.  Note that this follows RFC
1510bis and is incompatible with RFC 1510, although presumably few
implementations use the RFC1510 algorithm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> safe as allocated by <link linkend="shishi-safe"><function>shishi_safe()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key for session, used to compute checksum.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-safe-verify" role="function">
<title>shishi_safe_verify ()</title>
<indexterm zone="shishi-safe-verify"><primary>shishi_safe_verify</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_safe_verify                  (<link linkend="Shishi-safe">Shishi_safe</link> *safe,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Verify checksum in KRB-SAFE.  Note that this follows RFC 1510bis
and is incompatible with RFC 1510, although presumably few
implementations use the RFC1510 algorithm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>safe</parameter>&nbsp;:</term>
<listitem><simpara> safe as allocated by <link linkend="shishi-safe"><function>shishi_safe()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key for session, used to verify checksum.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful,
  SHISHI_SAFE_BAD_KEYTYPE if an incompatible key type is used, or
  SHISHI_SAFE_VERIFY_FAILED if the actual verification failed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv" role="function">
<title>shishi_priv ()</title>
<indexterm zone="shishi-priv"><primary>shishi_priv</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv                         (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-priv">Shishi_priv</link> **priv);</programlisting>
<para>
Create a new PRIV exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> pointer to new structure that holds information about PRIV exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-done" role="function">
<title>shishi_priv_done ()</title>
<indexterm zone="shishi-priv-done"><primary>shishi_priv_done</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_priv_done                    (<link linkend="Shishi-priv">Shishi_priv</link> *priv);</programlisting>
<para>
Deallocate resources associated with PRIV exchange.  This should be
called by the application when it no longer need to utilize the
PRIV exchange handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about PRIV exchange
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-key" role="function">
<title>shishi_priv_key ()</title>
<indexterm zone="shishi-priv-key"><primary>shishi_priv_key</primary></indexterm><programlisting><link linkend="Shishi-key">Shishi_key</link>*         shishi_priv_key                     (<link linkend="Shishi-priv">Shishi_priv</link> *priv);</programlisting>
<para>
Get key from PRIV exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about PRIV exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the key used in the PRIV exchange, or NULL if
              not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-key-set" role="function">
<title>shishi_priv_key_set ()</title>
<indexterm zone="shishi-priv-key-set"><primary>shishi_priv_key_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_priv_key_set                 (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Set the Key in the PRIV exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about PRIV exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to store in PRIV.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-priv" role="function">
<title>shishi_priv_priv ()</title>
<indexterm zone="shishi-priv-priv"><primary>shishi_priv_priv</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_priv_priv                    (<link linkend="Shishi-priv">Shishi_priv</link> *priv);</programlisting>
<para>
Get ASN.1 PRIV structure in PRIV exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about PRIV exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the ASN.1 priv in the PRIV exchange, or NULL if
              not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-priv-set" role="function">
<title>shishi_priv_priv_set ()</title>
<indexterm zone="shishi-priv-priv-set"><primary>shishi_priv_priv_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_priv_priv_set                (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asn1priv);</programlisting>
<para>
Set the KRB-PRIV in the PRIV exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about PRIV exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asn1priv</parameter>&nbsp;:</term>
<listitem><simpara> KRB-PRIV to store in PRIV exchange.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-priv-der" role="function">
<title>shishi_priv_priv_der ()</title>
<indexterm zone="shishi-priv-priv-der"><primary>shishi_priv_priv_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_priv_der                (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
DER encode PRIV structure.  Typically <link linkend="shishi-priv-build"><function>shishi_priv_build()</function></link> is used
to build the PRIV structure first.  <parameter>out</parameter> is allocated by this
function, and it is the responsibility of caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> priv as allocated by <link linkend="shishi-priv"><function>shishi_priv()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated DER encoding of PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> length of output array with DER encoding of PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-priv-der-set" role="function">
<title>shishi_priv_priv_der_set ()</title>
<indexterm zone="shishi-priv-priv-der-set"><primary>shishi_priv_priv_der_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_priv_der_set            (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
DER decode KRB-PRIV and set it PRIV exchange.  If decoding fails, the
KRB-PRIV in the PRIV exchange remains.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> priv as allocated by <link linkend="shishi-priv"><function>shishi_priv()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input array with DER encoded KRB-PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with DER encoded KRB-PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-encprivpart" role="function">
<title>shishi_priv_encprivpart ()</title>
<indexterm zone="shishi-priv-encprivpart"><primary>shishi_priv_encprivpart</primary></indexterm><programlisting><link linkend="Shishi-asn1">Shishi_asn1</link>         shishi_priv_encprivpart             (<link linkend="Shishi-priv">Shishi_priv</link> *priv);</programlisting>
<para>
Get ASN.1 EncPrivPart structure from PRIV exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about PRIV exchange
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the ASN.1 encprivpart in the PRIV exchange, or NULL if
              not yet set or an error occured.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-encprivpart-set" role="function">
<title>shishi_priv_encprivpart_set ()</title>
<indexterm zone="shishi-priv-encprivpart-set"><primary>shishi_priv_encprivpart_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_priv_encprivpart_set         (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> asn1encprivpart);</programlisting>
<para>
Set the ENCPRIVPART in the PRIV exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> structure that holds information about PRIV exchange
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>asn1encprivpart</parameter>&nbsp;:</term>
<listitem><simpara> ENCPRIVPART to store in PRIV exchange.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-encprivpart-der" role="function">
<title>shishi_priv_encprivpart_der ()</title>
<indexterm zone="shishi-priv-encprivpart-der"><primary>shishi_priv_encprivpart_der</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_encprivpart_der         (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="char">char</link> **out,
                                                         <link linkend="size-t">size_t</link> *outlen);</programlisting>
<para>
DER encode ENCPRIVPART structure.  Typically
<link linkend="shishi-encprivpart-build"><function>shishi_encprivpart_build()</function></link> is used to build the ENCPRIVPART
structure first.  <parameter>out</parameter> is allocated by this function, and it is the
responsibility of caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> priv as allocated by <link linkend="shishi-priv"><function>shishi_priv()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated DER encoding of ENCPRIVPART.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>outlen</parameter>&nbsp;:</term>
<listitem><simpara> length of output array with DER encoding of ENCPRIVPART.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-encprivpart-der-set" role="function">
<title>shishi_priv_encprivpart_der_set ()</title>
<indexterm zone="shishi-priv-encprivpart-der-set"><primary>shishi_priv_encprivpart_der_set</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_encprivpart_der_set     (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="char">char</link> *der,
                                                         <link linkend="size-t">size_t</link> derlen);</programlisting>
<para>
DER decode ENCPRIVPART and set it PRIV exchange.  If decoding
fails, the ENCPRIVPART in the PRIV exchange remains.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> priv as allocated by <link linkend="shishi-priv"><function>shishi_priv()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>der</parameter>&nbsp;:</term>
<listitem><simpara> input array with DER encoded ENCPRIVPART.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>derlen</parameter>&nbsp;:</term>
<listitem><simpara> length of input array with DER encoded ENCPRIVPART.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-print" role="function">
<title>shishi_priv_print ()</title>
<indexterm zone="shishi-priv-print"><primary>shishi_priv_print</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_print                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> priv);</programlisting>
<para>
Print ASCII armored DER encoding of PRIV to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> PRIV to print.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-save" role="function">
<title>shishi_priv_save ()</title>
<indexterm zone="shishi-priv-save"><primary>shishi_priv_save</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_save                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> priv);</programlisting>
<para>
Save DER encoding of PRIV to file.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for writing.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> PRIV to save.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-to-file" role="function">
<title>shishi_priv_to_file ()</title>
<indexterm zone="shishi-priv-to-file"><primary>shishi_priv_to_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_to_file                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> priv,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Write PRIV to file in specified TYPE.  The file will be
truncated if it exists.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> PRIV to save.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be written,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to write to.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-parse" role="function">
<title>shishi_priv_parse ()</title>
<indexterm zone="shishi-priv-parse"><primary>shishi_priv_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_parse                   (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *priv);</programlisting>
<para>
Read ASCII armored DER encoded PRIV from file and populate given
variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-read" role="function">
<title>shishi_priv_read ()</title>
<indexterm zone="shishi-priv-read"><primary>shishi_priv_read</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_read                    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="FILE:CAPS">FILE</link> *fh,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *priv);</programlisting>
<para>
Read DER encoded PRIV from file and populate given variable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fh</parameter>&nbsp;:</term>
<listitem><simpara> file handle open for reading.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-from-file" role="function">
<title>shishi_priv_from_file ()</title>
<indexterm zone="shishi-priv-from-file"><primary>shishi_priv_from_file</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_from_file               (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> *priv,
                                                         <link linkend="int">int</link> filetype,
                                                         const <link linkend="char">char</link> *filename);</programlisting>
<para>
Read PRIV from file in specified TYPE.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> output variable with newly allocated PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filetype</parameter>&nbsp;:</term>
<listitem><simpara> input variable specifying type of file to be read,
           see Shishi_filetype.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> input variable with filename to read from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-enc-part-etype" role="function">
<title>shishi_priv_enc_part_etype ()</title>
<indexterm zone="shishi-priv-enc-part-etype"><primary>shishi_priv_enc_part_etype</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_enc_part_etype          (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> priv,
                                                         <link linkend="int32-t">int32_t</link> *etype);</programlisting>
<para>
Extract PRIV.enc-part.etype.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> PRIV variable to get value from.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> output variable that holds the value.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-set-enc-part" role="function">
<title>shishi_priv_set_enc_part ()</title>
<indexterm zone="shishi-priv-set-enc-part"><primary>shishi_priv_set_enc_part</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_set_enc_part            (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> priv,
                                                         <link linkend="int32-t">int32_t</link> etype,
                                                         const <link linkend="char">char</link> *encpart,
                                                         <link linkend="size-t">size_t</link> encpartlen);</programlisting>
<para>
Store encrypted data in PRIV.  The encrypted data is usually
created by calling <link linkend="shishi-encrypt"><function>shishi_encrypt()</function></link> on some application specific
data using the key from the ticket that is being used.  To save
time, you may want to use <link linkend="shishi-priv-build"><function>shishi_priv_build()</function></link> instead, which
encryptes the data and calls this function in one step.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> priv as allocated by <link linkend="shishi-priv"><function>shishi_priv()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>etype</parameter>&nbsp;:</term>
<listitem><simpara> input encryption type to store in PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encpart</parameter>&nbsp;:</term>
<listitem><simpara> input encrypted data to store in PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encpartlen</parameter>&nbsp;:</term>
<listitem><simpara> size of input encrypted data to store in PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encprivpart-user-data" role="function">
<title>shishi_encprivpart_user_data ()</title>
<indexterm zone="shishi-encprivpart-user-data"><primary>shishi_encprivpart_user_data</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encprivpart_user_data        (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encprivpart,
                                                         <link linkend="char">char</link> **userdata,
                                                         <link linkend="size-t">size_t</link> *userdatalen);</programlisting>
<para>
Read user data value from KRB-PRIV.  <parameter>userdata</parameter> is allocated by this
function, and it is the responsibility of caller to deallocate it.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encprivpart</parameter>&nbsp;:</term>
<listitem><simpara> encprivpart as allocated by <link linkend="shishi-priv"><function>shishi_priv()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdata</parameter>&nbsp;:</term>
<listitem><simpara> output array with newly allocated user data from KRB-PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdatalen</parameter>&nbsp;:</term>
<listitem><simpara> output size of output user data buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-encprivpart-set-user-data" role="function">
<title>shishi_encprivpart_set_user_data ()</title>
<indexterm zone="shishi-encprivpart-set-user-data"><primary>shishi_encprivpart_set_user_data</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_encprivpart_set_user_data    (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-asn1">Shishi_asn1</link> encprivpart,
                                                         const <link linkend="char">char</link> *userdata,
                                                         <link linkend="size-t">size_t</link> userdatalen);</programlisting>
<para>
Set the application data in PRIV.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>encprivpart</parameter>&nbsp;:</term>
<listitem><simpara> encprivpart as allocated by <link linkend="shishi-priv"><function>shishi_priv()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdata</parameter>&nbsp;:</term>
<listitem><simpara> input user application to store in PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userdatalen</parameter>&nbsp;:</term>
<listitem><simpara> size of input user application to store in PRIV.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-build" role="function">
<title>shishi_priv_build ()</title>
<indexterm zone="shishi-priv-build"><primary>shishi_priv_build</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_build                   (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Build checksum and set it in KRB-PRIV.  Note that this follows RFC
1510bis and is incompatible with RFC 1510, although presumably few
implementations use the RFC1510 algorithm.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> priv as allocated by <link linkend="shishi-priv"><function>shishi_priv()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key for session, used to encrypt data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-priv-process" role="function">
<title>shishi_priv_process ()</title>
<indexterm zone="shishi-priv-process"><primary>shishi_priv_process</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_priv_process                 (<link linkend="Shishi-priv">Shishi_priv</link> *priv,
                                                         <link linkend="Shishi-key">Shishi_key</link> *key);</programlisting>
<para>
Decrypt encrypted data in KRB-PRIV and set the EncPrivPart in the
PRIV exchange.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>priv</parameter>&nbsp;:</term>
<listitem><simpara> priv as allocated by <link linkend="shishi-priv"><function>shishi_priv()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&nbsp;:</term>
<listitem><simpara> key to use to decrypt EncPrivPart.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns SHISHI_OK iff successful,
  SHISHI_PRIV_BAD_KEYTYPE if an incompatible key type is used, or
  SHISHI_CRYPTO_ERROR if the actual decryption failed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authorized-p" role="function">
<title>shishi_authorized_p ()</title>
<indexterm zone="shishi-authorized-p"><primary>shishi_authorized_p</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authorized_p                 (<link linkend="Shishi">Shishi</link> *handle,
                                                         <link linkend="Shishi-tkt">Shishi_tkt</link> *tkt,
                                                         const <link linkend="char">char</link> *authzname);</programlisting>
<para>
Simplistic authorization of <parameter>authzname</parameter> against encrypted client
principal name inside ticket.  Currently this function only compare
the principal name with <parameter>authzname</parameter> using <link linkend="strcmp"><function>strcmp()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> shishi handle as allocated by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>tkt</parameter>&nbsp;:</term>
<listitem><simpara> input variable with ticket info.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authzname</parameter>&nbsp;:</term>
<listitem><simpara> authorization name.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns 1 if authzname is authorized for services by
  authenticated client principal, or 0 otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authorization-parse" role="function">
<title>shishi_authorization_parse ()</title>
<indexterm zone="shishi-authorization-parse"><primary>shishi_authorization_parse</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authorization_parse          (const <link linkend="char">char</link> *authorization);</programlisting>
<para>
Parse authorization type name.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>authorization</parameter>&nbsp;:</term>
<listitem><simpara> name of authorization type, e.g. "basic".
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Return authorization type corresponding to a string.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authorize-strcmp" role="function">
<title>shishi_authorize_strcmp ()</title>
<indexterm zone="shishi-authorize-strcmp"><primary>shishi_authorize_strcmp</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authorize_strcmp             (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *principal,
                                                         const <link linkend="char">char</link> *authzname);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>principal</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authzname</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-authorize-k5login" role="function">
<title>shishi_authorize_k5login ()</title>
<indexterm zone="shishi-authorize-k5login"><primary>shishi_authorize_k5login</primary></indexterm><programlisting><link linkend="int">int</link>                 shishi_authorize_k5login            (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *principal,
                                                         const <link linkend="char">char</link> *authzname);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>principal</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>authzname</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-x509ca-default-file-guess" role="function">
<title>shishi_x509ca_default_file_guess ()</title>
<indexterm zone="shishi-x509ca-default-file-guess"><primary>shishi_x509ca_default_file_guess</primary></indexterm><programlisting><link linkend="char">char</link>*               shishi_x509ca_default_file_guess    (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Guesses the default X.509 CA certificate filename; it is
$HOME/.shishi/client.ca.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns default X.509 client certificate filename as
  a string that has to be deallocated with <link linkend="free"><function>free()</function></link> by the caller.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-x509ca-default-file-set" role="function">
<title>shishi_x509ca_default_file_set ()</title>
<indexterm zone="shishi-x509ca-default-file-set"><primary>shishi_x509ca_default_file_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_x509ca_default_file_set      (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *x509cafile);</programlisting>
<para>
Set the default X.509 CA certificate filename used in the library.
The certificate is used during TLS connections with the KDC to
authenticate the KDC.  The string is copied into the library, so
you can dispose of the variable immediately after calling this
function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x509cafile</parameter>&nbsp;:</term>
<listitem><simpara> string with new default x509 client certificate file name,
  or NULL to reset to default.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-x509ca-default-file" role="function">
<title>shishi_x509ca_default_file ()</title>
<indexterm zone="shishi-x509ca-default-file"><primary>shishi_x509ca_default_file</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_x509ca_default_file          (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Get filename for default X.509 CA certificate.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the default X.509 CA certificate filename
  used in the library.  The certificate is used during TLS
  connections with the KDC to authenticate the KDC.  The string is
  not a copy, so don't modify or deallocate it.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-x509cert-default-file-guess" role="function">
<title>shishi_x509cert_default_file_guess ()</title>
<indexterm zone="shishi-x509cert-default-file-guess"><primary>shishi_x509cert_default_file_guess</primary></indexterm><programlisting><link linkend="char">char</link>*               shishi_x509cert_default_file_guess  (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Guesses the default X.509 client certificate filename; it is
$HOME/.shishi/client.certs.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns default X.509 client certificate filename as
  a string that has to be deallocated with <link linkend="free"><function>free()</function></link> by the caller.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-x509cert-default-file-set" role="function">
<title>shishi_x509cert_default_file_set ()</title>
<indexterm zone="shishi-x509cert-default-file-set"><primary>shishi_x509cert_default_file_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_x509cert_default_file_set    (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *x509certfile);</programlisting>
<para>
Set the default X.509 client certificate filename used in the
library.  The certificate is used during TLS connections with the
KDC to authenticate the client.  The string is copied into the
library, so you can dispose of the variable immediately after
calling this function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x509certfile</parameter>&nbsp;:</term>
<listitem><simpara> string with new default x509 client certificate file name,
  or NULL to reset to default.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-x509cert-default-file" role="function">
<title>shishi_x509cert_default_file ()</title>
<indexterm zone="shishi-x509cert-default-file"><primary>shishi_x509cert_default_file</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_x509cert_default_file        (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Get filename for default X.509 certificate.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the default X.509 client certificate filename
  used in the library.  The certificate is used during TLS
  connections with the KDC to authenticate the client.  The string is
  not a copy, so don't modify or deallocate it.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-x509key-default-file-guess" role="function">
<title>shishi_x509key_default_file_guess ()</title>
<indexterm zone="shishi-x509key-default-file-guess"><primary>shishi_x509key_default_file_guess</primary></indexterm><programlisting><link linkend="char">char</link>*               shishi_x509key_default_file_guess   (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Guesses the default X.509 client key filename; it is
$HOME/.shishi/client.key.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns default X.509 client key filename as
  a string that has to be deallocated with <link linkend="free"><function>free()</function></link> by the caller.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-x509key-default-file-set" role="function">
<title>shishi_x509key_default_file_set ()</title>
<indexterm zone="shishi-x509key-default-file-set"><primary>shishi_x509key_default_file_set</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_x509key_default_file_set     (<link linkend="Shishi">Shishi</link> *handle,
                                                         const <link linkend="char">char</link> *x509keyfile);</programlisting>
<para>
Set the default X.509 client key filename used in the library.  The
key is used during TLS connections with the KDC to authenticate the
client.  The string is copied into the library, so you can dispose
of the variable immediately after calling this function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>x509keyfile</parameter>&nbsp;:</term>
<listitem><simpara> string with new default x509 client key file name, or
  NULL to reset to default.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-x509key-default-file" role="function">
<title>shishi_x509key_default_file ()</title>
<indexterm zone="shishi-x509key-default-file"><primary>shishi_x509key_default_file</primary></indexterm><programlisting>const <link linkend="char">char</link>*         shishi_x509key_default_file         (<link linkend="Shishi">Shishi</link> *handle);</programlisting>
<para>
Get filename for default X.509 key.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> Shishi library handle create by <link linkend="shishi-init"><function>shishi_init()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns the default X.509 client key filename
  used in the library.  The key is used during TLS
  connections with the KDC to authenticate the client.  The string is
  not a copy, so don't modify or deallocate it.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-get-date" role="function">
<title>shishi_get_date ()</title>
<indexterm zone="shishi-get-date"><primary>shishi_get_date</primary></indexterm><programlisting><link linkend="time-t">time_t</link>              shishi_get_date                     (const <link linkend="char">char</link> *p,
                                                         const <link linkend="time-t">time_t</link> *now);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>p</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>now</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-xalloc-die" role="function">
<title>shishi_xalloc_die ()</title>
<indexterm zone="shishi-xalloc-die"><primary>shishi_xalloc_die</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_xalloc_die                   (void);</programlisting>
<para>

</para></refsect2>
<refsect2 id="shishi-resolv" role="function">
<title>shishi_resolv ()</title>
<indexterm zone="shishi-resolv"><primary>shishi_resolv</primary></indexterm><programlisting><link linkend="Shishi-dns">Shishi_dns</link>          shishi_resolv                       (const <link linkend="char">char</link> *zone,
                                                         <link linkend="uint16-t">uint16_t</link> querytype);</programlisting>
<para>
Query DNS resolver for data of type <parameter>querytype</parameter> at owner name <parameter>zone</parameter>.
Currently TXT and SRV types are supported.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>zone</parameter>&nbsp;:</term>
<listitem><simpara> owner name of data, e.g. "EXAMPLE.ORG"
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>querytype</parameter>&nbsp;:</term>
<listitem><simpara> type of data to query for, e.g., SHISHI_DNS_TXT.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Returns linked list of DNS records, or NULL if query
  failed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="shishi-resolv-free" role="function">
<title>shishi_resolv_free ()</title>
<indexterm zone="shishi-resolv-free"><primary>shishi_resolv_free</primary></indexterm><programlisting><link linkend="void">void</link>                shishi_resolv_free                  (<link linkend="Shishi-dns">Shishi_dns</link> rrs);</programlisting>
<para>
Deallocate list of DNS RR as returned by <link linkend="shishi-resolv"><function>shishi_resolv()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>rrs</parameter>&nbsp;:</term>
<listitem><simpara> list of DNS RR as returned by <link linkend="shishi-resolv"><function>shishi_resolv()</function></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
